"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/tlock-js";
exports.ids = ["vendor-chunks/tlock-js"];
exports.modules = {

/***/ "(ssr)/./node_modules/tlock-js/age/age-encrypt-decrypt.js":
/*!**********************************************************!*\
  !*** ./node_modules/tlock-js/age/age-encrypt-decrypt.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decryptAge = exports.encryptAge = void 0;\nconst hkdf_1 = __webpack_require__(/*! @noble/hashes/hkdf */ \"(ssr)/./node_modules/@noble/hashes/hkdf.js\");\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nconst stream_cipher_1 = __webpack_require__(/*! ./stream-cipher */ \"(ssr)/./node_modules/tlock-js/age/stream-cipher.js\");\nconst no_op_encdec_1 = __webpack_require__(/*! ./no-op-encdec */ \"(ssr)/./node_modules/tlock-js/age/no-op-encdec.js\");\nconst age_reader_writer_1 = __webpack_require__(/*! ./age-reader-writer */ \"(ssr)/./node_modules/tlock-js/age/age-reader-writer.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/tlock-js/age/utils.js\");\nconst utils_crypto_1 = __webpack_require__(/*! ./utils-crypto */ \"(ssr)/./node_modules/tlock-js/age/utils-crypto.js\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst ageVersion = \"age-encryption.org/v1\";\nconst headerMacMessage = \"header\"; // some plaintext used to generate the mac\nconst hkdfBodyMessage = \"payload\"; // some plaintext used for generating the key for encrypting the body\nconst fileKeyLengthBytes = 16;\nconst bodyHkdfNonceLengthBytes = 16;\nconst hkdfKeyLengthBytes = 32;\n// encrypts a plaintext payload using AGE by generating a fileKey\n// and passing the fileKey to another `EncryptionWrapper` for handling\nasync function encryptAge(plaintext, wrapFileKey = no_op_encdec_1.NoOpEncDec.wrap) {\n    const fileKey = await (0, utils_crypto_1.random)(fileKeyLengthBytes);\n    const recipients = await wrapFileKey(fileKey);\n    const body = await encryptedPayload(fileKey, plaintext);\n    return (0, age_reader_writer_1.writeAge)({\n        fileKey,\n        version: ageVersion,\n        recipients,\n        headerMacMessage,\n        body\n    });\n}\nexports.encryptAge = encryptAge;\nasync function encryptedPayload(fileKey, payload) {\n    const nonce = await (0, utils_crypto_1.random)(bodyHkdfNonceLengthBytes);\n    const hkdfKey = (0, hkdf_1.hkdf)(sha256_1.sha256, fileKey, nonce, buffer_1.Buffer.from(hkdfBodyMessage, \"utf8\"), hkdfKeyLengthBytes);\n    const ciphertext = stream_cipher_1.STREAM.seal(payload, hkdfKey);\n    return buffer_1.Buffer.concat([nonce, ciphertext]);\n}\n// decrypts a payload that has been encrypted using AGE can unwrap\n// any internal encryption by passing a `DecryptionWrapper` that can\n// provide the `fileKey` created during encryption\nasync function decryptAge(payload, unwrapFileKey = no_op_encdec_1.NoOpEncDec.unwrap) {\n    const encryptedPayload = (0, age_reader_writer_1.readAge)(payload);\n    const version = encryptedPayload.header.version;\n    if (version !== ageVersion) {\n        throw Error(`The payload version ${version} is not supported, only ${ageVersion}`);\n    }\n    const fileKey = await unwrapFileKey(encryptedPayload.header.recipients);\n    const header = (0, utils_1.sliceUntil)(payload, \"---\");\n    const expectedMac = (0, utils_1.unpaddedBase64Buffer)((0, utils_crypto_1.createMacKey)(fileKey, headerMacMessage, header));\n    const actualMac = encryptedPayload.header.mac;\n    if (buffer_1.Buffer.compare(actualMac, expectedMac) !== 0) {\n        throw Error(\"The MAC did not validate for the fileKey and payload!\");\n    }\n    const nonce = buffer_1.Buffer.from(encryptedPayload.body.slice(0, bodyHkdfNonceLengthBytes));\n    const cipherText = encryptedPayload.body.slice(bodyHkdfNonceLengthBytes);\n    const hkdfKey = (0, hkdf_1.hkdf)(sha256_1.sha256, fileKey, nonce, buffer_1.Buffer.from(hkdfBodyMessage, \"utf8\"), hkdfKeyLengthBytes);\n    const plaintext = stream_cipher_1.STREAM.open(cipherText, hkdfKey);\n    return buffer_1.Buffer.from(plaintext);\n}\nexports.decryptAge = decryptAge;\n//# sourceMappingURL=age-encrypt-decrypt.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvYWdlL2FnZS1lbmNyeXB0LWRlY3J5cHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCLEdBQUcsa0JBQWtCO0FBQ3ZDLGVBQWUsbUJBQU8sQ0FBQyxzRUFBb0I7QUFDM0MsaUJBQWlCLG1CQUFPLENBQUMsMEVBQXNCO0FBQy9DLHdCQUF3QixtQkFBTyxDQUFDLDJFQUFpQjtBQUNqRCx1QkFBdUIsbUJBQU8sQ0FBQyx5RUFBZ0I7QUFDL0MsNEJBQTRCLG1CQUFPLENBQUMsbUZBQXFCO0FBQ3pELGdCQUFnQixtQkFBTyxDQUFDLDJEQUFTO0FBQ2pDLHVCQUF1QixtQkFBTyxDQUFDLHlFQUFnQjtBQUMvQyxpQkFBaUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqQztBQUNBLG1DQUFtQztBQUNuQyxtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLFNBQVMseUJBQXlCLFdBQVc7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpd2ktYXBwLy4vbm9kZV9tb2R1bGVzL3Rsb2NrLWpzL2FnZS9hZ2UtZW5jcnlwdC1kZWNyeXB0LmpzP2IzODQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY3J5cHRBZ2UgPSBleHBvcnRzLmVuY3J5cHRBZ2UgPSB2b2lkIDA7XG5jb25zdCBoa2RmXzEgPSByZXF1aXJlKFwiQG5vYmxlL2hhc2hlcy9oa2RmXCIpO1xuY29uc3Qgc2hhMjU2XzEgPSByZXF1aXJlKFwiQG5vYmxlL2hhc2hlcy9zaGEyNTZcIik7XG5jb25zdCBzdHJlYW1fY2lwaGVyXzEgPSByZXF1aXJlKFwiLi9zdHJlYW0tY2lwaGVyXCIpO1xuY29uc3Qgbm9fb3BfZW5jZGVjXzEgPSByZXF1aXJlKFwiLi9uby1vcC1lbmNkZWNcIik7XG5jb25zdCBhZ2VfcmVhZGVyX3dyaXRlcl8xID0gcmVxdWlyZShcIi4vYWdlLXJlYWRlci13cml0ZXJcIik7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5jb25zdCB1dGlsc19jcnlwdG9fMSA9IHJlcXVpcmUoXCIuL3V0aWxzLWNyeXB0b1wiKTtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlclwiKTtcbmNvbnN0IGFnZVZlcnNpb24gPSBcImFnZS1lbmNyeXB0aW9uLm9yZy92MVwiO1xuY29uc3QgaGVhZGVyTWFjTWVzc2FnZSA9IFwiaGVhZGVyXCI7IC8vIHNvbWUgcGxhaW50ZXh0IHVzZWQgdG8gZ2VuZXJhdGUgdGhlIG1hY1xuY29uc3QgaGtkZkJvZHlNZXNzYWdlID0gXCJwYXlsb2FkXCI7IC8vIHNvbWUgcGxhaW50ZXh0IHVzZWQgZm9yIGdlbmVyYXRpbmcgdGhlIGtleSBmb3IgZW5jcnlwdGluZyB0aGUgYm9keVxuY29uc3QgZmlsZUtleUxlbmd0aEJ5dGVzID0gMTY7XG5jb25zdCBib2R5SGtkZk5vbmNlTGVuZ3RoQnl0ZXMgPSAxNjtcbmNvbnN0IGhrZGZLZXlMZW5ndGhCeXRlcyA9IDMyO1xuLy8gZW5jcnlwdHMgYSBwbGFpbnRleHQgcGF5bG9hZCB1c2luZyBBR0UgYnkgZ2VuZXJhdGluZyBhIGZpbGVLZXlcbi8vIGFuZCBwYXNzaW5nIHRoZSBmaWxlS2V5IHRvIGFub3RoZXIgYEVuY3J5cHRpb25XcmFwcGVyYCBmb3IgaGFuZGxpbmdcbmFzeW5jIGZ1bmN0aW9uIGVuY3J5cHRBZ2UocGxhaW50ZXh0LCB3cmFwRmlsZUtleSA9IG5vX29wX2VuY2RlY18xLk5vT3BFbmNEZWMud3JhcCkge1xuICAgIGNvbnN0IGZpbGVLZXkgPSBhd2FpdCAoMCwgdXRpbHNfY3J5cHRvXzEucmFuZG9tKShmaWxlS2V5TGVuZ3RoQnl0ZXMpO1xuICAgIGNvbnN0IHJlY2lwaWVudHMgPSBhd2FpdCB3cmFwRmlsZUtleShmaWxlS2V5KTtcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgZW5jcnlwdGVkUGF5bG9hZChmaWxlS2V5LCBwbGFpbnRleHQpO1xuICAgIHJldHVybiAoMCwgYWdlX3JlYWRlcl93cml0ZXJfMS53cml0ZUFnZSkoe1xuICAgICAgICBmaWxlS2V5LFxuICAgICAgICB2ZXJzaW9uOiBhZ2VWZXJzaW9uLFxuICAgICAgICByZWNpcGllbnRzLFxuICAgICAgICBoZWFkZXJNYWNNZXNzYWdlLFxuICAgICAgICBib2R5XG4gICAgfSk7XG59XG5leHBvcnRzLmVuY3J5cHRBZ2UgPSBlbmNyeXB0QWdlO1xuYXN5bmMgZnVuY3Rpb24gZW5jcnlwdGVkUGF5bG9hZChmaWxlS2V5LCBwYXlsb2FkKSB7XG4gICAgY29uc3Qgbm9uY2UgPSBhd2FpdCAoMCwgdXRpbHNfY3J5cHRvXzEucmFuZG9tKShib2R5SGtkZk5vbmNlTGVuZ3RoQnl0ZXMpO1xuICAgIGNvbnN0IGhrZGZLZXkgPSAoMCwgaGtkZl8xLmhrZGYpKHNoYTI1Nl8xLnNoYTI1NiwgZmlsZUtleSwgbm9uY2UsIGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKGhrZGZCb2R5TWVzc2FnZSwgXCJ1dGY4XCIpLCBoa2RmS2V5TGVuZ3RoQnl0ZXMpO1xuICAgIGNvbnN0IGNpcGhlcnRleHQgPSBzdHJlYW1fY2lwaGVyXzEuU1RSRUFNLnNlYWwocGF5bG9hZCwgaGtkZktleSk7XG4gICAgcmV0dXJuIGJ1ZmZlcl8xLkJ1ZmZlci5jb25jYXQoW25vbmNlLCBjaXBoZXJ0ZXh0XSk7XG59XG4vLyBkZWNyeXB0cyBhIHBheWxvYWQgdGhhdCBoYXMgYmVlbiBlbmNyeXB0ZWQgdXNpbmcgQUdFIGNhbiB1bndyYXBcbi8vIGFueSBpbnRlcm5hbCBlbmNyeXB0aW9uIGJ5IHBhc3NpbmcgYSBgRGVjcnlwdGlvbldyYXBwZXJgIHRoYXQgY2FuXG4vLyBwcm92aWRlIHRoZSBgZmlsZUtleWAgY3JlYXRlZCBkdXJpbmcgZW5jcnlwdGlvblxuYXN5bmMgZnVuY3Rpb24gZGVjcnlwdEFnZShwYXlsb2FkLCB1bndyYXBGaWxlS2V5ID0gbm9fb3BfZW5jZGVjXzEuTm9PcEVuY0RlYy51bndyYXApIHtcbiAgICBjb25zdCBlbmNyeXB0ZWRQYXlsb2FkID0gKDAsIGFnZV9yZWFkZXJfd3JpdGVyXzEucmVhZEFnZSkocGF5bG9hZCk7XG4gICAgY29uc3QgdmVyc2lvbiA9IGVuY3J5cHRlZFBheWxvYWQuaGVhZGVyLnZlcnNpb247XG4gICAgaWYgKHZlcnNpb24gIT09IGFnZVZlcnNpb24pIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoYFRoZSBwYXlsb2FkIHZlcnNpb24gJHt2ZXJzaW9ufSBpcyBub3Qgc3VwcG9ydGVkLCBvbmx5ICR7YWdlVmVyc2lvbn1gKTtcbiAgICB9XG4gICAgY29uc3QgZmlsZUtleSA9IGF3YWl0IHVud3JhcEZpbGVLZXkoZW5jcnlwdGVkUGF5bG9hZC5oZWFkZXIucmVjaXBpZW50cyk7XG4gICAgY29uc3QgaGVhZGVyID0gKDAsIHV0aWxzXzEuc2xpY2VVbnRpbCkocGF5bG9hZCwgXCItLS1cIik7XG4gICAgY29uc3QgZXhwZWN0ZWRNYWMgPSAoMCwgdXRpbHNfMS51bnBhZGRlZEJhc2U2NEJ1ZmZlcikoKDAsIHV0aWxzX2NyeXB0b18xLmNyZWF0ZU1hY0tleSkoZmlsZUtleSwgaGVhZGVyTWFjTWVzc2FnZSwgaGVhZGVyKSk7XG4gICAgY29uc3QgYWN0dWFsTWFjID0gZW5jcnlwdGVkUGF5bG9hZC5oZWFkZXIubWFjO1xuICAgIGlmIChidWZmZXJfMS5CdWZmZXIuY29tcGFyZShhY3R1YWxNYWMsIGV4cGVjdGVkTWFjKSAhPT0gMCkge1xuICAgICAgICB0aHJvdyBFcnJvcihcIlRoZSBNQUMgZGlkIG5vdCB2YWxpZGF0ZSBmb3IgdGhlIGZpbGVLZXkgYW5kIHBheWxvYWQhXCIpO1xuICAgIH1cbiAgICBjb25zdCBub25jZSA9IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKGVuY3J5cHRlZFBheWxvYWQuYm9keS5zbGljZSgwLCBib2R5SGtkZk5vbmNlTGVuZ3RoQnl0ZXMpKTtcbiAgICBjb25zdCBjaXBoZXJUZXh0ID0gZW5jcnlwdGVkUGF5bG9hZC5ib2R5LnNsaWNlKGJvZHlIa2RmTm9uY2VMZW5ndGhCeXRlcyk7XG4gICAgY29uc3QgaGtkZktleSA9ICgwLCBoa2RmXzEuaGtkZikoc2hhMjU2XzEuc2hhMjU2LCBmaWxlS2V5LCBub25jZSwgYnVmZmVyXzEuQnVmZmVyLmZyb20oaGtkZkJvZHlNZXNzYWdlLCBcInV0ZjhcIiksIGhrZGZLZXlMZW5ndGhCeXRlcyk7XG4gICAgY29uc3QgcGxhaW50ZXh0ID0gc3RyZWFtX2NpcGhlcl8xLlNUUkVBTS5vcGVuKGNpcGhlclRleHQsIGhrZGZLZXkpO1xuICAgIHJldHVybiBidWZmZXJfMS5CdWZmZXIuZnJvbShwbGFpbnRleHQpO1xufVxuZXhwb3J0cy5kZWNyeXB0QWdlID0gZGVjcnlwdEFnZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFnZS1lbmNyeXB0LWRlY3J5cHQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/age/age-encrypt-decrypt.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/age/age-reader-writer.js":
/*!********************************************************!*\
  !*** ./node_modules/tlock-js/age/age-reader-writer.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.readAge = exports.header = exports.writeAge = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/tlock-js/age/utils.js\");\nconst utils_crypto_1 = __webpack_require__(/*! ./utils-crypto */ \"(ssr)/./node_modules/tlock-js/age/utils-crypto.js\");\n// takes the model to be encrypted and encodes everything to a string\n// inserting newlines, other tags and the hmac as per the spec\nfunction writeAge(input) {\n    const headerStr = header(input);\n    const macKey = mac((0, utils_crypto_1.createMacKey)(input.fileKey, input.headerMacMessage, headerStr));\n    const payload = buffer_1.Buffer.from(input.body).toString(\"binary\");\n    return `${headerStr} ${macKey}\\n${payload}`;\n}\nexports.writeAge = writeAge;\n// ends with a `---`, as this is included in the header when\n// calculating the MAC\nfunction header(input) {\n    return `${input.version}\\n${recipients(input.recipients)}---`;\n}\nexports.header = header;\nconst recipients = (stanzas) => stanzas.map(it => recipient(it) + \"\\n\");\nconst recipient = (stanza) => {\n    const type = stanza.type;\n    const aggregatedArgs = stanza.args.join(\" \");\n    const encodedBody = (0, utils_1.unpaddedBase64)(stanza.body);\n    const chunkedEncodedBody = (0, utils_1.chunked)(encodedBody, 64).join(\"\\n\");\n    return `-> ${type} ${aggregatedArgs}\\n` + chunkedEncodedBody;\n};\n// The `---` preceding the MAC is technically part of the MAC-able text\n// so it's included in the header instead\nconst mac = (macStr) => (0, utils_1.unpaddedBase64)(macStr);\n// parses an AGE encrypted string into a model object with all the\n// relevant parts encoded correctly\n// throws an error if things are missing, in the wrong place or cannot\n// be parsed\nfunction readAge(input) {\n    const [version, ...lines] = input.split(\"\\n\");\n    const recipients = parseRecipients(lines);\n    const macStartingTag = \"--- \";\n    const macLine = lines.shift();\n    if (!macLine || !macLine.startsWith(macStartingTag)) {\n        throw Error(\"Expected mac, but there were no more lines left!\");\n    }\n    const mac = buffer_1.Buffer.from(macLine.slice(macStartingTag.length, macLine.length), \"base64\");\n    // any remaining newlines are actually part of the payload\n    const ciphertext = buffer_1.Buffer.from(lines.join(\"\\n\") ?? \"\", \"binary\");\n    return {\n        header: { version, recipients, mac },\n        body: ciphertext\n    };\n}\nexports.readAge = readAge;\n// validates the code points of the characters of the args in line with the go implementation\n// see: https://github.com/FiloSottile/age/blob/8e3f74c283b2e9b3cd0ec661fa4008504e536d20/internal/format/format.go#L301\nfunction validateArguments(args) {\n    args.forEach(arg => {\n        for (let i = 0; i < arg.length; i++) {\n            const charCode = arg.charCodeAt(i);\n            if (charCode < 33 || charCode > 126) {\n                throw Error(`Invalid character ${arg[i]} in argument ${arg}`);\n            }\n        }\n    });\n}\n// parses all the recipient stanzas from `lines`\n// modifies `lines`!!\nfunction parseRecipients(lines) {\n    const recipients = [];\n    for (let current = peek(lines); current != null && current.startsWith(\"->\"); current = peek(lines)) {\n        const [type, ...args] = current.slice(3, current.length).split(\" \");\n        lines.shift();\n        validateArguments(args);\n        const body = parseRecipientBody(lines);\n        if (!body) {\n            throw Error(`expected stanza '${type} to have a body, but it didn't`);\n        }\n        recipients.push({ type, args, body: buffer_1.Buffer.from(body, \"base64\") });\n    }\n    if (recipients.length === 0) {\n        throw Error(\"Expected at least one stanza! (beginning with -->)\");\n    }\n    return recipients;\n}\nfunction parseRecipientBody(lines) {\n    let body = \"\";\n    for (let next = peek(lines); next != null; next = peek(lines)) {\n        body += lines.shift();\n        if (next.length < 64) {\n            break;\n        }\n    }\n    return body;\n}\nfunction peek(arr) {\n    return arr[0];\n}\n//# sourceMappingURL=age-reader-writer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvYWdlL2FnZS1yZWFkZXItd3JpdGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWUsR0FBRyxjQUFjLEdBQUcsZ0JBQWdCO0FBQ25ELGlCQUFpQixtQkFBTyxDQUFDLHNCQUFRO0FBQ2pDLGdCQUFnQixtQkFBTyxDQUFDLDJEQUFTO0FBQ2pDLHVCQUF1QixtQkFBTyxDQUFDLHlFQUFnQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFdBQVcsRUFBRSxPQUFPLElBQUksUUFBUTtBQUM5QztBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxjQUFjLGNBQWMsSUFBSSw2QkFBNkI7QUFDN0Q7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLE1BQU0sRUFBRSxlQUFlO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsMEJBQTBCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnQkFBZ0I7QUFDeEM7QUFDQTtBQUNBLGlEQUFpRCxRQUFRLGNBQWMsSUFBSTtBQUMzRTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsNkNBQTZDO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsTUFBTTtBQUNsRDtBQUNBLDBCQUEwQix3REFBd0Q7QUFDbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxjQUFjO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXdpLWFwcC8uL25vZGVfbW9kdWxlcy90bG9jay1qcy9hZ2UvYWdlLXJlYWRlci13cml0ZXIuanM/NTkxOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmVhZEFnZSA9IGV4cG9ydHMuaGVhZGVyID0gZXhwb3J0cy53cml0ZUFnZSA9IHZvaWQgMDtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlclwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNvbnN0IHV0aWxzX2NyeXB0b18xID0gcmVxdWlyZShcIi4vdXRpbHMtY3J5cHRvXCIpO1xuLy8gdGFrZXMgdGhlIG1vZGVsIHRvIGJlIGVuY3J5cHRlZCBhbmQgZW5jb2RlcyBldmVyeXRoaW5nIHRvIGEgc3RyaW5nXG4vLyBpbnNlcnRpbmcgbmV3bGluZXMsIG90aGVyIHRhZ3MgYW5kIHRoZSBobWFjIGFzIHBlciB0aGUgc3BlY1xuZnVuY3Rpb24gd3JpdGVBZ2UoaW5wdXQpIHtcbiAgICBjb25zdCBoZWFkZXJTdHIgPSBoZWFkZXIoaW5wdXQpO1xuICAgIGNvbnN0IG1hY0tleSA9IG1hYygoMCwgdXRpbHNfY3J5cHRvXzEuY3JlYXRlTWFjS2V5KShpbnB1dC5maWxlS2V5LCBpbnB1dC5oZWFkZXJNYWNNZXNzYWdlLCBoZWFkZXJTdHIpKTtcbiAgICBjb25zdCBwYXlsb2FkID0gYnVmZmVyXzEuQnVmZmVyLmZyb20oaW5wdXQuYm9keSkudG9TdHJpbmcoXCJiaW5hcnlcIik7XG4gICAgcmV0dXJuIGAke2hlYWRlclN0cn0gJHttYWNLZXl9XFxuJHtwYXlsb2FkfWA7XG59XG5leHBvcnRzLndyaXRlQWdlID0gd3JpdGVBZ2U7XG4vLyBlbmRzIHdpdGggYSBgLS0tYCwgYXMgdGhpcyBpcyBpbmNsdWRlZCBpbiB0aGUgaGVhZGVyIHdoZW5cbi8vIGNhbGN1bGF0aW5nIHRoZSBNQUNcbmZ1bmN0aW9uIGhlYWRlcihpbnB1dCkge1xuICAgIHJldHVybiBgJHtpbnB1dC52ZXJzaW9ufVxcbiR7cmVjaXBpZW50cyhpbnB1dC5yZWNpcGllbnRzKX0tLS1gO1xufVxuZXhwb3J0cy5oZWFkZXIgPSBoZWFkZXI7XG5jb25zdCByZWNpcGllbnRzID0gKHN0YW56YXMpID0+IHN0YW56YXMubWFwKGl0ID0+IHJlY2lwaWVudChpdCkgKyBcIlxcblwiKTtcbmNvbnN0IHJlY2lwaWVudCA9IChzdGFuemEpID0+IHtcbiAgICBjb25zdCB0eXBlID0gc3RhbnphLnR5cGU7XG4gICAgY29uc3QgYWdncmVnYXRlZEFyZ3MgPSBzdGFuemEuYXJncy5qb2luKFwiIFwiKTtcbiAgICBjb25zdCBlbmNvZGVkQm9keSA9ICgwLCB1dGlsc18xLnVucGFkZGVkQmFzZTY0KShzdGFuemEuYm9keSk7XG4gICAgY29uc3QgY2h1bmtlZEVuY29kZWRCb2R5ID0gKDAsIHV0aWxzXzEuY2h1bmtlZCkoZW5jb2RlZEJvZHksIDY0KS5qb2luKFwiXFxuXCIpO1xuICAgIHJldHVybiBgLT4gJHt0eXBlfSAke2FnZ3JlZ2F0ZWRBcmdzfVxcbmAgKyBjaHVua2VkRW5jb2RlZEJvZHk7XG59O1xuLy8gVGhlIGAtLS1gIHByZWNlZGluZyB0aGUgTUFDIGlzIHRlY2huaWNhbGx5IHBhcnQgb2YgdGhlIE1BQy1hYmxlIHRleHRcbi8vIHNvIGl0J3MgaW5jbHVkZWQgaW4gdGhlIGhlYWRlciBpbnN0ZWFkXG5jb25zdCBtYWMgPSAobWFjU3RyKSA9PiAoMCwgdXRpbHNfMS51bnBhZGRlZEJhc2U2NCkobWFjU3RyKTtcbi8vIHBhcnNlcyBhbiBBR0UgZW5jcnlwdGVkIHN0cmluZyBpbnRvIGEgbW9kZWwgb2JqZWN0IHdpdGggYWxsIHRoZVxuLy8gcmVsZXZhbnQgcGFydHMgZW5jb2RlZCBjb3JyZWN0bHlcbi8vIHRocm93cyBhbiBlcnJvciBpZiB0aGluZ3MgYXJlIG1pc3NpbmcsIGluIHRoZSB3cm9uZyBwbGFjZSBvciBjYW5ub3Rcbi8vIGJlIHBhcnNlZFxuZnVuY3Rpb24gcmVhZEFnZShpbnB1dCkge1xuICAgIGNvbnN0IFt2ZXJzaW9uLCAuLi5saW5lc10gPSBpbnB1dC5zcGxpdChcIlxcblwiKTtcbiAgICBjb25zdCByZWNpcGllbnRzID0gcGFyc2VSZWNpcGllbnRzKGxpbmVzKTtcbiAgICBjb25zdCBtYWNTdGFydGluZ1RhZyA9IFwiLS0tIFwiO1xuICAgIGNvbnN0IG1hY0xpbmUgPSBsaW5lcy5zaGlmdCgpO1xuICAgIGlmICghbWFjTGluZSB8fCAhbWFjTGluZS5zdGFydHNXaXRoKG1hY1N0YXJ0aW5nVGFnKSkge1xuICAgICAgICB0aHJvdyBFcnJvcihcIkV4cGVjdGVkIG1hYywgYnV0IHRoZXJlIHdlcmUgbm8gbW9yZSBsaW5lcyBsZWZ0IVwiKTtcbiAgICB9XG4gICAgY29uc3QgbWFjID0gYnVmZmVyXzEuQnVmZmVyLmZyb20obWFjTGluZS5zbGljZShtYWNTdGFydGluZ1RhZy5sZW5ndGgsIG1hY0xpbmUubGVuZ3RoKSwgXCJiYXNlNjRcIik7XG4gICAgLy8gYW55IHJlbWFpbmluZyBuZXdsaW5lcyBhcmUgYWN0dWFsbHkgcGFydCBvZiB0aGUgcGF5bG9hZFxuICAgIGNvbnN0IGNpcGhlcnRleHQgPSBidWZmZXJfMS5CdWZmZXIuZnJvbShsaW5lcy5qb2luKFwiXFxuXCIpID8/IFwiXCIsIFwiYmluYXJ5XCIpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGhlYWRlcjogeyB2ZXJzaW9uLCByZWNpcGllbnRzLCBtYWMgfSxcbiAgICAgICAgYm9keTogY2lwaGVydGV4dFxuICAgIH07XG59XG5leHBvcnRzLnJlYWRBZ2UgPSByZWFkQWdlO1xuLy8gdmFsaWRhdGVzIHRoZSBjb2RlIHBvaW50cyBvZiB0aGUgY2hhcmFjdGVycyBvZiB0aGUgYXJncyBpbiBsaW5lIHdpdGggdGhlIGdvIGltcGxlbWVudGF0aW9uXG4vLyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9GaWxvU290dGlsZS9hZ2UvYmxvYi84ZTNmNzRjMjgzYjJlOWIzY2QwZWM2NjFmYTQwMDg1MDRlNTM2ZDIwL2ludGVybmFsL2Zvcm1hdC9mb3JtYXQuZ28jTDMwMVxuZnVuY3Rpb24gdmFsaWRhdGVBcmd1bWVudHMoYXJncykge1xuICAgIGFyZ3MuZm9yRWFjaChhcmcgPT4ge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyZy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgY2hhckNvZGUgPSBhcmcuY2hhckNvZGVBdChpKTtcbiAgICAgICAgICAgIGlmIChjaGFyQ29kZSA8IDMzIHx8IGNoYXJDb2RlID4gMTI2KSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoYEludmFsaWQgY2hhcmFjdGVyICR7YXJnW2ldfSBpbiBhcmd1bWVudCAke2FyZ31gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xufVxuLy8gcGFyc2VzIGFsbCB0aGUgcmVjaXBpZW50IHN0YW56YXMgZnJvbSBgbGluZXNgXG4vLyBtb2RpZmllcyBgbGluZXNgISFcbmZ1bmN0aW9uIHBhcnNlUmVjaXBpZW50cyhsaW5lcykge1xuICAgIGNvbnN0IHJlY2lwaWVudHMgPSBbXTtcbiAgICBmb3IgKGxldCBjdXJyZW50ID0gcGVlayhsaW5lcyk7IGN1cnJlbnQgIT0gbnVsbCAmJiBjdXJyZW50LnN0YXJ0c1dpdGgoXCItPlwiKTsgY3VycmVudCA9IHBlZWsobGluZXMpKSB7XG4gICAgICAgIGNvbnN0IFt0eXBlLCAuLi5hcmdzXSA9IGN1cnJlbnQuc2xpY2UoMywgY3VycmVudC5sZW5ndGgpLnNwbGl0KFwiIFwiKTtcbiAgICAgICAgbGluZXMuc2hpZnQoKTtcbiAgICAgICAgdmFsaWRhdGVBcmd1bWVudHMoYXJncyk7XG4gICAgICAgIGNvbnN0IGJvZHkgPSBwYXJzZVJlY2lwaWVudEJvZHkobGluZXMpO1xuICAgICAgICBpZiAoIWJvZHkpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBleHBlY3RlZCBzdGFuemEgJyR7dHlwZX0gdG8gaGF2ZSBhIGJvZHksIGJ1dCBpdCBkaWRuJ3RgKTtcbiAgICAgICAgfVxuICAgICAgICByZWNpcGllbnRzLnB1c2goeyB0eXBlLCBhcmdzLCBib2R5OiBidWZmZXJfMS5CdWZmZXIuZnJvbShib2R5LCBcImJhc2U2NFwiKSB9KTtcbiAgICB9XG4gICAgaWYgKHJlY2lwaWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiRXhwZWN0ZWQgYXQgbGVhc3Qgb25lIHN0YW56YSEgKGJlZ2lubmluZyB3aXRoIC0tPilcIik7XG4gICAgfVxuICAgIHJldHVybiByZWNpcGllbnRzO1xufVxuZnVuY3Rpb24gcGFyc2VSZWNpcGllbnRCb2R5KGxpbmVzKSB7XG4gICAgbGV0IGJvZHkgPSBcIlwiO1xuICAgIGZvciAobGV0IG5leHQgPSBwZWVrKGxpbmVzKTsgbmV4dCAhPSBudWxsOyBuZXh0ID0gcGVlayhsaW5lcykpIHtcbiAgICAgICAgYm9keSArPSBsaW5lcy5zaGlmdCgpO1xuICAgICAgICBpZiAobmV4dC5sZW5ndGggPCA2NCkge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGJvZHk7XG59XG5mdW5jdGlvbiBwZWVrKGFycikge1xuICAgIHJldHVybiBhcnJbMF07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZ2UtcmVhZGVyLXdyaXRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/age/age-reader-writer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/age/armor.js":
/*!********************************************!*\
  !*** ./node_modules/tlock-js/age/armor.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isProbablyArmored = exports.decodeArmor = exports.encodeArmor = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/tlock-js/age/utils.js\");\nconst header = \"-----BEGIN AGE ENCRYPTED FILE-----\";\nconst footer = \"-----END AGE ENCRYPTED FILE-----\";\n// takes some payload and encodes it as armor with the AGE armor headers in lines of size `chunkSize`\nfunction encodeArmor(input, chunkSize = 64) {\n    const base64Input = buffer_1.Buffer.from(input, \"binary\").toString(\"base64\");\n    const columnisedInput = (0, utils_1.chunked)(base64Input, chunkSize).join(\"\\n\");\n    // if the last line is exactly 64 columns, add an extra newline\n    let paddedFooter = footer;\n    if (columnisedInput.length > 0 && columnisedInput[columnisedInput.length - 1].length === 64) {\n        paddedFooter = \"\\n\" + footer;\n    }\n    return `${header}\\n${columnisedInput}\\n${paddedFooter}\\n`;\n}\nexports.encodeArmor = encodeArmor;\n// takes an armored payload and decodes it if it is an AGE armor payload\n// and it satisfies some security properties\nfunction decodeArmor(armor, chunkSize = 64) {\n    // could start/end with space or newlines, let's strip them\n    armor = armor.trimStart();\n    const lengthBeforeEndTrim = armor.length;\n    armor = armor.trimEnd();\n    const lengthAfterTrim = armor.length;\n    // for compliance with the go age implementation, we deny more than 1024 whitespace chars:\n    // see: https://github.com/FiloSottile/age/blob/8e3f74c283b2e9b3cd0ec661fa4008504e536d20/armor/armor.go#L104\n    const trimmedWhitespace = lengthBeforeEndTrim - lengthAfterTrim;\n    if (trimmedWhitespace > 1024) {\n        throw Error(\"too much whitespace at the end of the armor payload\");\n    }\n    if (!armor.startsWith(header)) {\n        throw Error(`Armor cannot be decoded if it does not start with a header! i.e. ${header}`);\n    }\n    if (!armor.endsWith(footer)) {\n        throw Error(`Armor cannot be decoded if it does not end with a footer! i.e. ${footer}`);\n    }\n    const base64Payload = armor.slice(header.length, armor.length - footer.length);\n    const lines = base64Payload.split(\"\\n\");\n    if (lines.some(line => line.length > chunkSize)) {\n        throw Error(`Armor to decode cannot have lines longer than ${chunkSize} (configurable) in order to stop padding attacks`);\n    }\n    if (lines[lines.length - 1].length >= chunkSize) {\n        throw Error(`The last line of an armored payload must be less than ${chunkSize} (configurable) to stop padding attacks`);\n    }\n    return buffer_1.Buffer.from(base64Payload, \"base64\").toString(\"binary\");\n}\nexports.decodeArmor = decodeArmor;\nfunction isProbablyArmored(input) {\n    return input.startsWith(header);\n}\nexports.isProbablyArmored = isProbablyArmored;\n//# sourceMappingURL=armor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvYWdlL2FybW9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QixHQUFHLG1CQUFtQixHQUFHLG1CQUFtQjtBQUNyRSxpQkFBaUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqQyxnQkFBZ0IsbUJBQU8sQ0FBQywyREFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxPQUFPLElBQUksZ0JBQWdCLElBQUksYUFBYTtBQUMxRDtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RkFBd0YsT0FBTztBQUMvRjtBQUNBO0FBQ0Esc0ZBQXNGLE9BQU87QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUUsV0FBVztBQUNoRjtBQUNBO0FBQ0EsNkVBQTZFLFdBQVc7QUFDeEY7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpd2ktYXBwLy4vbm9kZV9tb2R1bGVzL3Rsb2NrLWpzL2FnZS9hcm1vci5qcz9jNDhkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1Byb2JhYmx5QXJtb3JlZCA9IGV4cG9ydHMuZGVjb2RlQXJtb3IgPSBleHBvcnRzLmVuY29kZUFybW9yID0gdm9pZCAwO1xuY29uc3QgYnVmZmVyXzEgPSByZXF1aXJlKFwiYnVmZmVyXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY29uc3QgaGVhZGVyID0gXCItLS0tLUJFR0lOIEFHRSBFTkNSWVBURUQgRklMRS0tLS0tXCI7XG5jb25zdCBmb290ZXIgPSBcIi0tLS0tRU5EIEFHRSBFTkNSWVBURUQgRklMRS0tLS0tXCI7XG4vLyB0YWtlcyBzb21lIHBheWxvYWQgYW5kIGVuY29kZXMgaXQgYXMgYXJtb3Igd2l0aCB0aGUgQUdFIGFybW9yIGhlYWRlcnMgaW4gbGluZXMgb2Ygc2l6ZSBgY2h1bmtTaXplYFxuZnVuY3Rpb24gZW5jb2RlQXJtb3IoaW5wdXQsIGNodW5rU2l6ZSA9IDY0KSB7XG4gICAgY29uc3QgYmFzZTY0SW5wdXQgPSBidWZmZXJfMS5CdWZmZXIuZnJvbShpbnB1dCwgXCJiaW5hcnlcIikudG9TdHJpbmcoXCJiYXNlNjRcIik7XG4gICAgY29uc3QgY29sdW1uaXNlZElucHV0ID0gKDAsIHV0aWxzXzEuY2h1bmtlZCkoYmFzZTY0SW5wdXQsIGNodW5rU2l6ZSkuam9pbihcIlxcblwiKTtcbiAgICAvLyBpZiB0aGUgbGFzdCBsaW5lIGlzIGV4YWN0bHkgNjQgY29sdW1ucywgYWRkIGFuIGV4dHJhIG5ld2xpbmVcbiAgICBsZXQgcGFkZGVkRm9vdGVyID0gZm9vdGVyO1xuICAgIGlmIChjb2x1bW5pc2VkSW5wdXQubGVuZ3RoID4gMCAmJiBjb2x1bW5pc2VkSW5wdXRbY29sdW1uaXNlZElucHV0Lmxlbmd0aCAtIDFdLmxlbmd0aCA9PT0gNjQpIHtcbiAgICAgICAgcGFkZGVkRm9vdGVyID0gXCJcXG5cIiArIGZvb3RlcjtcbiAgICB9XG4gICAgcmV0dXJuIGAke2hlYWRlcn1cXG4ke2NvbHVtbmlzZWRJbnB1dH1cXG4ke3BhZGRlZEZvb3Rlcn1cXG5gO1xufVxuZXhwb3J0cy5lbmNvZGVBcm1vciA9IGVuY29kZUFybW9yO1xuLy8gdGFrZXMgYW4gYXJtb3JlZCBwYXlsb2FkIGFuZCBkZWNvZGVzIGl0IGlmIGl0IGlzIGFuIEFHRSBhcm1vciBwYXlsb2FkXG4vLyBhbmQgaXQgc2F0aXNmaWVzIHNvbWUgc2VjdXJpdHkgcHJvcGVydGllc1xuZnVuY3Rpb24gZGVjb2RlQXJtb3IoYXJtb3IsIGNodW5rU2l6ZSA9IDY0KSB7XG4gICAgLy8gY291bGQgc3RhcnQvZW5kIHdpdGggc3BhY2Ugb3IgbmV3bGluZXMsIGxldCdzIHN0cmlwIHRoZW1cbiAgICBhcm1vciA9IGFybW9yLnRyaW1TdGFydCgpO1xuICAgIGNvbnN0IGxlbmd0aEJlZm9yZUVuZFRyaW0gPSBhcm1vci5sZW5ndGg7XG4gICAgYXJtb3IgPSBhcm1vci50cmltRW5kKCk7XG4gICAgY29uc3QgbGVuZ3RoQWZ0ZXJUcmltID0gYXJtb3IubGVuZ3RoO1xuICAgIC8vIGZvciBjb21wbGlhbmNlIHdpdGggdGhlIGdvIGFnZSBpbXBsZW1lbnRhdGlvbiwgd2UgZGVueSBtb3JlIHRoYW4gMTAyNCB3aGl0ZXNwYWNlIGNoYXJzOlxuICAgIC8vIHNlZTogaHR0cHM6Ly9naXRodWIuY29tL0ZpbG9Tb3R0aWxlL2FnZS9ibG9iLzhlM2Y3NGMyODNiMmU5YjNjZDBlYzY2MWZhNDAwODUwNGU1MzZkMjAvYXJtb3IvYXJtb3IuZ28jTDEwNFxuICAgIGNvbnN0IHRyaW1tZWRXaGl0ZXNwYWNlID0gbGVuZ3RoQmVmb3JlRW5kVHJpbSAtIGxlbmd0aEFmdGVyVHJpbTtcbiAgICBpZiAodHJpbW1lZFdoaXRlc3BhY2UgPiAxMDI0KSB7XG4gICAgICAgIHRocm93IEVycm9yKFwidG9vIG11Y2ggd2hpdGVzcGFjZSBhdCB0aGUgZW5kIG9mIHRoZSBhcm1vciBwYXlsb2FkXCIpO1xuICAgIH1cbiAgICBpZiAoIWFybW9yLnN0YXJ0c1dpdGgoaGVhZGVyKSkge1xuICAgICAgICB0aHJvdyBFcnJvcihgQXJtb3IgY2Fubm90IGJlIGRlY29kZWQgaWYgaXQgZG9lcyBub3Qgc3RhcnQgd2l0aCBhIGhlYWRlciEgaS5lLiAke2hlYWRlcn1gKTtcbiAgICB9XG4gICAgaWYgKCFhcm1vci5lbmRzV2l0aChmb290ZXIpKSB7XG4gICAgICAgIHRocm93IEVycm9yKGBBcm1vciBjYW5ub3QgYmUgZGVjb2RlZCBpZiBpdCBkb2VzIG5vdCBlbmQgd2l0aCBhIGZvb3RlciEgaS5lLiAke2Zvb3Rlcn1gKTtcbiAgICB9XG4gICAgY29uc3QgYmFzZTY0UGF5bG9hZCA9IGFybW9yLnNsaWNlKGhlYWRlci5sZW5ndGgsIGFybW9yLmxlbmd0aCAtIGZvb3Rlci5sZW5ndGgpO1xuICAgIGNvbnN0IGxpbmVzID0gYmFzZTY0UGF5bG9hZC5zcGxpdChcIlxcblwiKTtcbiAgICBpZiAobGluZXMuc29tZShsaW5lID0+IGxpbmUubGVuZ3RoID4gY2h1bmtTaXplKSkge1xuICAgICAgICB0aHJvdyBFcnJvcihgQXJtb3IgdG8gZGVjb2RlIGNhbm5vdCBoYXZlIGxpbmVzIGxvbmdlciB0aGFuICR7Y2h1bmtTaXplfSAoY29uZmlndXJhYmxlKSBpbiBvcmRlciB0byBzdG9wIHBhZGRpbmcgYXR0YWNrc2ApO1xuICAgIH1cbiAgICBpZiAobGluZXNbbGluZXMubGVuZ3RoIC0gMV0ubGVuZ3RoID49IGNodW5rU2l6ZSkge1xuICAgICAgICB0aHJvdyBFcnJvcihgVGhlIGxhc3QgbGluZSBvZiBhbiBhcm1vcmVkIHBheWxvYWQgbXVzdCBiZSBsZXNzIHRoYW4gJHtjaHVua1NpemV9IChjb25maWd1cmFibGUpIHRvIHN0b3AgcGFkZGluZyBhdHRhY2tzYCk7XG4gICAgfVxuICAgIHJldHVybiBidWZmZXJfMS5CdWZmZXIuZnJvbShiYXNlNjRQYXlsb2FkLCBcImJhc2U2NFwiKS50b1N0cmluZyhcImJpbmFyeVwiKTtcbn1cbmV4cG9ydHMuZGVjb2RlQXJtb3IgPSBkZWNvZGVBcm1vcjtcbmZ1bmN0aW9uIGlzUHJvYmFibHlBcm1vcmVkKGlucHV0KSB7XG4gICAgcmV0dXJuIGlucHV0LnN0YXJ0c1dpdGgoaGVhZGVyKTtcbn1cbmV4cG9ydHMuaXNQcm9iYWJseUFybW9yZWQgPSBpc1Byb2JhYmx5QXJtb3JlZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFybW9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/age/armor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/age/no-op-encdec.js":
/*!***************************************************!*\
  !*** ./node_modules/tlock-js/age/no-op-encdec.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NoOpEncDec = void 0;\nconst noOpType = \"no-op\";\n// if you wish to encrypt with AGE but simply pass the filekey in the recipient stanza, then use this\n// protip: you probably don't!\nclass NoOpEncDec {\n    static async wrap(filekey) {\n        return [{\n                type: noOpType,\n                args: [],\n                body: filekey\n            }];\n    }\n    static async unwrap(recipients) {\n        if (recipients.length !== 1) {\n            throw Error(\"NoOpEncDec only expects a single stanza!\");\n        }\n        if (recipients[0].type !== noOpType) {\n            throw Error(`NoOpEncDec expects the type of the stanza to be ${noOpType}`);\n        }\n        return recipients[0].body;\n    }\n}\nexports.NoOpEncDec = NoOpEncDec;\n//# sourceMappingURL=no-op-encdec.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvYWdlL25vLW9wLWVuY2RlYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRSxTQUFTO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGl3aS1hcHAvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvYWdlL25vLW9wLWVuY2RlYy5qcz81YjVkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Ob09wRW5jRGVjID0gdm9pZCAwO1xuY29uc3Qgbm9PcFR5cGUgPSBcIm5vLW9wXCI7XG4vLyBpZiB5b3Ugd2lzaCB0byBlbmNyeXB0IHdpdGggQUdFIGJ1dCBzaW1wbHkgcGFzcyB0aGUgZmlsZWtleSBpbiB0aGUgcmVjaXBpZW50IHN0YW56YSwgdGhlbiB1c2UgdGhpc1xuLy8gcHJvdGlwOiB5b3UgcHJvYmFibHkgZG9uJ3QhXG5jbGFzcyBOb09wRW5jRGVjIHtcbiAgICBzdGF0aWMgYXN5bmMgd3JhcChmaWxla2V5KSB7XG4gICAgICAgIHJldHVybiBbe1xuICAgICAgICAgICAgICAgIHR5cGU6IG5vT3BUeXBlLFxuICAgICAgICAgICAgICAgIGFyZ3M6IFtdLFxuICAgICAgICAgICAgICAgIGJvZHk6IGZpbGVrZXlcbiAgICAgICAgICAgIH1dO1xuICAgIH1cbiAgICBzdGF0aWMgYXN5bmMgdW53cmFwKHJlY2lwaWVudHMpIHtcbiAgICAgICAgaWYgKHJlY2lwaWVudHMubGVuZ3RoICE9PSAxKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihcIk5vT3BFbmNEZWMgb25seSBleHBlY3RzIGEgc2luZ2xlIHN0YW56YSFcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlY2lwaWVudHNbMF0udHlwZSAhPT0gbm9PcFR5cGUpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBOb09wRW5jRGVjIGV4cGVjdHMgdGhlIHR5cGUgb2YgdGhlIHN0YW56YSB0byBiZSAke25vT3BUeXBlfWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZWNpcGllbnRzWzBdLmJvZHk7XG4gICAgfVxufVxuZXhwb3J0cy5Ob09wRW5jRGVjID0gTm9PcEVuY0RlYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vLW9wLWVuY2RlYy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/age/no-op-encdec.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/age/stream-cipher.js":
/*!****************************************************!*\
  !*** ./node_modules/tlock-js/age/stream-cipher.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// largely taken from https://github.com/paulmillr/jage,\n// but hooking in a browser compatible ChaCha20 implementation\n// STREAM cipher\n// https://eprint.iacr.org/2015/189.pdf\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.STREAM = void 0;\n// age spec:\n// After the header the binary payload is nonce || STREAM[HKDF[nonce, \"payload\"](file key)](plaintext) where nonce is random(16) and STREAM is from Online Authenticated-Encryption and its Nonce-Reuse Misuse-Resistance with ChaCha20-Poly1305 in 64KiB chunks and a nonce structure of 11 bytes of big endian counter, and 1 byte of last block flag (0x00 / 0x01). (The STREAM scheme is similar to the one Tink and Miscreant use, but without nonce prefix as we use HKDF, and with ChaCha20-Poly1305 instead of AES-GCM because the latter is unreasonably hard to do well or fast without hardware support.)\nconst chacha20poly1305_1 = __webpack_require__(/*! @stablelib/chacha20poly1305 */ \"(ssr)/./node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js\");\nconst CHUNK_SIZE = 64 * 1024; // 64 KiB\nconst TAG_SIZE = 16; // Poly1305 MAC size\nconst ENCRYPTED_CHUNK_SIZE = CHUNK_SIZE + TAG_SIZE;\nconst NONCE_SIZE = 12; // STREAM nonce size\n// due to using a 32bit uint for the counter, this is the max\n// value the counter can be without risking a nonce reuse\nconst COUNTER_MAX = Math.pow(2, 32) - 1;\nclass STREAM {\n    static seal(plaintext, privateKey) {\n        const stream = new STREAM(privateKey);\n        const chunks = Math.ceil(plaintext.length / CHUNK_SIZE);\n        const ciphertext = new Uint8Array(plaintext.length + (chunks * TAG_SIZE));\n        for (let chunk64kb = 1; chunk64kb <= chunks; chunk64kb++) {\n            const start = chunk64kb - 1;\n            const end = chunk64kb;\n            const isLast = chunk64kb === chunks;\n            const input = plaintext.slice(start * CHUNK_SIZE, end * CHUNK_SIZE);\n            const output = ciphertext.subarray(start * ENCRYPTED_CHUNK_SIZE, end * ENCRYPTED_CHUNK_SIZE);\n            stream.encryptChunk(input, isLast, output);\n        }\n        stream.clear();\n        return ciphertext;\n    }\n    static open(ciphertext, privateKey) {\n        const stream = new STREAM(privateKey);\n        const chunks = Math.ceil(ciphertext.length / ENCRYPTED_CHUNK_SIZE);\n        const plaintext = new Uint8Array(ciphertext.length - (chunks * TAG_SIZE));\n        for (let chunk64kb = 1; chunk64kb <= chunks; chunk64kb++) {\n            const start = chunk64kb - 1;\n            const end = chunk64kb;\n            const isLast = chunk64kb === chunks;\n            const input = ciphertext.slice(start * ENCRYPTED_CHUNK_SIZE, end * ENCRYPTED_CHUNK_SIZE);\n            const output = plaintext.subarray(start * CHUNK_SIZE, end * CHUNK_SIZE);\n            stream.decryptChunk(input, isLast, output);\n        }\n        stream.clear();\n        return plaintext;\n    }\n    constructor(key) {\n        this.key = key.slice();\n        this.nonce = new Uint8Array(NONCE_SIZE);\n        this.nonceView = new DataView(this.nonce.buffer);\n        this.counter = 0;\n    }\n    encryptChunk(chunk, isLast, output) {\n        if (chunk.length > CHUNK_SIZE)\n            throw new Error(\"Chunk is too big\");\n        if (this.nonce[11] === 1)\n            throw new Error(\"Last chunk has been processed\");\n        if (isLast)\n            this.nonce[11] = 1;\n        const ciphertext = new chacha20poly1305_1.ChaCha20Poly1305(this.key).seal(this.nonce, chunk);\n        output.set(ciphertext);\n        this.incrementCounter();\n    }\n    decryptChunk(chunk, isLast, output) {\n        if (chunk.length > ENCRYPTED_CHUNK_SIZE)\n            throw new Error(\"Chunk is too big\");\n        if (this.nonce[11] === 1)\n            throw new Error(\"Last chunk has been processed\");\n        if (isLast)\n            this.nonce[11] = 1;\n        const plaintext = new chacha20poly1305_1.ChaCha20Poly1305(this.key).open(this.nonce, chunk);\n        if (plaintext == null) {\n            throw Error(\"Error during decryption!\");\n        }\n        output.set(plaintext);\n        this.incrementCounter();\n    }\n    // Increments Big Endian Uint8Array-based counter.\n    // [0, 0, 0] => [0, 0, 1] ... => [0, 0, 255] => [0, 1, 0]\n    incrementCounter() {\n        if (this.counter == COUNTER_MAX) {\n            throw new Error(\"Stream cipher counter has already hit max value! Aborting to avoid nonce reuse - tlock only supports payloads up to 256TB\");\n        }\n        this.counter += 1;\n        this.nonceView.setUint32(7, this.counter, false);\n    }\n    clear() {\n        function clear(arr) {\n            for (let i = 0; i < arr.length; i++) {\n                arr[i] = 0;\n            }\n        }\n        clear(this.key);\n        clear(this.nonce);\n        this.counter = 0;\n    }\n}\nexports.STREAM = STREAM;\n//# sourceMappingURL=stream-cipher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvYWdlL3N0cmVhbS1jaXBoZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBLDJCQUEyQixtQkFBTyxDQUFDLDZHQUE2QjtBQUNoRSw4QkFBOEI7QUFDOUIscUJBQXFCO0FBQ3JCO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MscUJBQXFCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MscUJBQXFCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGdCQUFnQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGl3aS1hcHAvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvYWdlL3N0cmVhbS1jaXBoZXIuanM/NGZiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIGxhcmdlbHkgdGFrZW4gZnJvbSBodHRwczovL2dpdGh1Yi5jb20vcGF1bG1pbGxyL2phZ2UsXG4vLyBidXQgaG9va2luZyBpbiBhIGJyb3dzZXIgY29tcGF0aWJsZSBDaGFDaGEyMCBpbXBsZW1lbnRhdGlvblxuLy8gU1RSRUFNIGNpcGhlclxuLy8gaHR0cHM6Ly9lcHJpbnQuaWFjci5vcmcvMjAxNS8xODkucGRmXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNUUkVBTSA9IHZvaWQgMDtcbi8vIGFnZSBzcGVjOlxuLy8gQWZ0ZXIgdGhlIGhlYWRlciB0aGUgYmluYXJ5IHBheWxvYWQgaXMgbm9uY2UgfHwgU1RSRUFNW0hLREZbbm9uY2UsIFwicGF5bG9hZFwiXShmaWxlIGtleSldKHBsYWludGV4dCkgd2hlcmUgbm9uY2UgaXMgcmFuZG9tKDE2KSBhbmQgU1RSRUFNIGlzIGZyb20gT25saW5lIEF1dGhlbnRpY2F0ZWQtRW5jcnlwdGlvbiBhbmQgaXRzIE5vbmNlLVJldXNlIE1pc3VzZS1SZXNpc3RhbmNlIHdpdGggQ2hhQ2hhMjAtUG9seTEzMDUgaW4gNjRLaUIgY2h1bmtzIGFuZCBhIG5vbmNlIHN0cnVjdHVyZSBvZiAxMSBieXRlcyBvZiBiaWcgZW5kaWFuIGNvdW50ZXIsIGFuZCAxIGJ5dGUgb2YgbGFzdCBibG9jayBmbGFnICgweDAwIC8gMHgwMSkuIChUaGUgU1RSRUFNIHNjaGVtZSBpcyBzaW1pbGFyIHRvIHRoZSBvbmUgVGluayBhbmQgTWlzY3JlYW50IHVzZSwgYnV0IHdpdGhvdXQgbm9uY2UgcHJlZml4IGFzIHdlIHVzZSBIS0RGLCBhbmQgd2l0aCBDaGFDaGEyMC1Qb2x5MTMwNSBpbnN0ZWFkIG9mIEFFUy1HQ00gYmVjYXVzZSB0aGUgbGF0dGVyIGlzIHVucmVhc29uYWJseSBoYXJkIHRvIGRvIHdlbGwgb3IgZmFzdCB3aXRob3V0IGhhcmR3YXJlIHN1cHBvcnQuKVxuY29uc3QgY2hhY2hhMjBwb2x5MTMwNV8xID0gcmVxdWlyZShcIkBzdGFibGVsaWIvY2hhY2hhMjBwb2x5MTMwNVwiKTtcbmNvbnN0IENIVU5LX1NJWkUgPSA2NCAqIDEwMjQ7IC8vIDY0IEtpQlxuY29uc3QgVEFHX1NJWkUgPSAxNjsgLy8gUG9seTEzMDUgTUFDIHNpemVcbmNvbnN0IEVOQ1JZUFRFRF9DSFVOS19TSVpFID0gQ0hVTktfU0laRSArIFRBR19TSVpFO1xuY29uc3QgTk9OQ0VfU0laRSA9IDEyOyAvLyBTVFJFQU0gbm9uY2Ugc2l6ZVxuLy8gZHVlIHRvIHVzaW5nIGEgMzJiaXQgdWludCBmb3IgdGhlIGNvdW50ZXIsIHRoaXMgaXMgdGhlIG1heFxuLy8gdmFsdWUgdGhlIGNvdW50ZXIgY2FuIGJlIHdpdGhvdXQgcmlza2luZyBhIG5vbmNlIHJldXNlXG5jb25zdCBDT1VOVEVSX01BWCA9IE1hdGgucG93KDIsIDMyKSAtIDE7XG5jbGFzcyBTVFJFQU0ge1xuICAgIHN0YXRpYyBzZWFsKHBsYWludGV4dCwgcHJpdmF0ZUtleSkge1xuICAgICAgICBjb25zdCBzdHJlYW0gPSBuZXcgU1RSRUFNKHByaXZhdGVLZXkpO1xuICAgICAgICBjb25zdCBjaHVua3MgPSBNYXRoLmNlaWwocGxhaW50ZXh0Lmxlbmd0aCAvIENIVU5LX1NJWkUpO1xuICAgICAgICBjb25zdCBjaXBoZXJ0ZXh0ID0gbmV3IFVpbnQ4QXJyYXkocGxhaW50ZXh0Lmxlbmd0aCArIChjaHVua3MgKiBUQUdfU0laRSkpO1xuICAgICAgICBmb3IgKGxldCBjaHVuazY0a2IgPSAxOyBjaHVuazY0a2IgPD0gY2h1bmtzOyBjaHVuazY0a2IrKykge1xuICAgICAgICAgICAgY29uc3Qgc3RhcnQgPSBjaHVuazY0a2IgLSAxO1xuICAgICAgICAgICAgY29uc3QgZW5kID0gY2h1bms2NGtiO1xuICAgICAgICAgICAgY29uc3QgaXNMYXN0ID0gY2h1bms2NGtiID09PSBjaHVua3M7XG4gICAgICAgICAgICBjb25zdCBpbnB1dCA9IHBsYWludGV4dC5zbGljZShzdGFydCAqIENIVU5LX1NJWkUsIGVuZCAqIENIVU5LX1NJWkUpO1xuICAgICAgICAgICAgY29uc3Qgb3V0cHV0ID0gY2lwaGVydGV4dC5zdWJhcnJheShzdGFydCAqIEVOQ1JZUFRFRF9DSFVOS19TSVpFLCBlbmQgKiBFTkNSWVBURURfQ0hVTktfU0laRSk7XG4gICAgICAgICAgICBzdHJlYW0uZW5jcnlwdENodW5rKGlucHV0LCBpc0xhc3QsIG91dHB1dCk7XG4gICAgICAgIH1cbiAgICAgICAgc3RyZWFtLmNsZWFyKCk7XG4gICAgICAgIHJldHVybiBjaXBoZXJ0ZXh0O1xuICAgIH1cbiAgICBzdGF0aWMgb3BlbihjaXBoZXJ0ZXh0LCBwcml2YXRlS2V5KSB7XG4gICAgICAgIGNvbnN0IHN0cmVhbSA9IG5ldyBTVFJFQU0ocHJpdmF0ZUtleSk7XG4gICAgICAgIGNvbnN0IGNodW5rcyA9IE1hdGguY2VpbChjaXBoZXJ0ZXh0Lmxlbmd0aCAvIEVOQ1JZUFRFRF9DSFVOS19TSVpFKTtcbiAgICAgICAgY29uc3QgcGxhaW50ZXh0ID0gbmV3IFVpbnQ4QXJyYXkoY2lwaGVydGV4dC5sZW5ndGggLSAoY2h1bmtzICogVEFHX1NJWkUpKTtcbiAgICAgICAgZm9yIChsZXQgY2h1bms2NGtiID0gMTsgY2h1bms2NGtiIDw9IGNodW5rczsgY2h1bms2NGtiKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gY2h1bms2NGtiIC0gMTtcbiAgICAgICAgICAgIGNvbnN0IGVuZCA9IGNodW5rNjRrYjtcbiAgICAgICAgICAgIGNvbnN0IGlzTGFzdCA9IGNodW5rNjRrYiA9PT0gY2h1bmtzO1xuICAgICAgICAgICAgY29uc3QgaW5wdXQgPSBjaXBoZXJ0ZXh0LnNsaWNlKHN0YXJ0ICogRU5DUllQVEVEX0NIVU5LX1NJWkUsIGVuZCAqIEVOQ1JZUFRFRF9DSFVOS19TSVpFKTtcbiAgICAgICAgICAgIGNvbnN0IG91dHB1dCA9IHBsYWludGV4dC5zdWJhcnJheShzdGFydCAqIENIVU5LX1NJWkUsIGVuZCAqIENIVU5LX1NJWkUpO1xuICAgICAgICAgICAgc3RyZWFtLmRlY3J5cHRDaHVuayhpbnB1dCwgaXNMYXN0LCBvdXRwdXQpO1xuICAgICAgICB9XG4gICAgICAgIHN0cmVhbS5jbGVhcigpO1xuICAgICAgICByZXR1cm4gcGxhaW50ZXh0O1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihrZXkpIHtcbiAgICAgICAgdGhpcy5rZXkgPSBrZXkuc2xpY2UoKTtcbiAgICAgICAgdGhpcy5ub25jZSA9IG5ldyBVaW50OEFycmF5KE5PTkNFX1NJWkUpO1xuICAgICAgICB0aGlzLm5vbmNlVmlldyA9IG5ldyBEYXRhVmlldyh0aGlzLm5vbmNlLmJ1ZmZlcik7XG4gICAgICAgIHRoaXMuY291bnRlciA9IDA7XG4gICAgfVxuICAgIGVuY3J5cHRDaHVuayhjaHVuaywgaXNMYXN0LCBvdXRwdXQpIHtcbiAgICAgICAgaWYgKGNodW5rLmxlbmd0aCA+IENIVU5LX1NJWkUpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDaHVuayBpcyB0b28gYmlnXCIpO1xuICAgICAgICBpZiAodGhpcy5ub25jZVsxMV0gPT09IDEpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMYXN0IGNodW5rIGhhcyBiZWVuIHByb2Nlc3NlZFwiKTtcbiAgICAgICAgaWYgKGlzTGFzdClcbiAgICAgICAgICAgIHRoaXMubm9uY2VbMTFdID0gMTtcbiAgICAgICAgY29uc3QgY2lwaGVydGV4dCA9IG5ldyBjaGFjaGEyMHBvbHkxMzA1XzEuQ2hhQ2hhMjBQb2x5MTMwNSh0aGlzLmtleSkuc2VhbCh0aGlzLm5vbmNlLCBjaHVuayk7XG4gICAgICAgIG91dHB1dC5zZXQoY2lwaGVydGV4dCk7XG4gICAgICAgIHRoaXMuaW5jcmVtZW50Q291bnRlcigpO1xuICAgIH1cbiAgICBkZWNyeXB0Q2h1bmsoY2h1bmssIGlzTGFzdCwgb3V0cHV0KSB7XG4gICAgICAgIGlmIChjaHVuay5sZW5ndGggPiBFTkNSWVBURURfQ0hVTktfU0laRSlcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNodW5rIGlzIHRvbyBiaWdcIik7XG4gICAgICAgIGlmICh0aGlzLm5vbmNlWzExXSA9PT0gMSlcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkxhc3QgY2h1bmsgaGFzIGJlZW4gcHJvY2Vzc2VkXCIpO1xuICAgICAgICBpZiAoaXNMYXN0KVxuICAgICAgICAgICAgdGhpcy5ub25jZVsxMV0gPSAxO1xuICAgICAgICBjb25zdCBwbGFpbnRleHQgPSBuZXcgY2hhY2hhMjBwb2x5MTMwNV8xLkNoYUNoYTIwUG9seTEzMDUodGhpcy5rZXkpLm9wZW4odGhpcy5ub25jZSwgY2h1bmspO1xuICAgICAgICBpZiAocGxhaW50ZXh0ID09IG51bGwpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKFwiRXJyb3IgZHVyaW5nIGRlY3J5cHRpb24hXCIpO1xuICAgICAgICB9XG4gICAgICAgIG91dHB1dC5zZXQocGxhaW50ZXh0KTtcbiAgICAgICAgdGhpcy5pbmNyZW1lbnRDb3VudGVyKCk7XG4gICAgfVxuICAgIC8vIEluY3JlbWVudHMgQmlnIEVuZGlhbiBVaW50OEFycmF5LWJhc2VkIGNvdW50ZXIuXG4gICAgLy8gWzAsIDAsIDBdID0+IFswLCAwLCAxXSAuLi4gPT4gWzAsIDAsIDI1NV0gPT4gWzAsIDEsIDBdXG4gICAgaW5jcmVtZW50Q291bnRlcigpIHtcbiAgICAgICAgaWYgKHRoaXMuY291bnRlciA9PSBDT1VOVEVSX01BWCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU3RyZWFtIGNpcGhlciBjb3VudGVyIGhhcyBhbHJlYWR5IGhpdCBtYXggdmFsdWUhIEFib3J0aW5nIHRvIGF2b2lkIG5vbmNlIHJldXNlIC0gdGxvY2sgb25seSBzdXBwb3J0cyBwYXlsb2FkcyB1cCB0byAyNTZUQlwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvdW50ZXIgKz0gMTtcbiAgICAgICAgdGhpcy5ub25jZVZpZXcuc2V0VWludDMyKDcsIHRoaXMuY291bnRlciwgZmFsc2UpO1xuICAgIH1cbiAgICBjbGVhcigpIHtcbiAgICAgICAgZnVuY3Rpb24gY2xlYXIoYXJyKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGFycltpXSA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2xlYXIodGhpcy5rZXkpO1xuICAgICAgICBjbGVhcih0aGlzLm5vbmNlKTtcbiAgICAgICAgdGhpcy5jb3VudGVyID0gMDtcbiAgICB9XG59XG5leHBvcnRzLlNUUkVBTSA9IFNUUkVBTTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0cmVhbS1jaXBoZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/age/stream-cipher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/age/utils-crypto.js":
/*!***************************************************!*\
  !*** ./node_modules/tlock-js/age/utils-crypto.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.random = exports.createMacKey = void 0;\nconst hkdf_1 = __webpack_require__(/*! @noble/hashes/hkdf */ \"(ssr)/./node_modules/@noble/hashes/hkdf.js\");\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nconst hmac_1 = __webpack_require__(/*! @noble/hashes/hmac */ \"(ssr)/./node_modules/@noble/hashes/hmac.js\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nfunction createMacKey(fileKey, macMessage, headerText) {\n    // empty string salt as per the spec!\n    const hmacKey = (0, hkdf_1.hkdf)(sha256_1.sha256, fileKey, \"\", buffer_1.Buffer.from(macMessage, \"utf8\"), 32);\n    return buffer_1.Buffer.from((0, hmac_1.hmac)(sha256_1.sha256, hmacKey, buffer_1.Buffer.from(headerText, \"utf8\")));\n}\nexports.createMacKey = createMacKey;\n// returns a string of n bytes read from a CSPRNG like /dev/urandom.\nasync function random(n) {\n    if (typeof window === \"object\" && \"crypto\" in window) {\n        return window.crypto.getRandomValues(new Uint8Array(n));\n    }\n    // parcel likes to resolve polyfills for things even if they aren't used\n    // so this indirection tricks it into not doing it and not complaining :)\n    const x = \"crypto\";\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const bytes = __webpack_require__(\"(ssr)/./node_modules/tlock-js/age sync recursive\")(x).randomBytes(n);\n    return new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n}\nexports.random = random;\n//# sourceMappingURL=utils-crypto.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvYWdlL3V0aWxzLWNyeXB0by5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsb0JBQW9CO0FBQ3JDLGVBQWUsbUJBQU8sQ0FBQyxzRUFBb0I7QUFDM0MsaUJBQWlCLG1CQUFPLENBQUMsMEVBQXNCO0FBQy9DLGVBQWUsbUJBQU8sQ0FBQyxzRUFBb0I7QUFDM0MsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isd0VBQVEsQ0FBQyxDQUFDO0FBQzVCO0FBQ0E7QUFDQSxjQUFjO0FBQ2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXdpLWFwcC8uL25vZGVfbW9kdWxlcy90bG9jay1qcy9hZ2UvdXRpbHMtY3J5cHRvLmpzP2QxNjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJhbmRvbSA9IGV4cG9ydHMuY3JlYXRlTWFjS2V5ID0gdm9pZCAwO1xuY29uc3QgaGtkZl8xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvaGtkZlwiKTtcbmNvbnN0IHNoYTI1Nl8xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvc2hhMjU2XCIpO1xuY29uc3QgaG1hY18xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvaG1hY1wiKTtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlclwiKTtcbmZ1bmN0aW9uIGNyZWF0ZU1hY0tleShmaWxlS2V5LCBtYWNNZXNzYWdlLCBoZWFkZXJUZXh0KSB7XG4gICAgLy8gZW1wdHkgc3RyaW5nIHNhbHQgYXMgcGVyIHRoZSBzcGVjIVxuICAgIGNvbnN0IGhtYWNLZXkgPSAoMCwgaGtkZl8xLmhrZGYpKHNoYTI1Nl8xLnNoYTI1NiwgZmlsZUtleSwgXCJcIiwgYnVmZmVyXzEuQnVmZmVyLmZyb20obWFjTWVzc2FnZSwgXCJ1dGY4XCIpLCAzMik7XG4gICAgcmV0dXJuIGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKCgwLCBobWFjXzEuaG1hYykoc2hhMjU2XzEuc2hhMjU2LCBobWFjS2V5LCBidWZmZXJfMS5CdWZmZXIuZnJvbShoZWFkZXJUZXh0LCBcInV0ZjhcIikpKTtcbn1cbmV4cG9ydHMuY3JlYXRlTWFjS2V5ID0gY3JlYXRlTWFjS2V5O1xuLy8gcmV0dXJucyBhIHN0cmluZyBvZiBuIGJ5dGVzIHJlYWQgZnJvbSBhIENTUFJORyBsaWtlIC9kZXYvdXJhbmRvbS5cbmFzeW5jIGZ1bmN0aW9uIHJhbmRvbShuKSB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIgJiYgXCJjcnlwdG9cIiBpbiB3aW5kb3cpIHtcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKG5ldyBVaW50OEFycmF5KG4pKTtcbiAgICB9XG4gICAgLy8gcGFyY2VsIGxpa2VzIHRvIHJlc29sdmUgcG9seWZpbGxzIGZvciB0aGluZ3MgZXZlbiBpZiB0aGV5IGFyZW4ndCB1c2VkXG4gICAgLy8gc28gdGhpcyBpbmRpcmVjdGlvbiB0cmlja3MgaXQgaW50byBub3QgZG9pbmcgaXQgYW5kIG5vdCBjb21wbGFpbmluZyA6KVxuICAgIGNvbnN0IHggPSBcImNyeXB0b1wiO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdmFyLXJlcXVpcmVzXG4gICAgY29uc3QgYnl0ZXMgPSByZXF1aXJlKHgpLnJhbmRvbUJ5dGVzKG4pO1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShieXRlcy5idWZmZXIsIGJ5dGVzLmJ5dGVPZmZzZXQsIGJ5dGVzLmJ5dGVMZW5ndGgpO1xufVxuZXhwb3J0cy5yYW5kb20gPSByYW5kb207XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy1jcnlwdG8uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/age/utils-crypto.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/age/utils.js":
/*!********************************************!*\
  !*** ./node_modules/tlock-js/age/utils.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sliceUntil = exports.chunked = exports.unpaddedBase64Buffer = exports.unpaddedBase64 = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\n// as per the spec:\n// RFC 4648, Section 4\n// without = padding characters (sometimes referred to as \"raw\" or \"unpadded\" base64)\nfunction unpaddedBase64(buf) {\n    const encodedBuf = buffer_1.Buffer.from(buf).toString(\"base64\");\n    let lastIndex = encodedBuf.length - 1;\n    while (encodedBuf[lastIndex] === \"=\") {\n        lastIndex--;\n    }\n    return encodedBuf.slice(0, lastIndex + 1);\n}\nexports.unpaddedBase64 = unpaddedBase64;\nfunction unpaddedBase64Buffer(buf) {\n    return buffer_1.Buffer.from(unpaddedBase64(buf), \"base64\");\n}\nexports.unpaddedBase64Buffer = unpaddedBase64Buffer;\n/*\n    e.g. chunked(\"hello world\", 2, \".\") returns\n    [\"he.\", \"ll.\", \"o .\", \"wo.\", \"rl.\", \"d.\"]\n */\nfunction chunked(input, chunkSize, suffix = \"\") {\n    const output = [];\n    let currentChunk = \"\";\n    for (let i = 0, chunks = 0; i < input.length; i++) {\n        currentChunk += input[i];\n        const posInChunk = i - (chunks * chunkSize);\n        if (posInChunk === chunkSize - 1) {\n            output.push(currentChunk + suffix);\n            currentChunk = \"\";\n            chunks++;\n        }\n        else if (i === input.length - 1) {\n            output.push(currentChunk + suffix);\n        }\n    }\n    return output;\n}\nexports.chunked = chunked;\n// slices the input string up to and including the first\n// occurrence of the string provided in `searchTerm`\n// returns the whole string if it's not found\n// e.g. sliceUntil(\"hello world\", \"ll\") will return \"hell\"\nfunction sliceUntil(input, searchTerm) {\n    let lettersMatched = 0;\n    let inputPointer = 0;\n    while (inputPointer < input.length && lettersMatched < searchTerm.length) {\n        if (input[inputPointer] === searchTerm[lettersMatched]) {\n            ++lettersMatched;\n        }\n        else if (input[inputPointer] === searchTerm[0]) {\n            lettersMatched = 1;\n        }\n        else {\n            lettersMatched = 0;\n        }\n        ++inputPointer;\n    }\n    return input.slice(0, inputPointer);\n}\nexports.sliceUntil = sliceUntil;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvYWdlL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQixHQUFHLGVBQWUsR0FBRyw0QkFBNEIsR0FBRyxzQkFBc0I7QUFDNUYsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msa0JBQWtCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpd2ktYXBwLy4vbm9kZV9tb2R1bGVzL3Rsb2NrLWpzL2FnZS91dGlscy5qcz9kZmYyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zbGljZVVudGlsID0gZXhwb3J0cy5jaHVua2VkID0gZXhwb3J0cy51bnBhZGRlZEJhc2U2NEJ1ZmZlciA9IGV4cG9ydHMudW5wYWRkZWRCYXNlNjQgPSB2b2lkIDA7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXJcIik7XG4vLyBhcyBwZXIgdGhlIHNwZWM6XG4vLyBSRkMgNDY0OCwgU2VjdGlvbiA0XG4vLyB3aXRob3V0ID0gcGFkZGluZyBjaGFyYWN0ZXJzIChzb21ldGltZXMgcmVmZXJyZWQgdG8gYXMgXCJyYXdcIiBvciBcInVucGFkZGVkXCIgYmFzZTY0KVxuZnVuY3Rpb24gdW5wYWRkZWRCYXNlNjQoYnVmKSB7XG4gICAgY29uc3QgZW5jb2RlZEJ1ZiA9IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKGJ1ZikudG9TdHJpbmcoXCJiYXNlNjRcIik7XG4gICAgbGV0IGxhc3RJbmRleCA9IGVuY29kZWRCdWYubGVuZ3RoIC0gMTtcbiAgICB3aGlsZSAoZW5jb2RlZEJ1ZltsYXN0SW5kZXhdID09PSBcIj1cIikge1xuICAgICAgICBsYXN0SW5kZXgtLTtcbiAgICB9XG4gICAgcmV0dXJuIGVuY29kZWRCdWYuc2xpY2UoMCwgbGFzdEluZGV4ICsgMSk7XG59XG5leHBvcnRzLnVucGFkZGVkQmFzZTY0ID0gdW5wYWRkZWRCYXNlNjQ7XG5mdW5jdGlvbiB1bnBhZGRlZEJhc2U2NEJ1ZmZlcihidWYpIHtcbiAgICByZXR1cm4gYnVmZmVyXzEuQnVmZmVyLmZyb20odW5wYWRkZWRCYXNlNjQoYnVmKSwgXCJiYXNlNjRcIik7XG59XG5leHBvcnRzLnVucGFkZGVkQmFzZTY0QnVmZmVyID0gdW5wYWRkZWRCYXNlNjRCdWZmZXI7XG4vKlxuICAgIGUuZy4gY2h1bmtlZChcImhlbGxvIHdvcmxkXCIsIDIsIFwiLlwiKSByZXR1cm5zXG4gICAgW1wiaGUuXCIsIFwibGwuXCIsIFwibyAuXCIsIFwid28uXCIsIFwicmwuXCIsIFwiZC5cIl1cbiAqL1xuZnVuY3Rpb24gY2h1bmtlZChpbnB1dCwgY2h1bmtTaXplLCBzdWZmaXggPSBcIlwiKSB7XG4gICAgY29uc3Qgb3V0cHV0ID0gW107XG4gICAgbGV0IGN1cnJlbnRDaHVuayA9IFwiXCI7XG4gICAgZm9yIChsZXQgaSA9IDAsIGNodW5rcyA9IDA7IGkgPCBpbnB1dC5sZW5ndGg7IGkrKykge1xuICAgICAgICBjdXJyZW50Q2h1bmsgKz0gaW5wdXRbaV07XG4gICAgICAgIGNvbnN0IHBvc0luQ2h1bmsgPSBpIC0gKGNodW5rcyAqIGNodW5rU2l6ZSk7XG4gICAgICAgIGlmIChwb3NJbkNodW5rID09PSBjaHVua1NpemUgLSAxKSB7XG4gICAgICAgICAgICBvdXRwdXQucHVzaChjdXJyZW50Q2h1bmsgKyBzdWZmaXgpO1xuICAgICAgICAgICAgY3VycmVudENodW5rID0gXCJcIjtcbiAgICAgICAgICAgIGNodW5rcysrO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGkgPT09IGlucHV0Lmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgIG91dHB1dC5wdXNoKGN1cnJlbnRDaHVuayArIHN1ZmZpeCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG91dHB1dDtcbn1cbmV4cG9ydHMuY2h1bmtlZCA9IGNodW5rZWQ7XG4vLyBzbGljZXMgdGhlIGlucHV0IHN0cmluZyB1cCB0byBhbmQgaW5jbHVkaW5nIHRoZSBmaXJzdFxuLy8gb2NjdXJyZW5jZSBvZiB0aGUgc3RyaW5nIHByb3ZpZGVkIGluIGBzZWFyY2hUZXJtYFxuLy8gcmV0dXJucyB0aGUgd2hvbGUgc3RyaW5nIGlmIGl0J3Mgbm90IGZvdW5kXG4vLyBlLmcuIHNsaWNlVW50aWwoXCJoZWxsbyB3b3JsZFwiLCBcImxsXCIpIHdpbGwgcmV0dXJuIFwiaGVsbFwiXG5mdW5jdGlvbiBzbGljZVVudGlsKGlucHV0LCBzZWFyY2hUZXJtKSB7XG4gICAgbGV0IGxldHRlcnNNYXRjaGVkID0gMDtcbiAgICBsZXQgaW5wdXRQb2ludGVyID0gMDtcbiAgICB3aGlsZSAoaW5wdXRQb2ludGVyIDwgaW5wdXQubGVuZ3RoICYmIGxldHRlcnNNYXRjaGVkIDwgc2VhcmNoVGVybS5sZW5ndGgpIHtcbiAgICAgICAgaWYgKGlucHV0W2lucHV0UG9pbnRlcl0gPT09IHNlYXJjaFRlcm1bbGV0dGVyc01hdGNoZWRdKSB7XG4gICAgICAgICAgICArK2xldHRlcnNNYXRjaGVkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlucHV0W2lucHV0UG9pbnRlcl0gPT09IHNlYXJjaFRlcm1bMF0pIHtcbiAgICAgICAgICAgIGxldHRlcnNNYXRjaGVkID0gMTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGxldHRlcnNNYXRjaGVkID0gMDtcbiAgICAgICAgfVxuICAgICAgICArK2lucHV0UG9pbnRlcjtcbiAgICB9XG4gICAgcmV0dXJuIGlucHV0LnNsaWNlKDAsIGlucHV0UG9pbnRlcik7XG59XG5leHBvcnRzLnNsaWNlVW50aWwgPSBzbGljZVVudGlsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/age/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/crypto/ibe.js":
/*!*********************************************!*\
  !*** ./node_modules/tlock-js/crypto/ibe.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.gtToHash = exports.decryptOnG2 = exports.decryptOnG1 = exports.encryptOnG2RFC9380 = exports.encryptOnG2 = exports.encryptOnG1 = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nconst utils_1 = __webpack_require__(/*! @noble/hashes/utils */ \"(ssr)/./node_modules/@noble/hashes/utils.js\");\nconst bls12_381_1 = __webpack_require__(/*! @noble/curves/bls12-381 */ \"(ssr)/./node_modules/@noble/curves/bls12-381.js\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst utils_2 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/tlock-js/crypto/utils.js\");\nconst PointG1 = bls12_381_1.bls12_381.G1;\nconst PointG2 = bls12_381_1.bls12_381.G2;\nasync function encryptOnG1(master, ID, msg) {\n    if (msg.length >> 8 > 1) {\n        throw new Error(\"cannot encrypt messages larger than our hash output: 256 bits.\");\n    }\n    // 1. Compute Gid = e(master,Q_id)\n    const Qid = PointG2.hashToCurve(ID, { DST: \"BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_NUL_\" });\n    const m = PointG1.ProjectivePoint.fromHex(master);\n    const Gid = bls12_381_1.bls12_381.pairing(m, Qid);\n    // 2. Derive random sigma\n    const sigma = (0, utils_1.randomBytes)(msg.length);\n    // 3. Derive r from sigma and msg and get a field element\n    const r = h3(sigma, msg);\n    const U = PointG1.ProjectivePoint.BASE.multiply(r);\n    // 5. Compute V = sigma XOR H2(rGid)\n    const rGid = bls12_381_1.bls12_381.fields.Fp12.pow(Gid, r);\n    const hrGid = gtToHash(rGid, msg.length);\n    const V = (0, utils_2.xor)(sigma, hrGid);\n    // 6. Compute M XOR H(sigma)\n    const hsigma = h4(sigma, msg.length);\n    const W = (0, utils_2.xor)(msg, hsigma);\n    return {\n        U: U.toRawBytes(),\n        V: V,\n        W: W,\n    };\n}\nexports.encryptOnG1 = encryptOnG1;\n// uses the DST for G2 erroneously\nasync function encryptOnG2(master, ID, msg) {\n    return encOnG2(master, ID, msg, \"BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_NUL_\");\n}\nexports.encryptOnG2 = encryptOnG2;\nasync function encryptOnG2RFC9380(master, ID, msg) {\n    return encOnG2(master, ID, msg, \"BLS_SIG_BLS12381G1_XMD:SHA-256_SSWU_RO_NUL_\");\n}\nexports.encryptOnG2RFC9380 = encryptOnG2RFC9380;\nasync function encOnG2(master, ID, msg, dst) {\n    if (msg.length >> 8 > 1) {\n        throw new Error(\"cannot encrypt messages larger than our hash output: 256 bits.\");\n    }\n    // 1. Compute Gid = e(master,Q_id)\n    const Qid = PointG1.hashToCurve(ID, { DST: dst });\n    const m = PointG2.ProjectivePoint.fromHex(master);\n    const Gid = bls12_381_1.bls12_381.pairing(Qid, m);\n    // 2. Derive random sigma\n    const sigma = (0, utils_1.randomBytes)(msg.length);\n    // 3. Derive r from sigma and msg and get a field element\n    const r = h3(sigma, msg);\n    const U = PointG2.ProjectivePoint.BASE.multiply(r);\n    // 5. Compute V = sigma XOR H2(rGid)\n    const rGid = bls12_381_1.bls12_381.fields.Fp12.pow(Gid, r);\n    const hrGid = gtToHash(rGid, msg.length);\n    const V = (0, utils_2.xor)(sigma, hrGid);\n    // 6. Compute M XOR H(sigma)\n    const hsigma = h4(sigma, msg.length);\n    const W = (0, utils_2.xor)(msg, hsigma);\n    return {\n        U: U.toRawBytes(),\n        V: V,\n        W: W,\n    };\n}\nasync function decryptOnG1(key, ciphertext) {\n    // 1. Compute sigma = V XOR H2(e(rP,private))\n    const Qid = PointG1.ProjectivePoint.fromHex(ciphertext.U);\n    const m = PointG2.ProjectivePoint.fromHex(key);\n    const gidt = bls12_381_1.bls12_381.pairing(Qid, m);\n    const hgidt = gtToHash(gidt, ciphertext.W.length);\n    if (hgidt.length != ciphertext.V.length) {\n        throw new Error(\"XorSigma is of invalid length\");\n    }\n    const sigma = (0, utils_2.xor)(hgidt, ciphertext.V);\n    // 2. Compute M = W XOR H4(sigma)\n    const hsigma = h4(sigma, ciphertext.W.length);\n    const msg = (0, utils_2.xor)(hsigma, ciphertext.W);\n    // \t3. Check U = rP\n    const r = h3(sigma, msg);\n    const rP = PointG1.ProjectivePoint.BASE.multiply(r);\n    if (!rP.equals(Qid)) {\n        throw new Error(\"invalid proof: rP check failed\");\n    }\n    return msg;\n}\nexports.decryptOnG1 = decryptOnG1;\nasync function decryptOnG2(key, ciphertext) {\n    // 1. Compute sigma = V XOR H2(e(rP,private))\n    const Qid = PointG1.ProjectivePoint.fromHex(key);\n    const m = PointG2.ProjectivePoint.fromHex(ciphertext.U);\n    const gidt = bls12_381_1.bls12_381.pairing(Qid, m);\n    const hgidt = gtToHash(gidt, ciphertext.W.length);\n    if (hgidt.length != ciphertext.V.length) {\n        throw new Error(\"XorSigma is of invalid length\");\n    }\n    const sigma = (0, utils_2.xor)(hgidt, ciphertext.V);\n    // 2. Compute M = W XOR H4(sigma)\n    const hsigma = h4(sigma, ciphertext.W.length);\n    const msg = (0, utils_2.xor)(hsigma, ciphertext.W);\n    // \t3. Check U = rP\n    const r = h3(sigma, msg);\n    const rP = PointG2.ProjectivePoint.BASE.multiply(r);\n    if (!rP.equals(m)) {\n        throw new Error(\"invalid proof: rP check failed\");\n    }\n    return msg;\n}\nexports.decryptOnG2 = decryptOnG2;\nfunction gtToHash(gt, len) {\n    return sha256_1.sha256\n        .create()\n        .update(\"IBE-H2\")\n        .update((0, utils_2.fp12ToBytes)(gt))\n        .digest()\n        .slice(0, len);\n}\nexports.gtToHash = gtToHash;\n// Our IBE hashes\nconst BitsToMaskForBLS12381 = 1;\nfunction h3(sigma, msg) {\n    const h3ret = sha256_1.sha256\n        .create()\n        .update(\"IBE-H3\")\n        .update(sigma)\n        .update(msg)\n        .digest();\n    // We will hash iteratively: H(i || H(\"IBE-H3\" || sigma || msg)) until we get a\n    // value that is suitable as a scalar.\n    for (let i = 1; i < 65535; i++) {\n        let data = h3ret;\n        data = sha256_1.sha256.create()\n            .update(create16BitUintBuffer(i))\n            .update(data)\n            .digest();\n        // assuming Big Endianness\n        data[0] = data[0] >> BitsToMaskForBLS12381;\n        const n = (0, utils_2.bytesToNumberBE)(data);\n        if (n < bls12_381_1.bls12_381.fields.Fr.ORDER) {\n            return n;\n        }\n    }\n    throw new Error(\"invalid proof: rP check failed\");\n}\nfunction h4(sigma, len) {\n    const h4sigma = sha256_1.sha256\n        .create()\n        .update(\"IBE-H4\")\n        .update(sigma)\n        .digest();\n    return h4sigma.slice(0, len);\n}\nfunction create16BitUintBuffer(input) {\n    if (input < 0) {\n        throw Error(\"cannot write a negative value as uint!\");\n    }\n    if (input > (2 ** 16)) {\n        throw Error(\"input value too large to fit in a uint16!\");\n    }\n    const buf = buffer_1.Buffer.alloc(2);\n    buf.writeUint16LE(input);\n    return buf;\n}\n//# sourceMappingURL=ibe.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvY3J5cHRvL2liZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsR0FBRyxtQkFBbUIsR0FBRyxtQkFBbUIsR0FBRywwQkFBMEIsR0FBRyxtQkFBbUIsR0FBRyxtQkFBbUI7QUFDckksaUJBQWlCLG1CQUFPLENBQUMsMEVBQXNCO0FBQy9DLGdCQUFnQixtQkFBTyxDQUFDLHdFQUFxQjtBQUM3QyxvQkFBb0IsbUJBQU8sQ0FBQyxnRkFBeUI7QUFDckQsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsZ0JBQWdCLG1CQUFPLENBQUMsOERBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsb0RBQW9EO0FBQzlGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsVUFBVTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsV0FBVztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpd2ktYXBwLy4vbm9kZV9tb2R1bGVzL3Rsb2NrLWpzL2NyeXB0by9pYmUuanM/YTVkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ3RUb0hhc2ggPSBleHBvcnRzLmRlY3J5cHRPbkcyID0gZXhwb3J0cy5kZWNyeXB0T25HMSA9IGV4cG9ydHMuZW5jcnlwdE9uRzJSRkM5MzgwID0gZXhwb3J0cy5lbmNyeXB0T25HMiA9IGV4cG9ydHMuZW5jcnlwdE9uRzEgPSB2b2lkIDA7XG5jb25zdCBzaGEyNTZfMSA9IHJlcXVpcmUoXCJAbm9ibGUvaGFzaGVzL3NoYTI1NlwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG5vYmxlL2hhc2hlcy91dGlsc1wiKTtcbmNvbnN0IGJsczEyXzM4MV8xID0gcmVxdWlyZShcIkBub2JsZS9jdXJ2ZXMvYmxzMTItMzgxXCIpO1xuY29uc3QgYnVmZmVyXzEgPSByZXF1aXJlKFwiYnVmZmVyXCIpO1xuY29uc3QgdXRpbHNfMiA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY29uc3QgUG9pbnRHMSA9IGJsczEyXzM4MV8xLmJsczEyXzM4MS5HMTtcbmNvbnN0IFBvaW50RzIgPSBibHMxMl8zODFfMS5ibHMxMl8zODEuRzI7XG5hc3luYyBmdW5jdGlvbiBlbmNyeXB0T25HMShtYXN0ZXIsIElELCBtc2cpIHtcbiAgICBpZiAobXNnLmxlbmd0aCA+PiA4ID4gMSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJjYW5ub3QgZW5jcnlwdCBtZXNzYWdlcyBsYXJnZXIgdGhhbiBvdXIgaGFzaCBvdXRwdXQ6IDI1NiBiaXRzLlwiKTtcbiAgICB9XG4gICAgLy8gMS4gQ29tcHV0ZSBHaWQgPSBlKG1hc3RlcixRX2lkKVxuICAgIGNvbnN0IFFpZCA9IFBvaW50RzIuaGFzaFRvQ3VydmUoSUQsIHsgRFNUOiBcIkJMU19TSUdfQkxTMTIzODFHMl9YTUQ6U0hBLTI1Nl9TU1dVX1JPX05VTF9cIiB9KTtcbiAgICBjb25zdCBtID0gUG9pbnRHMS5Qcm9qZWN0aXZlUG9pbnQuZnJvbUhleChtYXN0ZXIpO1xuICAgIGNvbnN0IEdpZCA9IGJsczEyXzM4MV8xLmJsczEyXzM4MS5wYWlyaW5nKG0sIFFpZCk7XG4gICAgLy8gMi4gRGVyaXZlIHJhbmRvbSBzaWdtYVxuICAgIGNvbnN0IHNpZ21hID0gKDAsIHV0aWxzXzEucmFuZG9tQnl0ZXMpKG1zZy5sZW5ndGgpO1xuICAgIC8vIDMuIERlcml2ZSByIGZyb20gc2lnbWEgYW5kIG1zZyBhbmQgZ2V0IGEgZmllbGQgZWxlbWVudFxuICAgIGNvbnN0IHIgPSBoMyhzaWdtYSwgbXNnKTtcbiAgICBjb25zdCBVID0gUG9pbnRHMS5Qcm9qZWN0aXZlUG9pbnQuQkFTRS5tdWx0aXBseShyKTtcbiAgICAvLyA1LiBDb21wdXRlIFYgPSBzaWdtYSBYT1IgSDIockdpZClcbiAgICBjb25zdCByR2lkID0gYmxzMTJfMzgxXzEuYmxzMTJfMzgxLmZpZWxkcy5GcDEyLnBvdyhHaWQsIHIpO1xuICAgIGNvbnN0IGhyR2lkID0gZ3RUb0hhc2gockdpZCwgbXNnLmxlbmd0aCk7XG4gICAgY29uc3QgViA9ICgwLCB1dGlsc18yLnhvcikoc2lnbWEsIGhyR2lkKTtcbiAgICAvLyA2LiBDb21wdXRlIE0gWE9SIEgoc2lnbWEpXG4gICAgY29uc3QgaHNpZ21hID0gaDQoc2lnbWEsIG1zZy5sZW5ndGgpO1xuICAgIGNvbnN0IFcgPSAoMCwgdXRpbHNfMi54b3IpKG1zZywgaHNpZ21hKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBVOiBVLnRvUmF3Qnl0ZXMoKSxcbiAgICAgICAgVjogVixcbiAgICAgICAgVzogVyxcbiAgICB9O1xufVxuZXhwb3J0cy5lbmNyeXB0T25HMSA9IGVuY3J5cHRPbkcxO1xuLy8gdXNlcyB0aGUgRFNUIGZvciBHMiBlcnJvbmVvdXNseVxuYXN5bmMgZnVuY3Rpb24gZW5jcnlwdE9uRzIobWFzdGVyLCBJRCwgbXNnKSB7XG4gICAgcmV0dXJuIGVuY09uRzIobWFzdGVyLCBJRCwgbXNnLCBcIkJMU19TSUdfQkxTMTIzODFHMl9YTUQ6U0hBLTI1Nl9TU1dVX1JPX05VTF9cIik7XG59XG5leHBvcnRzLmVuY3J5cHRPbkcyID0gZW5jcnlwdE9uRzI7XG5hc3luYyBmdW5jdGlvbiBlbmNyeXB0T25HMlJGQzkzODAobWFzdGVyLCBJRCwgbXNnKSB7XG4gICAgcmV0dXJuIGVuY09uRzIobWFzdGVyLCBJRCwgbXNnLCBcIkJMU19TSUdfQkxTMTIzODFHMV9YTUQ6U0hBLTI1Nl9TU1dVX1JPX05VTF9cIik7XG59XG5leHBvcnRzLmVuY3J5cHRPbkcyUkZDOTM4MCA9IGVuY3J5cHRPbkcyUkZDOTM4MDtcbmFzeW5jIGZ1bmN0aW9uIGVuY09uRzIobWFzdGVyLCBJRCwgbXNnLCBkc3QpIHtcbiAgICBpZiAobXNnLmxlbmd0aCA+PiA4ID4gMSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJjYW5ub3QgZW5jcnlwdCBtZXNzYWdlcyBsYXJnZXIgdGhhbiBvdXIgaGFzaCBvdXRwdXQ6IDI1NiBiaXRzLlwiKTtcbiAgICB9XG4gICAgLy8gMS4gQ29tcHV0ZSBHaWQgPSBlKG1hc3RlcixRX2lkKVxuICAgIGNvbnN0IFFpZCA9IFBvaW50RzEuaGFzaFRvQ3VydmUoSUQsIHsgRFNUOiBkc3QgfSk7XG4gICAgY29uc3QgbSA9IFBvaW50RzIuUHJvamVjdGl2ZVBvaW50LmZyb21IZXgobWFzdGVyKTtcbiAgICBjb25zdCBHaWQgPSBibHMxMl8zODFfMS5ibHMxMl8zODEucGFpcmluZyhRaWQsIG0pO1xuICAgIC8vIDIuIERlcml2ZSByYW5kb20gc2lnbWFcbiAgICBjb25zdCBzaWdtYSA9ICgwLCB1dGlsc18xLnJhbmRvbUJ5dGVzKShtc2cubGVuZ3RoKTtcbiAgICAvLyAzLiBEZXJpdmUgciBmcm9tIHNpZ21hIGFuZCBtc2cgYW5kIGdldCBhIGZpZWxkIGVsZW1lbnRcbiAgICBjb25zdCByID0gaDMoc2lnbWEsIG1zZyk7XG4gICAgY29uc3QgVSA9IFBvaW50RzIuUHJvamVjdGl2ZVBvaW50LkJBU0UubXVsdGlwbHkocik7XG4gICAgLy8gNS4gQ29tcHV0ZSBWID0gc2lnbWEgWE9SIEgyKHJHaWQpXG4gICAgY29uc3QgckdpZCA9IGJsczEyXzM4MV8xLmJsczEyXzM4MS5maWVsZHMuRnAxMi5wb3coR2lkLCByKTtcbiAgICBjb25zdCBockdpZCA9IGd0VG9IYXNoKHJHaWQsIG1zZy5sZW5ndGgpO1xuICAgIGNvbnN0IFYgPSAoMCwgdXRpbHNfMi54b3IpKHNpZ21hLCBockdpZCk7XG4gICAgLy8gNi4gQ29tcHV0ZSBNIFhPUiBIKHNpZ21hKVxuICAgIGNvbnN0IGhzaWdtYSA9IGg0KHNpZ21hLCBtc2cubGVuZ3RoKTtcbiAgICBjb25zdCBXID0gKDAsIHV0aWxzXzIueG9yKShtc2csIGhzaWdtYSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgVTogVS50b1Jhd0J5dGVzKCksXG4gICAgICAgIFY6IFYsXG4gICAgICAgIFc6IFcsXG4gICAgfTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGRlY3J5cHRPbkcxKGtleSwgY2lwaGVydGV4dCkge1xuICAgIC8vIDEuIENvbXB1dGUgc2lnbWEgPSBWIFhPUiBIMihlKHJQLHByaXZhdGUpKVxuICAgIGNvbnN0IFFpZCA9IFBvaW50RzEuUHJvamVjdGl2ZVBvaW50LmZyb21IZXgoY2lwaGVydGV4dC5VKTtcbiAgICBjb25zdCBtID0gUG9pbnRHMi5Qcm9qZWN0aXZlUG9pbnQuZnJvbUhleChrZXkpO1xuICAgIGNvbnN0IGdpZHQgPSBibHMxMl8zODFfMS5ibHMxMl8zODEucGFpcmluZyhRaWQsIG0pO1xuICAgIGNvbnN0IGhnaWR0ID0gZ3RUb0hhc2goZ2lkdCwgY2lwaGVydGV4dC5XLmxlbmd0aCk7XG4gICAgaWYgKGhnaWR0Lmxlbmd0aCAhPSBjaXBoZXJ0ZXh0LlYubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlhvclNpZ21hIGlzIG9mIGludmFsaWQgbGVuZ3RoXCIpO1xuICAgIH1cbiAgICBjb25zdCBzaWdtYSA9ICgwLCB1dGlsc18yLnhvcikoaGdpZHQsIGNpcGhlcnRleHQuVik7XG4gICAgLy8gMi4gQ29tcHV0ZSBNID0gVyBYT1IgSDQoc2lnbWEpXG4gICAgY29uc3QgaHNpZ21hID0gaDQoc2lnbWEsIGNpcGhlcnRleHQuVy5sZW5ndGgpO1xuICAgIGNvbnN0IG1zZyA9ICgwLCB1dGlsc18yLnhvcikoaHNpZ21hLCBjaXBoZXJ0ZXh0LlcpO1xuICAgIC8vIFx0My4gQ2hlY2sgVSA9IHJQXG4gICAgY29uc3QgciA9IGgzKHNpZ21hLCBtc2cpO1xuICAgIGNvbnN0IHJQID0gUG9pbnRHMS5Qcm9qZWN0aXZlUG9pbnQuQkFTRS5tdWx0aXBseShyKTtcbiAgICBpZiAoIXJQLmVxdWFscyhRaWQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgcHJvb2Y6IHJQIGNoZWNrIGZhaWxlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIG1zZztcbn1cbmV4cG9ydHMuZGVjcnlwdE9uRzEgPSBkZWNyeXB0T25HMTtcbmFzeW5jIGZ1bmN0aW9uIGRlY3J5cHRPbkcyKGtleSwgY2lwaGVydGV4dCkge1xuICAgIC8vIDEuIENvbXB1dGUgc2lnbWEgPSBWIFhPUiBIMihlKHJQLHByaXZhdGUpKVxuICAgIGNvbnN0IFFpZCA9IFBvaW50RzEuUHJvamVjdGl2ZVBvaW50LmZyb21IZXgoa2V5KTtcbiAgICBjb25zdCBtID0gUG9pbnRHMi5Qcm9qZWN0aXZlUG9pbnQuZnJvbUhleChjaXBoZXJ0ZXh0LlUpO1xuICAgIGNvbnN0IGdpZHQgPSBibHMxMl8zODFfMS5ibHMxMl8zODEucGFpcmluZyhRaWQsIG0pO1xuICAgIGNvbnN0IGhnaWR0ID0gZ3RUb0hhc2goZ2lkdCwgY2lwaGVydGV4dC5XLmxlbmd0aCk7XG4gICAgaWYgKGhnaWR0Lmxlbmd0aCAhPSBjaXBoZXJ0ZXh0LlYubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlhvclNpZ21hIGlzIG9mIGludmFsaWQgbGVuZ3RoXCIpO1xuICAgIH1cbiAgICBjb25zdCBzaWdtYSA9ICgwLCB1dGlsc18yLnhvcikoaGdpZHQsIGNpcGhlcnRleHQuVik7XG4gICAgLy8gMi4gQ29tcHV0ZSBNID0gVyBYT1IgSDQoc2lnbWEpXG4gICAgY29uc3QgaHNpZ21hID0gaDQoc2lnbWEsIGNpcGhlcnRleHQuVy5sZW5ndGgpO1xuICAgIGNvbnN0IG1zZyA9ICgwLCB1dGlsc18yLnhvcikoaHNpZ21hLCBjaXBoZXJ0ZXh0LlcpO1xuICAgIC8vIFx0My4gQ2hlY2sgVSA9IHJQXG4gICAgY29uc3QgciA9IGgzKHNpZ21hLCBtc2cpO1xuICAgIGNvbnN0IHJQID0gUG9pbnRHMi5Qcm9qZWN0aXZlUG9pbnQuQkFTRS5tdWx0aXBseShyKTtcbiAgICBpZiAoIXJQLmVxdWFscyhtKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIHByb29mOiByUCBjaGVjayBmYWlsZWRcIik7XG4gICAgfVxuICAgIHJldHVybiBtc2c7XG59XG5leHBvcnRzLmRlY3J5cHRPbkcyID0gZGVjcnlwdE9uRzI7XG5mdW5jdGlvbiBndFRvSGFzaChndCwgbGVuKSB7XG4gICAgcmV0dXJuIHNoYTI1Nl8xLnNoYTI1NlxuICAgICAgICAuY3JlYXRlKClcbiAgICAgICAgLnVwZGF0ZShcIklCRS1IMlwiKVxuICAgICAgICAudXBkYXRlKCgwLCB1dGlsc18yLmZwMTJUb0J5dGVzKShndCkpXG4gICAgICAgIC5kaWdlc3QoKVxuICAgICAgICAuc2xpY2UoMCwgbGVuKTtcbn1cbmV4cG9ydHMuZ3RUb0hhc2ggPSBndFRvSGFzaDtcbi8vIE91ciBJQkUgaGFzaGVzXG5jb25zdCBCaXRzVG9NYXNrRm9yQkxTMTIzODEgPSAxO1xuZnVuY3Rpb24gaDMoc2lnbWEsIG1zZykge1xuICAgIGNvbnN0IGgzcmV0ID0gc2hhMjU2XzEuc2hhMjU2XG4gICAgICAgIC5jcmVhdGUoKVxuICAgICAgICAudXBkYXRlKFwiSUJFLUgzXCIpXG4gICAgICAgIC51cGRhdGUoc2lnbWEpXG4gICAgICAgIC51cGRhdGUobXNnKVxuICAgICAgICAuZGlnZXN0KCk7XG4gICAgLy8gV2Ugd2lsbCBoYXNoIGl0ZXJhdGl2ZWx5OiBIKGkgfHwgSChcIklCRS1IM1wiIHx8IHNpZ21hIHx8IG1zZykpIHVudGlsIHdlIGdldCBhXG4gICAgLy8gdmFsdWUgdGhhdCBpcyBzdWl0YWJsZSBhcyBhIHNjYWxhci5cbiAgICBmb3IgKGxldCBpID0gMTsgaSA8IDY1NTM1OyBpKyspIHtcbiAgICAgICAgbGV0IGRhdGEgPSBoM3JldDtcbiAgICAgICAgZGF0YSA9IHNoYTI1Nl8xLnNoYTI1Ni5jcmVhdGUoKVxuICAgICAgICAgICAgLnVwZGF0ZShjcmVhdGUxNkJpdFVpbnRCdWZmZXIoaSkpXG4gICAgICAgICAgICAudXBkYXRlKGRhdGEpXG4gICAgICAgICAgICAuZGlnZXN0KCk7XG4gICAgICAgIC8vIGFzc3VtaW5nIEJpZyBFbmRpYW5uZXNzXG4gICAgICAgIGRhdGFbMF0gPSBkYXRhWzBdID4+IEJpdHNUb01hc2tGb3JCTFMxMjM4MTtcbiAgICAgICAgY29uc3QgbiA9ICgwLCB1dGlsc18yLmJ5dGVzVG9OdW1iZXJCRSkoZGF0YSk7XG4gICAgICAgIGlmIChuIDwgYmxzMTJfMzgxXzEuYmxzMTJfMzgxLmZpZWxkcy5Gci5PUkRFUikge1xuICAgICAgICAgICAgcmV0dXJuIG47XG4gICAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBwcm9vZjogclAgY2hlY2sgZmFpbGVkXCIpO1xufVxuZnVuY3Rpb24gaDQoc2lnbWEsIGxlbikge1xuICAgIGNvbnN0IGg0c2lnbWEgPSBzaGEyNTZfMS5zaGEyNTZcbiAgICAgICAgLmNyZWF0ZSgpXG4gICAgICAgIC51cGRhdGUoXCJJQkUtSDRcIilcbiAgICAgICAgLnVwZGF0ZShzaWdtYSlcbiAgICAgICAgLmRpZ2VzdCgpO1xuICAgIHJldHVybiBoNHNpZ21hLnNsaWNlKDAsIGxlbik7XG59XG5mdW5jdGlvbiBjcmVhdGUxNkJpdFVpbnRCdWZmZXIoaW5wdXQpIHtcbiAgICBpZiAoaW5wdXQgPCAwKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiY2Fubm90IHdyaXRlIGEgbmVnYXRpdmUgdmFsdWUgYXMgdWludCFcIik7XG4gICAgfVxuICAgIGlmIChpbnB1dCA+ICgyICoqIDE2KSkge1xuICAgICAgICB0aHJvdyBFcnJvcihcImlucHV0IHZhbHVlIHRvbyBsYXJnZSB0byBmaXQgaW4gYSB1aW50MTYhXCIpO1xuICAgIH1cbiAgICBjb25zdCBidWYgPSBidWZmZXJfMS5CdWZmZXIuYWxsb2MoMik7XG4gICAgYnVmLndyaXRlVWludDE2TEUoaW5wdXQpO1xuICAgIHJldHVybiBidWY7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pYmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/crypto/ibe.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/crypto/utils.js":
/*!***********************************************!*\
  !*** ./node_modules/tlock-js/crypto/utils.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fp12ToBytes = exports.fp6ToBytes = exports.fp2ToBytes = exports.fpToBytes = exports.bytesToHex = exports.bytesToNumberBE = exports.xor = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\n// returns a new array with the xor of a ^ b\nfunction xor(a, b) {\n    if (a.length != b.length) {\n        throw new Error(\"Error: incompatible sizes\");\n    }\n    const ret = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        ret[i] = a[i] ^ b[i];\n    }\n    return ret;\n}\nexports.xor = xor;\n////// code from Noble:\n////// https://github.com/paulmillr/noble-bls12-381/blob/6380415f1b7e5078c8883a5d8d687f2dd3bff6c2/index.ts#L132-L145\nfunction bytesToNumberBE(uint8a) {\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a)));\n}\nexports.bytesToNumberBE = bytesToNumberBE;\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    // pre-caching chars could speed this up 6x.\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n////// end of code from Noble.\n// Function to convert Noble's FPs to byte arrays compatible with Kilic library.\n// weirdly all the child FPs have to be reversed when serialising to bytes\nfunction fpToBytes(fp) {\n    // 48 bytes = 96 hex bytes\n    const hex = fp.toString(16).padStart(96, \"0\");\n    const buf = buffer_1.Buffer.alloc(hex.length / 2);\n    buf.write(hex, \"hex\");\n    return buf;\n}\nexports.fpToBytes = fpToBytes;\nfunction fp2ToBytes(fp2) {\n    return buffer_1.Buffer.concat([fp2.c1, fp2.c0].map(fpToBytes));\n}\nexports.fp2ToBytes = fp2ToBytes;\n// fp6 isn't exported by noble... let's take off the guard rails\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nfunction fp6ToBytes(fp6) {\n    return buffer_1.Buffer.concat([fp6.c2, fp6.c1, fp6.c0].map(fp2ToBytes));\n}\nexports.fp6ToBytes = fp6ToBytes;\nfunction fp12ToBytes(fp12) {\n    return buffer_1.Buffer.concat([fp12.c1, fp12.c0].map(fp6ToBytes));\n}\nexports.fp12ToBytes = fp12ToBytes;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvY3J5cHRvL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQixHQUFHLGtCQUFrQixHQUFHLGtCQUFrQixHQUFHLGlCQUFpQixHQUFHLGtCQUFrQixHQUFHLHVCQUF1QixHQUFHLFdBQVc7QUFDOUksaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGNBQWM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QiwyQkFBMkIsYUFBYTtBQUN4QztBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpd2ktYXBwLy4vbm9kZV9tb2R1bGVzL3Rsb2NrLWpzL2NyeXB0by91dGlscy5qcz9hYjU3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mcDEyVG9CeXRlcyA9IGV4cG9ydHMuZnA2VG9CeXRlcyA9IGV4cG9ydHMuZnAyVG9CeXRlcyA9IGV4cG9ydHMuZnBUb0J5dGVzID0gZXhwb3J0cy5ieXRlc1RvSGV4ID0gZXhwb3J0cy5ieXRlc1RvTnVtYmVyQkUgPSBleHBvcnRzLnhvciA9IHZvaWQgMDtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlclwiKTtcbi8vIHJldHVybnMgYSBuZXcgYXJyYXkgd2l0aCB0aGUgeG9yIG9mIGEgXiBiXG5mdW5jdGlvbiB4b3IoYSwgYikge1xuICAgIGlmIChhLmxlbmd0aCAhPSBiLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFcnJvcjogaW5jb21wYXRpYmxlIHNpemVzXCIpO1xuICAgIH1cbiAgICBjb25zdCByZXQgPSBuZXcgVWludDhBcnJheShhLmxlbmd0aCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHJldFtpXSA9IGFbaV0gXiBiW2ldO1xuICAgIH1cbiAgICByZXR1cm4gcmV0O1xufVxuZXhwb3J0cy54b3IgPSB4b3I7XG4vLy8vLy8gY29kZSBmcm9tIE5vYmxlOlxuLy8vLy8vIGh0dHBzOi8vZ2l0aHViLmNvbS9wYXVsbWlsbHIvbm9ibGUtYmxzMTItMzgxL2Jsb2IvNjM4MDQxNWYxYjdlNTA3OGM4ODgzYTVkOGQ2ODdmMmRkM2JmZjZjMi9pbmRleC50cyNMMTMyLUwxNDVcbmZ1bmN0aW9uIGJ5dGVzVG9OdW1iZXJCRSh1aW50OGEpIHtcbiAgICByZXR1cm4gQmlnSW50KCcweCcgKyBieXRlc1RvSGV4KFVpbnQ4QXJyYXkuZnJvbSh1aW50OGEpKSk7XG59XG5leHBvcnRzLmJ5dGVzVG9OdW1iZXJCRSA9IGJ5dGVzVG9OdW1iZXJCRTtcbmNvbnN0IGhleGVzID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogMjU2IH0sICh2LCBpKSA9PiBpLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpKTtcbmZ1bmN0aW9uIGJ5dGVzVG9IZXgodWludDhhKSB7XG4gICAgLy8gcHJlLWNhY2hpbmcgY2hhcnMgY291bGQgc3BlZWQgdGhpcyB1cCA2eC5cbiAgICBsZXQgaGV4ID0gJyc7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB1aW50OGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaGV4ICs9IGhleGVzW3VpbnQ4YVtpXV07XG4gICAgfVxuICAgIHJldHVybiBoZXg7XG59XG5leHBvcnRzLmJ5dGVzVG9IZXggPSBieXRlc1RvSGV4O1xuLy8vLy8vIGVuZCBvZiBjb2RlIGZyb20gTm9ibGUuXG4vLyBGdW5jdGlvbiB0byBjb252ZXJ0IE5vYmxlJ3MgRlBzIHRvIGJ5dGUgYXJyYXlzIGNvbXBhdGlibGUgd2l0aCBLaWxpYyBsaWJyYXJ5LlxuLy8gd2VpcmRseSBhbGwgdGhlIGNoaWxkIEZQcyBoYXZlIHRvIGJlIHJldmVyc2VkIHdoZW4gc2VyaWFsaXNpbmcgdG8gYnl0ZXNcbmZ1bmN0aW9uIGZwVG9CeXRlcyhmcCkge1xuICAgIC8vIDQ4IGJ5dGVzID0gOTYgaGV4IGJ5dGVzXG4gICAgY29uc3QgaGV4ID0gZnAudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDk2LCBcIjBcIik7XG4gICAgY29uc3QgYnVmID0gYnVmZmVyXzEuQnVmZmVyLmFsbG9jKGhleC5sZW5ndGggLyAyKTtcbiAgICBidWYud3JpdGUoaGV4LCBcImhleFwiKTtcbiAgICByZXR1cm4gYnVmO1xufVxuZXhwb3J0cy5mcFRvQnl0ZXMgPSBmcFRvQnl0ZXM7XG5mdW5jdGlvbiBmcDJUb0J5dGVzKGZwMikge1xuICAgIHJldHVybiBidWZmZXJfMS5CdWZmZXIuY29uY2F0KFtmcDIuYzEsIGZwMi5jMF0ubWFwKGZwVG9CeXRlcykpO1xufVxuZXhwb3J0cy5mcDJUb0J5dGVzID0gZnAyVG9CeXRlcztcbi8vIGZwNiBpc24ndCBleHBvcnRlZCBieSBub2JsZS4uLiBsZXQncyB0YWtlIG9mZiB0aGUgZ3VhcmQgcmFpbHNcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSAgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuZnVuY3Rpb24gZnA2VG9CeXRlcyhmcDYpIHtcbiAgICByZXR1cm4gYnVmZmVyXzEuQnVmZmVyLmNvbmNhdChbZnA2LmMyLCBmcDYuYzEsIGZwNi5jMF0ubWFwKGZwMlRvQnl0ZXMpKTtcbn1cbmV4cG9ydHMuZnA2VG9CeXRlcyA9IGZwNlRvQnl0ZXM7XG5mdW5jdGlvbiBmcDEyVG9CeXRlcyhmcDEyKSB7XG4gICAgcmV0dXJuIGJ1ZmZlcl8xLkJ1ZmZlci5jb25jYXQoW2ZwMTIuYzEsIGZwMTIuYzBdLm1hcChmcDZUb0J5dGVzKSk7XG59XG5leHBvcnRzLmZwMTJUb0J5dGVzID0gZnAxMlRvQnl0ZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/crypto/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/drand/defaults.js":
/*!*************************************************!*\
  !*** ./node_modules/tlock-js/drand/defaults.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TESTNET_CHAIN_INFO = exports.TESTNET_CHAIN_URL = exports.defaultChainInfo = exports.defaultChainUrl = exports.MAINNET_CHAIN_INFO_NON_RFC = exports.MAINNET_CHAIN_URL_NON_RFC = exports.MAINNET_CHAIN_INFO = exports.MAINNET_CHAIN_URL = void 0;\nexports.MAINNET_CHAIN_URL = \"https://api.drand.sh/52db9ba70e0cc0f6eaf7803dd07447a1f5477735fd3f661792ba94600c84e971\";\nexports.MAINNET_CHAIN_INFO = {\n    public_key: \"83cf0f2896adee7eb8b5f01fcad3912212c437e0073e911fb90022d3e760183c8c4b450b6a0a6c3ac6a5776a2d1064510d1fec758c921cc22b0e17e63aaf4bcb5ed66304de9cf809bd274ca73bab4af5a6e9c76a4bc09e76eae8991ef5ece45a\",\n    period: 3,\n    genesis_time: 1692803367,\n    hash: \"52db9ba70e0cc0f6eaf7803dd07447a1f5477735fd3f661792ba94600c84e971\",\n    groupHash: \"f477d5c89f21a17c863a7f937c6a6d15859414d2be09cd448d4279af331c5d3e\",\n    schemeID: \"bls-unchained-g1-rfc9380\",\n    metadata: {\n        beaconID: \"quicknet\"\n    }\n};\nexports.MAINNET_CHAIN_URL_NON_RFC = \"https://api.drand.sh/dbd506d6ef76e5f386f41c651dcb808c5bcbd75471cc4eafa3f4df7ad4e4c493\";\nexports.MAINNET_CHAIN_INFO_NON_RFC = {\n    hash: \"dbd506d6ef76e5f386f41c651dcb808c5bcbd75471cc4eafa3f4df7ad4e4c493\",\n    public_key: \"a0b862a7527fee3a731bcb59280ab6abd62d5c0b6ea03dc4ddf6612fdfc9d01f01c31542541771903475eb1ec6615f8d0df0b8b6dce385811d6dcf8cbefb8759e5e616a3dfd054c928940766d9a5b9db91e3b697e5d70a975181e007f87fca5e\",\n    period: 3,\n    genesis_time: 1677685200,\n    groupHash: \"a81e9d63f614ccdb144b8ff79fbd4d5a2d22055c0bfe4ee9a8092003dab1c6c0\",\n    schemeID: \"bls-unchained-on-g1\",\n    metadata: {\n        beaconID: \"fastnet\"\n    }\n};\nexports.defaultChainUrl = exports.MAINNET_CHAIN_URL;\nexports.defaultChainInfo = exports.MAINNET_CHAIN_INFO;\nexports.TESTNET_CHAIN_URL = \"https://pl-us.testnet.drand.sh/7672797f548f3f4748ac4bf3352fc6c6b6468c9ad40ad456a397545c6e2df5bf\";\nexports.TESTNET_CHAIN_INFO = {\n    hash: \"7672797f548f3f4748ac4bf3352fc6c6b6468c9ad40ad456a397545c6e2df5bf\",\n    public_key: \"8200fc249deb0148eb918d6e213980c5d01acd7fc251900d9260136da3b54836ce125172399ddc69c4e3e11429b62c11\",\n    genesis_time: 1651677099,\n    period: 3,\n    schemeID: \"pedersen-bls-unchained\",\n    groupHash: \"65083634d852ae169e21b6ce5f0410be9ed4cc679b9970236f7875cff667e13d\",\n    metadata: {\n        beaconID: \"testnet-unchained-3s\"\n    }\n};\n//# sourceMappingURL=defaults.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvZHJhbmQvZGVmYXVsdHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLEdBQUcseUJBQXlCLEdBQUcsd0JBQXdCLEdBQUcsdUJBQXVCLEdBQUcsa0NBQWtDLEdBQUcsaUNBQWlDLEdBQUcsMEJBQTBCLEdBQUcseUJBQXlCO0FBQzdPLHlCQUF5QjtBQUN6QiwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakMsa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCLHdCQUF3QjtBQUN4Qix5QkFBeUI7QUFDekIsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXdpLWFwcC8uL25vZGVfbW9kdWxlcy90bG9jay1qcy9kcmFuZC9kZWZhdWx0cy5qcz9hODZlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5URVNUTkVUX0NIQUlOX0lORk8gPSBleHBvcnRzLlRFU1RORVRfQ0hBSU5fVVJMID0gZXhwb3J0cy5kZWZhdWx0Q2hhaW5JbmZvID0gZXhwb3J0cy5kZWZhdWx0Q2hhaW5VcmwgPSBleHBvcnRzLk1BSU5ORVRfQ0hBSU5fSU5GT19OT05fUkZDID0gZXhwb3J0cy5NQUlOTkVUX0NIQUlOX1VSTF9OT05fUkZDID0gZXhwb3J0cy5NQUlOTkVUX0NIQUlOX0lORk8gPSBleHBvcnRzLk1BSU5ORVRfQ0hBSU5fVVJMID0gdm9pZCAwO1xuZXhwb3J0cy5NQUlOTkVUX0NIQUlOX1VSTCA9IFwiaHR0cHM6Ly9hcGkuZHJhbmQuc2gvNTJkYjliYTcwZTBjYzBmNmVhZjc4MDNkZDA3NDQ3YTFmNTQ3NzczNWZkM2Y2NjE3OTJiYTk0NjAwYzg0ZTk3MVwiO1xuZXhwb3J0cy5NQUlOTkVUX0NIQUlOX0lORk8gPSB7XG4gICAgcHVibGljX2tleTogXCI4M2NmMGYyODk2YWRlZTdlYjhiNWYwMWZjYWQzOTEyMjEyYzQzN2UwMDczZTkxMWZiOTAwMjJkM2U3NjAxODNjOGM0YjQ1MGI2YTBhNmMzYWM2YTU3NzZhMmQxMDY0NTEwZDFmZWM3NThjOTIxY2MyMmIwZTE3ZTYzYWFmNGJjYjVlZDY2MzA0ZGU5Y2Y4MDliZDI3NGNhNzNiYWI0YWY1YTZlOWM3NmE0YmMwOWU3NmVhZTg5OTFlZjVlY2U0NWFcIixcbiAgICBwZXJpb2Q6IDMsXG4gICAgZ2VuZXNpc190aW1lOiAxNjkyODAzMzY3LFxuICAgIGhhc2g6IFwiNTJkYjliYTcwZTBjYzBmNmVhZjc4MDNkZDA3NDQ3YTFmNTQ3NzczNWZkM2Y2NjE3OTJiYTk0NjAwYzg0ZTk3MVwiLFxuICAgIGdyb3VwSGFzaDogXCJmNDc3ZDVjODlmMjFhMTdjODYzYTdmOTM3YzZhNmQxNTg1OTQxNGQyYmUwOWNkNDQ4ZDQyNzlhZjMzMWM1ZDNlXCIsXG4gICAgc2NoZW1lSUQ6IFwiYmxzLXVuY2hhaW5lZC1nMS1yZmM5MzgwXCIsXG4gICAgbWV0YWRhdGE6IHtcbiAgICAgICAgYmVhY29uSUQ6IFwicXVpY2tuZXRcIlxuICAgIH1cbn07XG5leHBvcnRzLk1BSU5ORVRfQ0hBSU5fVVJMX05PTl9SRkMgPSBcImh0dHBzOi8vYXBpLmRyYW5kLnNoL2RiZDUwNmQ2ZWY3NmU1ZjM4NmY0MWM2NTFkY2I4MDhjNWJjYmQ3NTQ3MWNjNGVhZmEzZjRkZjdhZDRlNGM0OTNcIjtcbmV4cG9ydHMuTUFJTk5FVF9DSEFJTl9JTkZPX05PTl9SRkMgPSB7XG4gICAgaGFzaDogXCJkYmQ1MDZkNmVmNzZlNWYzODZmNDFjNjUxZGNiODA4YzViY2JkNzU0NzFjYzRlYWZhM2Y0ZGY3YWQ0ZTRjNDkzXCIsXG4gICAgcHVibGljX2tleTogXCJhMGI4NjJhNzUyN2ZlZTNhNzMxYmNiNTkyODBhYjZhYmQ2MmQ1YzBiNmVhMDNkYzRkZGY2NjEyZmRmYzlkMDFmMDFjMzE1NDI1NDE3NzE5MDM0NzVlYjFlYzY2MTVmOGQwZGYwYjhiNmRjZTM4NTgxMWQ2ZGNmOGNiZWZiODc1OWU1ZTYxNmEzZGZkMDU0YzkyODk0MDc2NmQ5YTViOWRiOTFlM2I2OTdlNWQ3MGE5NzUxODFlMDA3Zjg3ZmNhNWVcIixcbiAgICBwZXJpb2Q6IDMsXG4gICAgZ2VuZXNpc190aW1lOiAxNjc3Njg1MjAwLFxuICAgIGdyb3VwSGFzaDogXCJhODFlOWQ2M2Y2MTRjY2RiMTQ0YjhmZjc5ZmJkNGQ1YTJkMjIwNTVjMGJmZTRlZTlhODA5MjAwM2RhYjFjNmMwXCIsXG4gICAgc2NoZW1lSUQ6IFwiYmxzLXVuY2hhaW5lZC1vbi1nMVwiLFxuICAgIG1ldGFkYXRhOiB7XG4gICAgICAgIGJlYWNvbklEOiBcImZhc3RuZXRcIlxuICAgIH1cbn07XG5leHBvcnRzLmRlZmF1bHRDaGFpblVybCA9IGV4cG9ydHMuTUFJTk5FVF9DSEFJTl9VUkw7XG5leHBvcnRzLmRlZmF1bHRDaGFpbkluZm8gPSBleHBvcnRzLk1BSU5ORVRfQ0hBSU5fSU5GTztcbmV4cG9ydHMuVEVTVE5FVF9DSEFJTl9VUkwgPSBcImh0dHBzOi8vcGwtdXMudGVzdG5ldC5kcmFuZC5zaC83NjcyNzk3ZjU0OGYzZjQ3NDhhYzRiZjMzNTJmYzZjNmI2NDY4YzlhZDQwYWQ0NTZhMzk3NTQ1YzZlMmRmNWJmXCI7XG5leHBvcnRzLlRFU1RORVRfQ0hBSU5fSU5GTyA9IHtcbiAgICBoYXNoOiBcIjc2NzI3OTdmNTQ4ZjNmNDc0OGFjNGJmMzM1MmZjNmM2YjY0NjhjOWFkNDBhZDQ1NmEzOTc1NDVjNmUyZGY1YmZcIixcbiAgICBwdWJsaWNfa2V5OiBcIjgyMDBmYzI0OWRlYjAxNDhlYjkxOGQ2ZTIxMzk4MGM1ZDAxYWNkN2ZjMjUxOTAwZDkyNjAxMzZkYTNiNTQ4MzZjZTEyNTE3MjM5OWRkYzY5YzRlM2UxMTQyOWI2MmMxMVwiLFxuICAgIGdlbmVzaXNfdGltZTogMTY1MTY3NzA5OSxcbiAgICBwZXJpb2Q6IDMsXG4gICAgc2NoZW1lSUQ6IFwicGVkZXJzZW4tYmxzLXVuY2hhaW5lZFwiLFxuICAgIGdyb3VwSGFzaDogXCI2NTA4MzYzNGQ4NTJhZTE2OWUyMWI2Y2U1ZjA0MTBiZTllZDRjYzY3OWI5OTcwMjM2Zjc4NzVjZmY2NjdlMTNkXCIsXG4gICAgbWV0YWRhdGE6IHtcbiAgICAgICAgYmVhY29uSUQ6IFwidGVzdG5ldC11bmNoYWluZWQtM3NcIlxuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZhdWx0cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/drand/defaults.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/drand/timelock-decrypter.js":
/*!***********************************************************!*\
  !*** ./node_modules/tlock-js/drand/timelock-decrypter.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createTimelockDecrypter = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst drand_client_1 = __webpack_require__(/*! drand-client */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/index.js\");\nconst ibe = __importStar(__webpack_require__(/*! ../crypto/ibe */ \"(ssr)/./node_modules/tlock-js/crypto/ibe.js\"));\nconst bls12_381_1 = __webpack_require__(/*! @noble/curves/bls12-381 */ \"(ssr)/./node_modules/@noble/curves/bls12-381.js\");\nfunction createTimelockDecrypter(network) {\n    return async (recipients) => {\n        const tlockStanza = recipients.find(it => it.type === \"tlock\");\n        if (!tlockStanza) {\n            throw Error(\"You must pass a timelock stanza!\");\n        }\n        const { type, args, body } = tlockStanza;\n        if (type !== \"tlock\") {\n            throw Error(`Timelock expects the type of the stanza to be \"tlock`);\n        }\n        if (args.length !== 2) {\n            throw Error(`Timelock stanza expected 2 args: roundNumber and chainHash. Only received ${args.length}`);\n        }\n        const chainInfo = await network.chain().info();\n        // should probably verify chain hash here too\n        const roundNumber = parseRoundNumber(args);\n        if ((0, drand_client_1.roundTime)(chainInfo, roundNumber) > Date.now()) {\n            throw Error(`It's too early to decrypt the ciphertext - decryptable at round ${roundNumber}`);\n        }\n        const beacon = await (0, drand_client_1.fetchBeacon)(network, roundNumber);\n        console.log(`beacon received: ${JSON.stringify(beacon)}`);\n        switch (chainInfo.schemeID) {\n            case \"pedersen-bls-unchained\": {\n                const ciphertext = parseCiphertext(body, bls12_381_1.bls12_381.G1.ProjectivePoint.BASE);\n                return await ibe.decryptOnG1(buffer_1.Buffer.from(beacon.signature, \"hex\"), ciphertext);\n            }\n            case \"bls-unchained-on-g1\": {\n                const ciphertext = parseCiphertext(body, bls12_381_1.bls12_381.G2.ProjectivePoint.BASE);\n                return await ibe.decryptOnG2(buffer_1.Buffer.from(beacon.signature, \"hex\"), ciphertext);\n            }\n            case \"bls-unchained-g1-rfc9380\": {\n                const ciphertext = parseCiphertext(body, bls12_381_1.bls12_381.G2.ProjectivePoint.BASE);\n                return await ibe.decryptOnG2(buffer_1.Buffer.from(beacon.signature, \"hex\"), ciphertext);\n            }\n            default:\n                throw Error(`Unsupported scheme: ${chainInfo.schemeID} - you must use a drand network with an unchained scheme for timelock decryption!`);\n        }\n    };\n    function parseRoundNumber(args) {\n        const [roundNumber] = args;\n        const roundNumberParsed = Number.parseInt(roundNumber);\n        // compare against itself, to make sure it's not NaN\n        if (roundNumberParsed !== roundNumberParsed) {\n            throw Error(`Expected the roundNumber arg to be a number, but it was ${roundNumber}!`);\n        }\n        return roundNumberParsed;\n    }\n    function parseCiphertext(body, base) {\n        const pointLength = base.toRawBytes(true).byteLength;\n        const pointBytes = body.subarray(0, pointLength);\n        const theRest = body.subarray(pointLength);\n        const eachHalf = theRest.length / 2;\n        const U = pointBytes;\n        const V = theRest.subarray(0, eachHalf);\n        const W = theRest.subarray(eachHalf);\n        return { U, V, W };\n    }\n}\nexports.createTimelockDecrypter = createTimelockDecrypter;\n//# sourceMappingURL=timelock-decrypter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvZHJhbmQvdGltZWxvY2stZGVjcnlwdGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0IsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsdUJBQXVCLG1CQUFPLENBQUMsc0ZBQWM7QUFDN0MseUJBQXlCLG1CQUFPLENBQUMsa0VBQWU7QUFDaEQsb0JBQW9CLG1CQUFPLENBQUMsZ0ZBQXlCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxR0FBcUcsWUFBWTtBQUNqSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkZBQTJGLFlBQVk7QUFDdkc7QUFDQTtBQUNBLHdDQUF3Qyx1QkFBdUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxvQkFBb0I7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRkFBbUYsWUFBWTtBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXdpLWFwcC8uL25vZGVfbW9kdWxlcy90bG9jay1qcy9kcmFuZC90aW1lbG9jay1kZWNyeXB0ZXIuanM/OGRlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVUaW1lbG9ja0RlY3J5cHRlciA9IHZvaWQgMDtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlclwiKTtcbmNvbnN0IGRyYW5kX2NsaWVudF8xID0gcmVxdWlyZShcImRyYW5kLWNsaWVudFwiKTtcbmNvbnN0IGliZSA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi4vY3J5cHRvL2liZVwiKSk7XG5jb25zdCBibHMxMl8zODFfMSA9IHJlcXVpcmUoXCJAbm9ibGUvY3VydmVzL2JsczEyLTM4MVwiKTtcbmZ1bmN0aW9uIGNyZWF0ZVRpbWVsb2NrRGVjcnlwdGVyKG5ldHdvcmspIHtcbiAgICByZXR1cm4gYXN5bmMgKHJlY2lwaWVudHMpID0+IHtcbiAgICAgICAgY29uc3QgdGxvY2tTdGFuemEgPSByZWNpcGllbnRzLmZpbmQoaXQgPT4gaXQudHlwZSA9PT0gXCJ0bG9ja1wiKTtcbiAgICAgICAgaWYgKCF0bG9ja1N0YW56YSkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJZb3UgbXVzdCBwYXNzIGEgdGltZWxvY2sgc3RhbnphIVwiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB7IHR5cGUsIGFyZ3MsIGJvZHkgfSA9IHRsb2NrU3RhbnphO1xuICAgICAgICBpZiAodHlwZSAhPT0gXCJ0bG9ja1wiKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgVGltZWxvY2sgZXhwZWN0cyB0aGUgdHlwZSBvZiB0aGUgc3RhbnphIHRvIGJlIFwidGxvY2tgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYXJncy5sZW5ndGggIT09IDIpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBUaW1lbG9jayBzdGFuemEgZXhwZWN0ZWQgMiBhcmdzOiByb3VuZE51bWJlciBhbmQgY2hhaW5IYXNoLiBPbmx5IHJlY2VpdmVkICR7YXJncy5sZW5ndGh9YCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY2hhaW5JbmZvID0gYXdhaXQgbmV0d29yay5jaGFpbigpLmluZm8oKTtcbiAgICAgICAgLy8gc2hvdWxkIHByb2JhYmx5IHZlcmlmeSBjaGFpbiBoYXNoIGhlcmUgdG9vXG4gICAgICAgIGNvbnN0IHJvdW5kTnVtYmVyID0gcGFyc2VSb3VuZE51bWJlcihhcmdzKTtcbiAgICAgICAgaWYgKCgwLCBkcmFuZF9jbGllbnRfMS5yb3VuZFRpbWUpKGNoYWluSW5mbywgcm91bmROdW1iZXIpID4gRGF0ZS5ub3coKSkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYEl0J3MgdG9vIGVhcmx5IHRvIGRlY3J5cHQgdGhlIGNpcGhlcnRleHQgLSBkZWNyeXB0YWJsZSBhdCByb3VuZCAke3JvdW5kTnVtYmVyfWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJlYWNvbiA9IGF3YWl0ICgwLCBkcmFuZF9jbGllbnRfMS5mZXRjaEJlYWNvbikobmV0d29yaywgcm91bmROdW1iZXIpO1xuICAgICAgICBjb25zb2xlLmxvZyhgYmVhY29uIHJlY2VpdmVkOiAke0pTT04uc3RyaW5naWZ5KGJlYWNvbil9YCk7XG4gICAgICAgIHN3aXRjaCAoY2hhaW5JbmZvLnNjaGVtZUlEKSB7XG4gICAgICAgICAgICBjYXNlIFwicGVkZXJzZW4tYmxzLXVuY2hhaW5lZFwiOiB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2lwaGVydGV4dCA9IHBhcnNlQ2lwaGVydGV4dChib2R5LCBibHMxMl8zODFfMS5ibHMxMl8zODEuRzEuUHJvamVjdGl2ZVBvaW50LkJBU0UpO1xuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBpYmUuZGVjcnlwdE9uRzEoYnVmZmVyXzEuQnVmZmVyLmZyb20oYmVhY29uLnNpZ25hdHVyZSwgXCJoZXhcIiksIGNpcGhlcnRleHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2FzZSBcImJscy11bmNoYWluZWQtb24tZzFcIjoge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNpcGhlcnRleHQgPSBwYXJzZUNpcGhlcnRleHQoYm9keSwgYmxzMTJfMzgxXzEuYmxzMTJfMzgxLkcyLlByb2plY3RpdmVQb2ludC5CQVNFKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgaWJlLmRlY3J5cHRPbkcyKGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKGJlYWNvbi5zaWduYXR1cmUsIFwiaGV4XCIpLCBjaXBoZXJ0ZXh0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgXCJibHMtdW5jaGFpbmVkLWcxLXJmYzkzODBcIjoge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNpcGhlcnRleHQgPSBwYXJzZUNpcGhlcnRleHQoYm9keSwgYmxzMTJfMzgxXzEuYmxzMTJfMzgxLkcyLlByb2plY3RpdmVQb2ludC5CQVNFKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgaWJlLmRlY3J5cHRPbkcyKGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKGJlYWNvbi5zaWduYXR1cmUsIFwiaGV4XCIpLCBjaXBoZXJ0ZXh0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoYFVuc3VwcG9ydGVkIHNjaGVtZTogJHtjaGFpbkluZm8uc2NoZW1lSUR9IC0geW91IG11c3QgdXNlIGEgZHJhbmQgbmV0d29yayB3aXRoIGFuIHVuY2hhaW5lZCBzY2hlbWUgZm9yIHRpbWVsb2NrIGRlY3J5cHRpb24hYCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGZ1bmN0aW9uIHBhcnNlUm91bmROdW1iZXIoYXJncykge1xuICAgICAgICBjb25zdCBbcm91bmROdW1iZXJdID0gYXJncztcbiAgICAgICAgY29uc3Qgcm91bmROdW1iZXJQYXJzZWQgPSBOdW1iZXIucGFyc2VJbnQocm91bmROdW1iZXIpO1xuICAgICAgICAvLyBjb21wYXJlIGFnYWluc3QgaXRzZWxmLCB0byBtYWtlIHN1cmUgaXQncyBub3QgTmFOXG4gICAgICAgIGlmIChyb3VuZE51bWJlclBhcnNlZCAhPT0gcm91bmROdW1iZXJQYXJzZWQpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBFeHBlY3RlZCB0aGUgcm91bmROdW1iZXIgYXJnIHRvIGJlIGEgbnVtYmVyLCBidXQgaXQgd2FzICR7cm91bmROdW1iZXJ9IWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByb3VuZE51bWJlclBhcnNlZDtcbiAgICB9XG4gICAgZnVuY3Rpb24gcGFyc2VDaXBoZXJ0ZXh0KGJvZHksIGJhc2UpIHtcbiAgICAgICAgY29uc3QgcG9pbnRMZW5ndGggPSBiYXNlLnRvUmF3Qnl0ZXModHJ1ZSkuYnl0ZUxlbmd0aDtcbiAgICAgICAgY29uc3QgcG9pbnRCeXRlcyA9IGJvZHkuc3ViYXJyYXkoMCwgcG9pbnRMZW5ndGgpO1xuICAgICAgICBjb25zdCB0aGVSZXN0ID0gYm9keS5zdWJhcnJheShwb2ludExlbmd0aCk7XG4gICAgICAgIGNvbnN0IGVhY2hIYWxmID0gdGhlUmVzdC5sZW5ndGggLyAyO1xuICAgICAgICBjb25zdCBVID0gcG9pbnRCeXRlcztcbiAgICAgICAgY29uc3QgViA9IHRoZVJlc3Quc3ViYXJyYXkoMCwgZWFjaEhhbGYpO1xuICAgICAgICBjb25zdCBXID0gdGhlUmVzdC5zdWJhcnJheShlYWNoSGFsZik7XG4gICAgICAgIHJldHVybiB7IFUsIFYsIFcgfTtcbiAgICB9XG59XG5leHBvcnRzLmNyZWF0ZVRpbWVsb2NrRGVjcnlwdGVyID0gY3JlYXRlVGltZWxvY2tEZWNyeXB0ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10aW1lbG9jay1kZWNyeXB0ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/drand/timelock-decrypter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/drand/timelock-encrypter.js":
/*!***********************************************************!*\
  !*** ./node_modules/tlock-js/drand/timelock-encrypter.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hashedRoundNumber = exports.createTimelockEncrypter = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst ibe = __importStar(__webpack_require__(/*! ../crypto/ibe */ \"(ssr)/./node_modules/tlock-js/crypto/ibe.js\"));\nfunction createTimelockEncrypter(client, roundNumber) {\n    if (roundNumber < 1) {\n        throw Error(\"You cannot encrypt for a roundNumber less than 1 (genesis = 0)\");\n    }\n    return async (fileKey) => {\n        const chainInfo = await client.chain().info();\n        const pk = buffer_1.Buffer.from(chainInfo.public_key, \"hex\");\n        const id = hashedRoundNumber(roundNumber);\n        let ciphertext;\n        switch (chainInfo.schemeID) {\n            case \"pedersen-bls-unchained\":\n                {\n                    ciphertext = await ibe.encryptOnG1(pk, id, fileKey);\n                }\n                break;\n            case \"bls-unchained-on-g1\":\n                {\n                    ciphertext = await ibe.encryptOnG2(pk, id, fileKey);\n                }\n                break;\n            case \"bls-unchained-g1-rfc9380\":\n                {\n                    ciphertext = await ibe.encryptOnG2RFC9380(pk, id, fileKey);\n                }\n                break;\n            default:\n                throw Error(`Unsupported scheme: ${chainInfo.schemeID} - you must use a drand network with an unchained scheme for timelock encryption!`);\n        }\n        return [{\n                type: \"tlock\",\n                args: [`${roundNumber}`, chainInfo.hash],\n                body: serialisedCiphertext(ciphertext)\n            }];\n    };\n}\nexports.createTimelockEncrypter = createTimelockEncrypter;\nfunction hashedRoundNumber(round) {\n    const roundNumberBuffer = buffer_1.Buffer.alloc(64 / 8);\n    roundNumberBuffer.writeBigUInt64BE(BigInt(round));\n    return (0, sha256_1.sha256)(roundNumberBuffer);\n}\nexports.hashedRoundNumber = hashedRoundNumber;\nfunction serialisedCiphertext(ciphertext) {\n    return buffer_1.Buffer.concat([ciphertext.U, ciphertext.V, ciphertext.W]);\n}\n//# sourceMappingURL=timelock-encrypter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvZHJhbmQvdGltZWxvY2stZW5jcnlwdGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUIsR0FBRywrQkFBK0I7QUFDM0QsaUJBQWlCLG1CQUFPLENBQUMsMEVBQXNCO0FBQy9DLGlCQUFpQixtQkFBTyxDQUFDLHNCQUFRO0FBQ2pDLHlCQUF5QixtQkFBTyxDQUFDLGtFQUFlO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsb0JBQW9CO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixZQUFZO0FBQ3RDO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpd2ktYXBwLy4vbm9kZV9tb2R1bGVzL3Rsb2NrLWpzL2RyYW5kL3RpbWVsb2NrLWVuY3J5cHRlci5qcz9mMGQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhc2hlZFJvdW5kTnVtYmVyID0gZXhwb3J0cy5jcmVhdGVUaW1lbG9ja0VuY3J5cHRlciA9IHZvaWQgMDtcbmNvbnN0IHNoYTI1Nl8xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvc2hhMjU2XCIpO1xuY29uc3QgYnVmZmVyXzEgPSByZXF1aXJlKFwiYnVmZmVyXCIpO1xuY29uc3QgaWJlID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuLi9jcnlwdG8vaWJlXCIpKTtcbmZ1bmN0aW9uIGNyZWF0ZVRpbWVsb2NrRW5jcnlwdGVyKGNsaWVudCwgcm91bmROdW1iZXIpIHtcbiAgICBpZiAocm91bmROdW1iZXIgPCAxKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiWW91IGNhbm5vdCBlbmNyeXB0IGZvciBhIHJvdW5kTnVtYmVyIGxlc3MgdGhhbiAxIChnZW5lc2lzID0gMClcIik7XG4gICAgfVxuICAgIHJldHVybiBhc3luYyAoZmlsZUtleSkgPT4ge1xuICAgICAgICBjb25zdCBjaGFpbkluZm8gPSBhd2FpdCBjbGllbnQuY2hhaW4oKS5pbmZvKCk7XG4gICAgICAgIGNvbnN0IHBrID0gYnVmZmVyXzEuQnVmZmVyLmZyb20oY2hhaW5JbmZvLnB1YmxpY19rZXksIFwiaGV4XCIpO1xuICAgICAgICBjb25zdCBpZCA9IGhhc2hlZFJvdW5kTnVtYmVyKHJvdW5kTnVtYmVyKTtcbiAgICAgICAgbGV0IGNpcGhlcnRleHQ7XG4gICAgICAgIHN3aXRjaCAoY2hhaW5JbmZvLnNjaGVtZUlEKSB7XG4gICAgICAgICAgICBjYXNlIFwicGVkZXJzZW4tYmxzLXVuY2hhaW5lZFwiOlxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY2lwaGVydGV4dCA9IGF3YWl0IGliZS5lbmNyeXB0T25HMShwaywgaWQsIGZpbGVLZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJibHMtdW5jaGFpbmVkLW9uLWcxXCI6XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjaXBoZXJ0ZXh0ID0gYXdhaXQgaWJlLmVuY3J5cHRPbkcyKHBrLCBpZCwgZmlsZUtleSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcImJscy11bmNoYWluZWQtZzEtcmZjOTM4MFwiOlxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY2lwaGVydGV4dCA9IGF3YWl0IGliZS5lbmNyeXB0T25HMlJGQzkzODAocGssIGlkLCBmaWxlS2V5KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IEVycm9yKGBVbnN1cHBvcnRlZCBzY2hlbWU6ICR7Y2hhaW5JbmZvLnNjaGVtZUlEfSAtIHlvdSBtdXN0IHVzZSBhIGRyYW5kIG5ldHdvcmsgd2l0aCBhbiB1bmNoYWluZWQgc2NoZW1lIGZvciB0aW1lbG9jayBlbmNyeXB0aW9uIWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbe1xuICAgICAgICAgICAgICAgIHR5cGU6IFwidGxvY2tcIixcbiAgICAgICAgICAgICAgICBhcmdzOiBbYCR7cm91bmROdW1iZXJ9YCwgY2hhaW5JbmZvLmhhc2hdLFxuICAgICAgICAgICAgICAgIGJvZHk6IHNlcmlhbGlzZWRDaXBoZXJ0ZXh0KGNpcGhlcnRleHQpXG4gICAgICAgICAgICB9XTtcbiAgICB9O1xufVxuZXhwb3J0cy5jcmVhdGVUaW1lbG9ja0VuY3J5cHRlciA9IGNyZWF0ZVRpbWVsb2NrRW5jcnlwdGVyO1xuZnVuY3Rpb24gaGFzaGVkUm91bmROdW1iZXIocm91bmQpIHtcbiAgICBjb25zdCByb3VuZE51bWJlckJ1ZmZlciA9IGJ1ZmZlcl8xLkJ1ZmZlci5hbGxvYyg2NCAvIDgpO1xuICAgIHJvdW5kTnVtYmVyQnVmZmVyLndyaXRlQmlnVUludDY0QkUoQmlnSW50KHJvdW5kKSk7XG4gICAgcmV0dXJuICgwLCBzaGEyNTZfMS5zaGEyNTYpKHJvdW5kTnVtYmVyQnVmZmVyKTtcbn1cbmV4cG9ydHMuaGFzaGVkUm91bmROdW1iZXIgPSBoYXNoZWRSb3VuZE51bWJlcjtcbmZ1bmN0aW9uIHNlcmlhbGlzZWRDaXBoZXJ0ZXh0KGNpcGhlcnRleHQpIHtcbiAgICByZXR1cm4gYnVmZmVyXzEuQnVmZmVyLmNvbmNhdChbY2lwaGVydGV4dC5VLCBjaXBoZXJ0ZXh0LlYsIGNpcGhlcnRleHQuV10pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGltZWxvY2stZW5jcnlwdGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/drand/timelock-encrypter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/index.js":
/*!****************************************!*\
  !*** ./node_modules/tlock-js/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Buffer = exports.roundAt = exports.roundTime = exports.defaultChainUrl = exports.defaultChainInfo = exports.HttpCachingChain = exports.HttpChainClient = exports.nonRFCMainnetClient = exports.mainnetClient = exports.testnetClient = exports.timelockDecrypt = exports.timelockEncrypt = void 0;\nconst drand_client_1 = __webpack_require__(/*! drand-client */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/index.js\");\nObject.defineProperty(exports, \"HttpChainClient\", ({ enumerable: true, get: function () { return drand_client_1.HttpChainClient; } }));\nObject.defineProperty(exports, \"HttpCachingChain\", ({ enumerable: true, get: function () { return drand_client_1.HttpCachingChain; } }));\nObject.defineProperty(exports, \"roundTime\", ({ enumerable: true, get: function () { return drand_client_1.roundTime; } }));\nObject.defineProperty(exports, \"roundAt\", ({ enumerable: true, get: function () { return drand_client_1.roundAt; } }));\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nObject.defineProperty(exports, \"Buffer\", ({ enumerable: true, get: function () { return buffer_1.Buffer; } }));\nconst timelock_encrypter_1 = __webpack_require__(/*! ./drand/timelock-encrypter */ \"(ssr)/./node_modules/tlock-js/drand/timelock-encrypter.js\");\nconst age_encrypt_decrypt_1 = __webpack_require__(/*! ./age/age-encrypt-decrypt */ \"(ssr)/./node_modules/tlock-js/age/age-encrypt-decrypt.js\");\nconst armor_1 = __webpack_require__(/*! ./age/armor */ \"(ssr)/./node_modules/tlock-js/age/armor.js\");\nconst timelock_decrypter_1 = __webpack_require__(/*! ./drand/timelock-decrypter */ \"(ssr)/./node_modules/tlock-js/drand/timelock-decrypter.js\");\nconst defaults_1 = __webpack_require__(/*! ./drand/defaults */ \"(ssr)/./node_modules/tlock-js/drand/defaults.js\");\nObject.defineProperty(exports, \"defaultChainInfo\", ({ enumerable: true, get: function () { return defaults_1.defaultChainInfo; } }));\nObject.defineProperty(exports, \"defaultChainUrl\", ({ enumerable: true, get: function () { return defaults_1.defaultChainUrl; } }));\nconst version_1 = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/tlock-js/version.js\");\nasync function timelockEncrypt(roundNumber, payload, chainClient) {\n    const timelockEncrypter = (0, timelock_encrypter_1.createTimelockEncrypter)(chainClient, roundNumber);\n    const agePayload = await (0, age_encrypt_decrypt_1.encryptAge)(payload, timelockEncrypter);\n    return (0, armor_1.encodeArmor)(agePayload);\n}\nexports.timelockEncrypt = timelockEncrypt;\nasync function timelockDecrypt(ciphertext, chainClient) {\n    const timelockDecrypter = (0, timelock_decrypter_1.createTimelockDecrypter)(chainClient);\n    let cipher = ciphertext;\n    if ((0, armor_1.isProbablyArmored)(ciphertext)) {\n        cipher = (0, armor_1.decodeArmor)(cipher);\n    }\n    return await (0, age_encrypt_decrypt_1.decryptAge)(cipher, timelockDecrypter);\n}\nexports.timelockDecrypt = timelockDecrypt;\nconst userAgentOpts = {\n    userAgent: `tlock-js-${version_1.LIB_VERSION}`\n};\nfunction testnetClient() {\n    const opts = {\n        ...drand_client_1.defaultChainOptions,\n        chainVerificationParams: {\n            chainHash: defaults_1.TESTNET_CHAIN_INFO.hash,\n            publicKey: defaults_1.TESTNET_CHAIN_INFO.public_key,\n        }\n    };\n    const chain = new drand_client_1.HttpCachingChain(defaults_1.TESTNET_CHAIN_URL, opts);\n    return new drand_client_1.HttpChainClient(chain, opts, userAgentOpts);\n}\nexports.testnetClient = testnetClient;\nfunction mainnetClient() {\n    const opts = {\n        ...drand_client_1.defaultChainOptions,\n        chainVerificationParams: {\n            chainHash: \"52db9ba70e0cc0f6eaf7803dd07447a1f5477735fd3f661792ba94600c84e971\",\n            publicKey: \"83cf0f2896adee7eb8b5f01fcad3912212c437e0073e911fb90022d3e760183c8c4b450b6a0a6c3ac6a5776a2d1064510d1fec758c921cc22b0e17e63aaf4bcb5ed66304de9cf809bd274ca73bab4af5a6e9c76a4bc09e76eae8991ef5ece45a\"\n        }\n    };\n    const chain = new drand_client_1.HttpCachingChain(defaults_1.MAINNET_CHAIN_URL, opts);\n    return new drand_client_1.HttpChainClient(chain, opts, userAgentOpts);\n}\nexports.mainnetClient = mainnetClient;\nfunction nonRFCMainnetClient() {\n    const opts = {\n        ...drand_client_1.defaultChainOptions,\n        chainVerificationParams: {\n            chainHash: \"dbd506d6ef76e5f386f41c651dcb808c5bcbd75471cc4eafa3f4df7ad4e4c493\",\n            publicKey: \"a0b862a7527fee3a731bcb59280ab6abd62d5c0b6ea03dc4ddf6612fdfc9d01f01c31542541771903475eb1ec6615f8d0df0b8b6dce385811d6dcf8cbefb8759e5e616a3dfd054c928940766d9a5b9db91e3b697e5d70a975181e007f87fca5e\"\n        }\n    };\n    const chain = new drand_client_1.HttpCachingChain(defaults_1.MAINNET_CHAIN_URL_NON_RFC, opts);\n    return new drand_client_1.HttpChainClient(chain, opts, userAgentOpts);\n}\nexports.nonRFCMainnetClient = nonRFCMainnetClient;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYyxHQUFHLGVBQWUsR0FBRyxpQkFBaUIsR0FBRyx1QkFBdUIsR0FBRyx3QkFBd0IsR0FBRyx3QkFBd0IsR0FBRyx1QkFBdUIsR0FBRywyQkFBMkIsR0FBRyxxQkFBcUIsR0FBRyxxQkFBcUIsR0FBRyx1QkFBdUIsR0FBRyx1QkFBdUI7QUFDaFMsdUJBQXVCLG1CQUFPLENBQUMsc0ZBQWM7QUFDN0MsbURBQWtELEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQ3BJLG9EQUFtRCxFQUFFLHFDQUFxQywyQ0FBMkMsRUFBQztBQUN0SSw2Q0FBNEMsRUFBRSxxQ0FBcUMsb0NBQW9DLEVBQUM7QUFDeEgsMkNBQTBDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDO0FBQ3BILGlCQUFpQixtQkFBTyxDQUFDLHNCQUFRO0FBQ2pDLDBDQUF5QyxFQUFFLHFDQUFxQywyQkFBMkIsRUFBQztBQUM1Ryw2QkFBNkIsbUJBQU8sQ0FBQyw2RkFBNEI7QUFDakUsOEJBQThCLG1CQUFPLENBQUMsMkZBQTJCO0FBQ2pFLGdCQUFnQixtQkFBTyxDQUFDLCtEQUFhO0FBQ3JDLDZCQUE2QixtQkFBTyxDQUFDLDZGQUE0QjtBQUNqRSxtQkFBbUIsbUJBQU8sQ0FBQyx5RUFBa0I7QUFDN0Msb0RBQW1ELEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQ2xJLG1EQUFrRCxFQUFFLHFDQUFxQyxzQ0FBc0MsRUFBQztBQUNoSSxrQkFBa0IsbUJBQU8sQ0FBQywyREFBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSwyQkFBMkIsc0JBQXNCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXdpLWFwcC8uL25vZGVfbW9kdWxlcy90bG9jay1qcy9pbmRleC5qcz80YWJkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CdWZmZXIgPSBleHBvcnRzLnJvdW5kQXQgPSBleHBvcnRzLnJvdW5kVGltZSA9IGV4cG9ydHMuZGVmYXVsdENoYWluVXJsID0gZXhwb3J0cy5kZWZhdWx0Q2hhaW5JbmZvID0gZXhwb3J0cy5IdHRwQ2FjaGluZ0NoYWluID0gZXhwb3J0cy5IdHRwQ2hhaW5DbGllbnQgPSBleHBvcnRzLm5vblJGQ01haW5uZXRDbGllbnQgPSBleHBvcnRzLm1haW5uZXRDbGllbnQgPSBleHBvcnRzLnRlc3RuZXRDbGllbnQgPSBleHBvcnRzLnRpbWVsb2NrRGVjcnlwdCA9IGV4cG9ydHMudGltZWxvY2tFbmNyeXB0ID0gdm9pZCAwO1xuY29uc3QgZHJhbmRfY2xpZW50XzEgPSByZXF1aXJlKFwiZHJhbmQtY2xpZW50XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSHR0cENoYWluQ2xpZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBkcmFuZF9jbGllbnRfMS5IdHRwQ2hhaW5DbGllbnQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJIdHRwQ2FjaGluZ0NoYWluXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBkcmFuZF9jbGllbnRfMS5IdHRwQ2FjaGluZ0NoYWluOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicm91bmRUaW1lXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBkcmFuZF9jbGllbnRfMS5yb3VuZFRpbWU7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJyb3VuZEF0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBkcmFuZF9jbGllbnRfMS5yb3VuZEF0OyB9IH0pO1xuY29uc3QgYnVmZmVyXzEgPSByZXF1aXJlKFwiYnVmZmVyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQnVmZmVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBidWZmZXJfMS5CdWZmZXI7IH0gfSk7XG5jb25zdCB0aW1lbG9ja19lbmNyeXB0ZXJfMSA9IHJlcXVpcmUoXCIuL2RyYW5kL3RpbWVsb2NrLWVuY3J5cHRlclwiKTtcbmNvbnN0IGFnZV9lbmNyeXB0X2RlY3J5cHRfMSA9IHJlcXVpcmUoXCIuL2FnZS9hZ2UtZW5jcnlwdC1kZWNyeXB0XCIpO1xuY29uc3QgYXJtb3JfMSA9IHJlcXVpcmUoXCIuL2FnZS9hcm1vclwiKTtcbmNvbnN0IHRpbWVsb2NrX2RlY3J5cHRlcl8xID0gcmVxdWlyZShcIi4vZHJhbmQvdGltZWxvY2stZGVjcnlwdGVyXCIpO1xuY29uc3QgZGVmYXVsdHNfMSA9IHJlcXVpcmUoXCIuL2RyYW5kL2RlZmF1bHRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVmYXVsdENoYWluSW5mb1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGVmYXVsdHNfMS5kZWZhdWx0Q2hhaW5JbmZvOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVmYXVsdENoYWluVXJsXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBkZWZhdWx0c18xLmRlZmF1bHRDaGFpblVybDsgfSB9KTtcbmNvbnN0IHZlcnNpb25fMSA9IHJlcXVpcmUoXCIuL3ZlcnNpb25cIik7XG5hc3luYyBmdW5jdGlvbiB0aW1lbG9ja0VuY3J5cHQocm91bmROdW1iZXIsIHBheWxvYWQsIGNoYWluQ2xpZW50KSB7XG4gICAgY29uc3QgdGltZWxvY2tFbmNyeXB0ZXIgPSAoMCwgdGltZWxvY2tfZW5jcnlwdGVyXzEuY3JlYXRlVGltZWxvY2tFbmNyeXB0ZXIpKGNoYWluQ2xpZW50LCByb3VuZE51bWJlcik7XG4gICAgY29uc3QgYWdlUGF5bG9hZCA9IGF3YWl0ICgwLCBhZ2VfZW5jcnlwdF9kZWNyeXB0XzEuZW5jcnlwdEFnZSkocGF5bG9hZCwgdGltZWxvY2tFbmNyeXB0ZXIpO1xuICAgIHJldHVybiAoMCwgYXJtb3JfMS5lbmNvZGVBcm1vcikoYWdlUGF5bG9hZCk7XG59XG5leHBvcnRzLnRpbWVsb2NrRW5jcnlwdCA9IHRpbWVsb2NrRW5jcnlwdDtcbmFzeW5jIGZ1bmN0aW9uIHRpbWVsb2NrRGVjcnlwdChjaXBoZXJ0ZXh0LCBjaGFpbkNsaWVudCkge1xuICAgIGNvbnN0IHRpbWVsb2NrRGVjcnlwdGVyID0gKDAsIHRpbWVsb2NrX2RlY3J5cHRlcl8xLmNyZWF0ZVRpbWVsb2NrRGVjcnlwdGVyKShjaGFpbkNsaWVudCk7XG4gICAgbGV0IGNpcGhlciA9IGNpcGhlcnRleHQ7XG4gICAgaWYgKCgwLCBhcm1vcl8xLmlzUHJvYmFibHlBcm1vcmVkKShjaXBoZXJ0ZXh0KSkge1xuICAgICAgICBjaXBoZXIgPSAoMCwgYXJtb3JfMS5kZWNvZGVBcm1vcikoY2lwaGVyKTtcbiAgICB9XG4gICAgcmV0dXJuIGF3YWl0ICgwLCBhZ2VfZW5jcnlwdF9kZWNyeXB0XzEuZGVjcnlwdEFnZSkoY2lwaGVyLCB0aW1lbG9ja0RlY3J5cHRlcik7XG59XG5leHBvcnRzLnRpbWVsb2NrRGVjcnlwdCA9IHRpbWVsb2NrRGVjcnlwdDtcbmNvbnN0IHVzZXJBZ2VudE9wdHMgPSB7XG4gICAgdXNlckFnZW50OiBgdGxvY2stanMtJHt2ZXJzaW9uXzEuTElCX1ZFUlNJT059YFxufTtcbmZ1bmN0aW9uIHRlc3RuZXRDbGllbnQoKSB7XG4gICAgY29uc3Qgb3B0cyA9IHtcbiAgICAgICAgLi4uZHJhbmRfY2xpZW50XzEuZGVmYXVsdENoYWluT3B0aW9ucyxcbiAgICAgICAgY2hhaW5WZXJpZmljYXRpb25QYXJhbXM6IHtcbiAgICAgICAgICAgIGNoYWluSGFzaDogZGVmYXVsdHNfMS5URVNUTkVUX0NIQUlOX0lORk8uaGFzaCxcbiAgICAgICAgICAgIHB1YmxpY0tleTogZGVmYXVsdHNfMS5URVNUTkVUX0NIQUlOX0lORk8ucHVibGljX2tleSxcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgY2hhaW4gPSBuZXcgZHJhbmRfY2xpZW50XzEuSHR0cENhY2hpbmdDaGFpbihkZWZhdWx0c18xLlRFU1RORVRfQ0hBSU5fVVJMLCBvcHRzKTtcbiAgICByZXR1cm4gbmV3IGRyYW5kX2NsaWVudF8xLkh0dHBDaGFpbkNsaWVudChjaGFpbiwgb3B0cywgdXNlckFnZW50T3B0cyk7XG59XG5leHBvcnRzLnRlc3RuZXRDbGllbnQgPSB0ZXN0bmV0Q2xpZW50O1xuZnVuY3Rpb24gbWFpbm5ldENsaWVudCgpIHtcbiAgICBjb25zdCBvcHRzID0ge1xuICAgICAgICAuLi5kcmFuZF9jbGllbnRfMS5kZWZhdWx0Q2hhaW5PcHRpb25zLFxuICAgICAgICBjaGFpblZlcmlmaWNhdGlvblBhcmFtczoge1xuICAgICAgICAgICAgY2hhaW5IYXNoOiBcIjUyZGI5YmE3MGUwY2MwZjZlYWY3ODAzZGQwNzQ0N2ExZjU0Nzc3MzVmZDNmNjYxNzkyYmE5NDYwMGM4NGU5NzFcIixcbiAgICAgICAgICAgIHB1YmxpY0tleTogXCI4M2NmMGYyODk2YWRlZTdlYjhiNWYwMWZjYWQzOTEyMjEyYzQzN2UwMDczZTkxMWZiOTAwMjJkM2U3NjAxODNjOGM0YjQ1MGI2YTBhNmMzYWM2YTU3NzZhMmQxMDY0NTEwZDFmZWM3NThjOTIxY2MyMmIwZTE3ZTYzYWFmNGJjYjVlZDY2MzA0ZGU5Y2Y4MDliZDI3NGNhNzNiYWI0YWY1YTZlOWM3NmE0YmMwOWU3NmVhZTg5OTFlZjVlY2U0NWFcIlxuICAgICAgICB9XG4gICAgfTtcbiAgICBjb25zdCBjaGFpbiA9IG5ldyBkcmFuZF9jbGllbnRfMS5IdHRwQ2FjaGluZ0NoYWluKGRlZmF1bHRzXzEuTUFJTk5FVF9DSEFJTl9VUkwsIG9wdHMpO1xuICAgIHJldHVybiBuZXcgZHJhbmRfY2xpZW50XzEuSHR0cENoYWluQ2xpZW50KGNoYWluLCBvcHRzLCB1c2VyQWdlbnRPcHRzKTtcbn1cbmV4cG9ydHMubWFpbm5ldENsaWVudCA9IG1haW5uZXRDbGllbnQ7XG5mdW5jdGlvbiBub25SRkNNYWlubmV0Q2xpZW50KCkge1xuICAgIGNvbnN0IG9wdHMgPSB7XG4gICAgICAgIC4uLmRyYW5kX2NsaWVudF8xLmRlZmF1bHRDaGFpbk9wdGlvbnMsXG4gICAgICAgIGNoYWluVmVyaWZpY2F0aW9uUGFyYW1zOiB7XG4gICAgICAgICAgICBjaGFpbkhhc2g6IFwiZGJkNTA2ZDZlZjc2ZTVmMzg2ZjQxYzY1MWRjYjgwOGM1YmNiZDc1NDcxY2M0ZWFmYTNmNGRmN2FkNGU0YzQ5M1wiLFxuICAgICAgICAgICAgcHVibGljS2V5OiBcImEwYjg2MmE3NTI3ZmVlM2E3MzFiY2I1OTI4MGFiNmFiZDYyZDVjMGI2ZWEwM2RjNGRkZjY2MTJmZGZjOWQwMWYwMWMzMTU0MjU0MTc3MTkwMzQ3NWViMWVjNjYxNWY4ZDBkZjBiOGI2ZGNlMzg1ODExZDZkY2Y4Y2JlZmI4NzU5ZTVlNjE2YTNkZmQwNTRjOTI4OTQwNzY2ZDlhNWI5ZGI5MWUzYjY5N2U1ZDcwYTk3NTE4MWUwMDdmODdmY2E1ZVwiXG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IGNoYWluID0gbmV3IGRyYW5kX2NsaWVudF8xLkh0dHBDYWNoaW5nQ2hhaW4oZGVmYXVsdHNfMS5NQUlOTkVUX0NIQUlOX1VSTF9OT05fUkZDLCBvcHRzKTtcbiAgICByZXR1cm4gbmV3IGRyYW5kX2NsaWVudF8xLkh0dHBDaGFpbkNsaWVudChjaGFpbiwgb3B0cywgdXNlckFnZW50T3B0cyk7XG59XG5leHBvcnRzLm5vblJGQ01haW5uZXRDbGllbnQgPSBub25SRkNNYWlubmV0Q2xpZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/node_modules/drand-client/beacon-verification.js":
/*!********************************************************************************!*\
  !*** ./node_modules/tlock-js/node_modules/drand-client/beacon-verification.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.roundBuffer = exports.verifyBeacon = exports.verifySigOnG1 = void 0;\nconst bls12_381_1 = __webpack_require__(/*! @noble/curves/bls12-381 */ \"(ssr)/./node_modules/@noble/curves/bls12-381.js\");\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nconst utils_1 = __webpack_require__(/*! @noble/curves/abstract/utils */ \"(ssr)/./node_modules/@noble/curves/abstract/utils.js\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst index_1 = __webpack_require__(/*! ./index */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/index.js\");\nasync function verifyBeacon(chainInfo, beacon, expectedRound) {\n    const publicKey = chainInfo.public_key;\n    if (beacon.round !== expectedRound) {\n        console.error('round was not the expected round');\n        return false;\n    }\n    if (!await randomnessIsValid(beacon)) {\n        console.error('randomness did not match the signature');\n        return false;\n    }\n    if ((0, index_1.isChainedBeacon)(beacon, chainInfo)) {\n        return bls12_381_1.bls12_381.verify(beacon.signature, await chainedBeaconMessage(beacon), publicKey);\n    }\n    if ((0, index_1.isUnchainedBeacon)(beacon, chainInfo)) {\n        return bls12_381_1.bls12_381.verify(beacon.signature, await unchainedBeaconMessage(beacon), publicKey);\n    }\n    if ((0, index_1.isG1G2SwappedBeacon)(beacon, chainInfo)) {\n        return verifySigOnG1(beacon.signature, await unchainedBeaconMessage(beacon), publicKey);\n    }\n    if ((0, index_1.isG1Rfc9380)(beacon, chainInfo)) {\n        return verifySigOnG1(beacon.signature, await unchainedBeaconMessage(beacon), publicKey, 'BLS_SIG_BLS12381G1_XMD:SHA-256_SSWU_RO_NUL_');\n    }\n    console.error(`Beacon type ${chainInfo.schemeID} was not supported or the beacon was not of the purported type`);\n    return false;\n}\nexports.verifyBeacon = verifyBeacon;\nfunction normP1(point) {\n    return point instanceof bls12_381_1.bls12_381.G1.ProjectivePoint ? point : bls12_381_1.bls12_381.G1.ProjectivePoint.fromHex(point);\n}\nfunction normP2(point) {\n    return point instanceof bls12_381_1.bls12_381.G2.ProjectivePoint ? point : bls12_381_1.bls12_381.G2.ProjectivePoint.fromHex(point);\n}\nfunction normP1Hash(point, domainSeparationTag) {\n    return point instanceof bls12_381_1.bls12_381.G1.ProjectivePoint ? point : bls12_381_1.bls12_381.G1.hashToCurve((0, utils_1.ensureBytes)('point', point), { DST: domainSeparationTag });\n}\nasync function verifySigOnG1(signature, message, publicKey, \n// default DST is the invalid one used for 'bls-unchained-on-g1' for backwards compat\ndomainSeparationTag = 'BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_NUL_') {\n    const P = normP2(publicKey);\n    const Hm = normP1Hash(message, domainSeparationTag);\n    const G = bls12_381_1.bls12_381.G2.ProjectivePoint.BASE;\n    const S = normP1(signature);\n    const ePHm = bls12_381_1.bls12_381.pairing(Hm, P.negate(), true);\n    const eGS = bls12_381_1.bls12_381.pairing(S, G, true);\n    const exp = bls12_381_1.bls12_381.fields.Fp12.mul(eGS, ePHm);\n    return bls12_381_1.bls12_381.fields.Fp12.eql(exp, bls12_381_1.bls12_381.fields.Fp12.ONE);\n}\nexports.verifySigOnG1 = verifySigOnG1;\nasync function chainedBeaconMessage(beacon) {\n    const message = buffer_1.Buffer.concat([\n        signatureBuffer(beacon.previous_signature),\n        roundBuffer(beacon.round)\n    ]);\n    return (0, sha256_1.sha256)(message);\n}\nasync function unchainedBeaconMessage(beacon) {\n    return (0, sha256_1.sha256)(roundBuffer(beacon.round));\n}\nfunction signatureBuffer(sig) {\n    return buffer_1.Buffer.from(sig, 'hex');\n}\nfunction roundBuffer(round) {\n    const buffer = buffer_1.Buffer.alloc(8);\n    buffer.writeBigUInt64BE(BigInt(round));\n    return buffer;\n}\nexports.roundBuffer = roundBuffer;\nasync function randomnessIsValid(beacon) {\n    const expectedRandomness = (0, sha256_1.sha256)(buffer_1.Buffer.from(beacon.signature, 'hex'));\n    return buffer_1.Buffer.from(beacon.randomness, 'hex').compare(expectedRandomness) == 0;\n}\n//# sourceMappingURL=beacon-verification.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvbm9kZV9tb2R1bGVzL2RyYW5kLWNsaWVudC9iZWFjb24tdmVyaWZpY2F0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQixHQUFHLG9CQUFvQixHQUFHLHFCQUFxQjtBQUNsRSxvQkFBb0IsbUJBQU8sQ0FBQyxnRkFBeUI7QUFDckQsaUJBQWlCLG1CQUFPLENBQUMsMEVBQXNCO0FBQy9DLGdCQUFnQixtQkFBTyxDQUFDLDBGQUE4QjtBQUN0RCxpQkFBaUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqQyxnQkFBZ0IsbUJBQU8sQ0FBQyxpRkFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxvQkFBb0I7QUFDckQ7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdLQUFnSywwQkFBMEI7QUFDMUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXdpLWFwcC8uL25vZGVfbW9kdWxlcy90bG9jay1qcy9ub2RlX21vZHVsZXMvZHJhbmQtY2xpZW50L2JlYWNvbi12ZXJpZmljYXRpb24uanM/N2YyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucm91bmRCdWZmZXIgPSBleHBvcnRzLnZlcmlmeUJlYWNvbiA9IGV4cG9ydHMudmVyaWZ5U2lnT25HMSA9IHZvaWQgMDtcbmNvbnN0IGJsczEyXzM4MV8xID0gcmVxdWlyZShcIkBub2JsZS9jdXJ2ZXMvYmxzMTItMzgxXCIpO1xuY29uc3Qgc2hhMjU2XzEgPSByZXF1aXJlKFwiQG5vYmxlL2hhc2hlcy9zaGEyNTZcIik7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBub2JsZS9jdXJ2ZXMvYWJzdHJhY3QvdXRpbHNcIik7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXJcIik7XG5jb25zdCBpbmRleF8xID0gcmVxdWlyZShcIi4vaW5kZXhcIik7XG5hc3luYyBmdW5jdGlvbiB2ZXJpZnlCZWFjb24oY2hhaW5JbmZvLCBiZWFjb24sIGV4cGVjdGVkUm91bmQpIHtcbiAgICBjb25zdCBwdWJsaWNLZXkgPSBjaGFpbkluZm8ucHVibGljX2tleTtcbiAgICBpZiAoYmVhY29uLnJvdW5kICE9PSBleHBlY3RlZFJvdW5kKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ3JvdW5kIHdhcyBub3QgdGhlIGV4cGVjdGVkIHJvdW5kJyk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKCFhd2FpdCByYW5kb21uZXNzSXNWYWxpZChiZWFjb24pKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ3JhbmRvbW5lc3MgZGlkIG5vdCBtYXRjaCB0aGUgc2lnbmF0dXJlJyk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKCgwLCBpbmRleF8xLmlzQ2hhaW5lZEJlYWNvbikoYmVhY29uLCBjaGFpbkluZm8pKSB7XG4gICAgICAgIHJldHVybiBibHMxMl8zODFfMS5ibHMxMl8zODEudmVyaWZ5KGJlYWNvbi5zaWduYXR1cmUsIGF3YWl0IGNoYWluZWRCZWFjb25NZXNzYWdlKGJlYWNvbiksIHB1YmxpY0tleSk7XG4gICAgfVxuICAgIGlmICgoMCwgaW5kZXhfMS5pc1VuY2hhaW5lZEJlYWNvbikoYmVhY29uLCBjaGFpbkluZm8pKSB7XG4gICAgICAgIHJldHVybiBibHMxMl8zODFfMS5ibHMxMl8zODEudmVyaWZ5KGJlYWNvbi5zaWduYXR1cmUsIGF3YWl0IHVuY2hhaW5lZEJlYWNvbk1lc3NhZ2UoYmVhY29uKSwgcHVibGljS2V5KTtcbiAgICB9XG4gICAgaWYgKCgwLCBpbmRleF8xLmlzRzFHMlN3YXBwZWRCZWFjb24pKGJlYWNvbiwgY2hhaW5JbmZvKSkge1xuICAgICAgICByZXR1cm4gdmVyaWZ5U2lnT25HMShiZWFjb24uc2lnbmF0dXJlLCBhd2FpdCB1bmNoYWluZWRCZWFjb25NZXNzYWdlKGJlYWNvbiksIHB1YmxpY0tleSk7XG4gICAgfVxuICAgIGlmICgoMCwgaW5kZXhfMS5pc0cxUmZjOTM4MCkoYmVhY29uLCBjaGFpbkluZm8pKSB7XG4gICAgICAgIHJldHVybiB2ZXJpZnlTaWdPbkcxKGJlYWNvbi5zaWduYXR1cmUsIGF3YWl0IHVuY2hhaW5lZEJlYWNvbk1lc3NhZ2UoYmVhY29uKSwgcHVibGljS2V5LCAnQkxTX1NJR19CTFMxMjM4MUcxX1hNRDpTSEEtMjU2X1NTV1VfUk9fTlVMXycpO1xuICAgIH1cbiAgICBjb25zb2xlLmVycm9yKGBCZWFjb24gdHlwZSAke2NoYWluSW5mby5zY2hlbWVJRH0gd2FzIG5vdCBzdXBwb3J0ZWQgb3IgdGhlIGJlYWNvbiB3YXMgbm90IG9mIHRoZSBwdXJwb3J0ZWQgdHlwZWApO1xuICAgIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydHMudmVyaWZ5QmVhY29uID0gdmVyaWZ5QmVhY29uO1xuZnVuY3Rpb24gbm9ybVAxKHBvaW50KSB7XG4gICAgcmV0dXJuIHBvaW50IGluc3RhbmNlb2YgYmxzMTJfMzgxXzEuYmxzMTJfMzgxLkcxLlByb2plY3RpdmVQb2ludCA/IHBvaW50IDogYmxzMTJfMzgxXzEuYmxzMTJfMzgxLkcxLlByb2plY3RpdmVQb2ludC5mcm9tSGV4KHBvaW50KTtcbn1cbmZ1bmN0aW9uIG5vcm1QMihwb2ludCkge1xuICAgIHJldHVybiBwb2ludCBpbnN0YW5jZW9mIGJsczEyXzM4MV8xLmJsczEyXzM4MS5HMi5Qcm9qZWN0aXZlUG9pbnQgPyBwb2ludCA6IGJsczEyXzM4MV8xLmJsczEyXzM4MS5HMi5Qcm9qZWN0aXZlUG9pbnQuZnJvbUhleChwb2ludCk7XG59XG5mdW5jdGlvbiBub3JtUDFIYXNoKHBvaW50LCBkb21haW5TZXBhcmF0aW9uVGFnKSB7XG4gICAgcmV0dXJuIHBvaW50IGluc3RhbmNlb2YgYmxzMTJfMzgxXzEuYmxzMTJfMzgxLkcxLlByb2plY3RpdmVQb2ludCA/IHBvaW50IDogYmxzMTJfMzgxXzEuYmxzMTJfMzgxLkcxLmhhc2hUb0N1cnZlKCgwLCB1dGlsc18xLmVuc3VyZUJ5dGVzKSgncG9pbnQnLCBwb2ludCksIHsgRFNUOiBkb21haW5TZXBhcmF0aW9uVGFnIH0pO1xufVxuYXN5bmMgZnVuY3Rpb24gdmVyaWZ5U2lnT25HMShzaWduYXR1cmUsIG1lc3NhZ2UsIHB1YmxpY0tleSwgXG4vLyBkZWZhdWx0IERTVCBpcyB0aGUgaW52YWxpZCBvbmUgdXNlZCBmb3IgJ2Jscy11bmNoYWluZWQtb24tZzEnIGZvciBiYWNrd2FyZHMgY29tcGF0XG5kb21haW5TZXBhcmF0aW9uVGFnID0gJ0JMU19TSUdfQkxTMTIzODFHMl9YTUQ6U0hBLTI1Nl9TU1dVX1JPX05VTF8nKSB7XG4gICAgY29uc3QgUCA9IG5vcm1QMihwdWJsaWNLZXkpO1xuICAgIGNvbnN0IEhtID0gbm9ybVAxSGFzaChtZXNzYWdlLCBkb21haW5TZXBhcmF0aW9uVGFnKTtcbiAgICBjb25zdCBHID0gYmxzMTJfMzgxXzEuYmxzMTJfMzgxLkcyLlByb2plY3RpdmVQb2ludC5CQVNFO1xuICAgIGNvbnN0IFMgPSBub3JtUDEoc2lnbmF0dXJlKTtcbiAgICBjb25zdCBlUEhtID0gYmxzMTJfMzgxXzEuYmxzMTJfMzgxLnBhaXJpbmcoSG0sIFAubmVnYXRlKCksIHRydWUpO1xuICAgIGNvbnN0IGVHUyA9IGJsczEyXzM4MV8xLmJsczEyXzM4MS5wYWlyaW5nKFMsIEcsIHRydWUpO1xuICAgIGNvbnN0IGV4cCA9IGJsczEyXzM4MV8xLmJsczEyXzM4MS5maWVsZHMuRnAxMi5tdWwoZUdTLCBlUEhtKTtcbiAgICByZXR1cm4gYmxzMTJfMzgxXzEuYmxzMTJfMzgxLmZpZWxkcy5GcDEyLmVxbChleHAsIGJsczEyXzM4MV8xLmJsczEyXzM4MS5maWVsZHMuRnAxMi5PTkUpO1xufVxuZXhwb3J0cy52ZXJpZnlTaWdPbkcxID0gdmVyaWZ5U2lnT25HMTtcbmFzeW5jIGZ1bmN0aW9uIGNoYWluZWRCZWFjb25NZXNzYWdlKGJlYWNvbikge1xuICAgIGNvbnN0IG1lc3NhZ2UgPSBidWZmZXJfMS5CdWZmZXIuY29uY2F0KFtcbiAgICAgICAgc2lnbmF0dXJlQnVmZmVyKGJlYWNvbi5wcmV2aW91c19zaWduYXR1cmUpLFxuICAgICAgICByb3VuZEJ1ZmZlcihiZWFjb24ucm91bmQpXG4gICAgXSk7XG4gICAgcmV0dXJuICgwLCBzaGEyNTZfMS5zaGEyNTYpKG1lc3NhZ2UpO1xufVxuYXN5bmMgZnVuY3Rpb24gdW5jaGFpbmVkQmVhY29uTWVzc2FnZShiZWFjb24pIHtcbiAgICByZXR1cm4gKDAsIHNoYTI1Nl8xLnNoYTI1Nikocm91bmRCdWZmZXIoYmVhY29uLnJvdW5kKSk7XG59XG5mdW5jdGlvbiBzaWduYXR1cmVCdWZmZXIoc2lnKSB7XG4gICAgcmV0dXJuIGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKHNpZywgJ2hleCcpO1xufVxuZnVuY3Rpb24gcm91bmRCdWZmZXIocm91bmQpIHtcbiAgICBjb25zdCBidWZmZXIgPSBidWZmZXJfMS5CdWZmZXIuYWxsb2MoOCk7XG4gICAgYnVmZmVyLndyaXRlQmlnVUludDY0QkUoQmlnSW50KHJvdW5kKSk7XG4gICAgcmV0dXJuIGJ1ZmZlcjtcbn1cbmV4cG9ydHMucm91bmRCdWZmZXIgPSByb3VuZEJ1ZmZlcjtcbmFzeW5jIGZ1bmN0aW9uIHJhbmRvbW5lc3NJc1ZhbGlkKGJlYWNvbikge1xuICAgIGNvbnN0IGV4cGVjdGVkUmFuZG9tbmVzcyA9ICgwLCBzaGEyNTZfMS5zaGEyNTYpKGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKGJlYWNvbi5zaWduYXR1cmUsICdoZXgnKSk7XG4gICAgcmV0dXJuIGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKGJlYWNvbi5yYW5kb21uZXNzLCAnaGV4JykuY29tcGFyZShleHBlY3RlZFJhbmRvbW5lc3MpID09IDA7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iZWFjb24tdmVyaWZpY2F0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/node_modules/drand-client/beacon-verification.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/node_modules/drand-client/fastest-node-client.js":
/*!********************************************************************************!*\
  !*** ./node_modules/tlock-js/node_modules/drand-client/fastest-node-client.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst index_1 = __webpack_require__(/*! ./index */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/index.js\");\nconst http_caching_chain_1 = __importStar(__webpack_require__(/*! ./http-caching-chain */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/http-caching-chain.js\"));\nconst speedtest_1 = __webpack_require__(/*! ./speedtest */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/speedtest.js\");\nconst http_chain_client_1 = __importDefault(__webpack_require__(/*! ./http-chain-client */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/http-chain-client.js\"));\nconst defaultSpeedTestInterval = 1000 * 60 * 5;\n// takes an array of drand nodes and periodically speed tests them to work out which is the fastest\n// it then uses the fastest client to make calls using an underlying HTTP client\n// use `.start()` to enable optimisation of the underlying base URLs\n// don't forget to `.stop()` it after you're finished\nclass FastestNodeClient {\n    baseUrls;\n    options;\n    speedTestIntervalMs;\n    speedTests = [];\n    speedTestHttpOptions = { userAgent: 'drand-web-client-speedtest' };\n    constructor(baseUrls, options = index_1.defaultChainOptions, speedTestIntervalMs = defaultSpeedTestInterval) {\n        this.baseUrls = baseUrls;\n        this.options = options;\n        this.speedTestIntervalMs = speedTestIntervalMs;\n        if (baseUrls.length === 0) {\n            throw Error('Can\\'t optimise an empty `baseUrls` array!');\n        }\n    }\n    async latest() {\n        return new http_chain_client_1.default(this.current(), this.options).latest();\n    }\n    async get(roundNumber) {\n        return new http_chain_client_1.default(this.current(), this.options).get(roundNumber);\n    }\n    chain() {\n        return this.current();\n    }\n    start() {\n        if (this.baseUrls.length === 1) {\n            console.warn('There was only a single base URL in the `FastestNodeClient` - not running speed testing');\n            return;\n        }\n        this.speedTests = this.baseUrls.map(url => {\n            const testFn = async () => {\n                await new http_caching_chain_1.HttpChain(url, this.options, this.speedTestHttpOptions).info();\n                return;\n            };\n            const test = (0, speedtest_1.createSpeedTest)(testFn, this.speedTestIntervalMs);\n            test.start();\n            return { test, url };\n        });\n    }\n    current() {\n        if (this.speedTests.length === 0) {\n            console.warn('You are not currently running speed tests to choose the fastest client. Run `.start()` to speed test');\n        }\n        const fastestEntry = this.speedTests\n            .slice()\n            .sort((entry1, entry2) => entry1.test.average() - entry2.test.average())\n            .shift();\n        if (!fastestEntry) {\n            throw Error('Somehow there were no entries to optimise! This should be impossible by now');\n        }\n        return new http_caching_chain_1.default(fastestEntry.url, this.options);\n    }\n    stop() {\n        this.speedTests.forEach(entry => entry.test.stop());\n        this.speedTests = [];\n    }\n}\nexports[\"default\"] = FastestNodeClient;\n//# sourceMappingURL=fastest-node-client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvbm9kZV9tb2R1bGVzL2RyYW5kLWNsaWVudC9mYXN0ZXN0LW5vZGUtY2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixtQkFBTyxDQUFDLGlGQUFTO0FBQ2pDLDBDQUEwQyxtQkFBTyxDQUFDLDJHQUFzQjtBQUN4RSxvQkFBb0IsbUJBQU8sQ0FBQyx5RkFBYTtBQUN6Qyw0Q0FBNEMsbUJBQU8sQ0FBQyx5R0FBcUI7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGl3aS1hcHAvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvbm9kZV9tb2R1bGVzL2RyYW5kLWNsaWVudC9mYXN0ZXN0LW5vZGUtY2xpZW50LmpzP2E5NTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGluZGV4XzEgPSByZXF1aXJlKFwiLi9pbmRleFwiKTtcbmNvbnN0IGh0dHBfY2FjaGluZ19jaGFpbl8xID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL2h0dHAtY2FjaGluZy1jaGFpblwiKSk7XG5jb25zdCBzcGVlZHRlc3RfMSA9IHJlcXVpcmUoXCIuL3NwZWVkdGVzdFwiKTtcbmNvbnN0IGh0dHBfY2hhaW5fY2xpZW50XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vaHR0cC1jaGFpbi1jbGllbnRcIikpO1xuY29uc3QgZGVmYXVsdFNwZWVkVGVzdEludGVydmFsID0gMTAwMCAqIDYwICogNTtcbi8vIHRha2VzIGFuIGFycmF5IG9mIGRyYW5kIG5vZGVzIGFuZCBwZXJpb2RpY2FsbHkgc3BlZWQgdGVzdHMgdGhlbSB0byB3b3JrIG91dCB3aGljaCBpcyB0aGUgZmFzdGVzdFxuLy8gaXQgdGhlbiB1c2VzIHRoZSBmYXN0ZXN0IGNsaWVudCB0byBtYWtlIGNhbGxzIHVzaW5nIGFuIHVuZGVybHlpbmcgSFRUUCBjbGllbnRcbi8vIHVzZSBgLnN0YXJ0KClgIHRvIGVuYWJsZSBvcHRpbWlzYXRpb24gb2YgdGhlIHVuZGVybHlpbmcgYmFzZSBVUkxzXG4vLyBkb24ndCBmb3JnZXQgdG8gYC5zdG9wKClgIGl0IGFmdGVyIHlvdSdyZSBmaW5pc2hlZFxuY2xhc3MgRmFzdGVzdE5vZGVDbGllbnQge1xuICAgIGJhc2VVcmxzO1xuICAgIG9wdGlvbnM7XG4gICAgc3BlZWRUZXN0SW50ZXJ2YWxNcztcbiAgICBzcGVlZFRlc3RzID0gW107XG4gICAgc3BlZWRUZXN0SHR0cE9wdGlvbnMgPSB7IHVzZXJBZ2VudDogJ2RyYW5kLXdlYi1jbGllbnQtc3BlZWR0ZXN0JyB9O1xuICAgIGNvbnN0cnVjdG9yKGJhc2VVcmxzLCBvcHRpb25zID0gaW5kZXhfMS5kZWZhdWx0Q2hhaW5PcHRpb25zLCBzcGVlZFRlc3RJbnRlcnZhbE1zID0gZGVmYXVsdFNwZWVkVGVzdEludGVydmFsKSB7XG4gICAgICAgIHRoaXMuYmFzZVVybHMgPSBiYXNlVXJscztcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICAgICAgdGhpcy5zcGVlZFRlc3RJbnRlcnZhbE1zID0gc3BlZWRUZXN0SW50ZXJ2YWxNcztcbiAgICAgICAgaWYgKGJhc2VVcmxzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ0NhblxcJ3Qgb3B0aW1pc2UgYW4gZW1wdHkgYGJhc2VVcmxzYCBhcnJheSEnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhc3luYyBsYXRlc3QoKSB7XG4gICAgICAgIHJldHVybiBuZXcgaHR0cF9jaGFpbl9jbGllbnRfMS5kZWZhdWx0KHRoaXMuY3VycmVudCgpLCB0aGlzLm9wdGlvbnMpLmxhdGVzdCgpO1xuICAgIH1cbiAgICBhc3luYyBnZXQocm91bmROdW1iZXIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBodHRwX2NoYWluX2NsaWVudF8xLmRlZmF1bHQodGhpcy5jdXJyZW50KCksIHRoaXMub3B0aW9ucykuZ2V0KHJvdW5kTnVtYmVyKTtcbiAgICB9XG4gICAgY2hhaW4oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmN1cnJlbnQoKTtcbiAgICB9XG4gICAgc3RhcnQoKSB7XG4gICAgICAgIGlmICh0aGlzLmJhc2VVcmxzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdUaGVyZSB3YXMgb25seSBhIHNpbmdsZSBiYXNlIFVSTCBpbiB0aGUgYEZhc3Rlc3ROb2RlQ2xpZW50YCAtIG5vdCBydW5uaW5nIHNwZWVkIHRlc3RpbmcnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNwZWVkVGVzdHMgPSB0aGlzLmJhc2VVcmxzLm1hcCh1cmwgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGVzdEZuID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGF3YWl0IG5ldyBodHRwX2NhY2hpbmdfY2hhaW5fMS5IdHRwQ2hhaW4odXJsLCB0aGlzLm9wdGlvbnMsIHRoaXMuc3BlZWRUZXN0SHR0cE9wdGlvbnMpLmluZm8oKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgY29uc3QgdGVzdCA9ICgwLCBzcGVlZHRlc3RfMS5jcmVhdGVTcGVlZFRlc3QpKHRlc3RGbiwgdGhpcy5zcGVlZFRlc3RJbnRlcnZhbE1zKTtcbiAgICAgICAgICAgIHRlc3Quc3RhcnQoKTtcbiAgICAgICAgICAgIHJldHVybiB7IHRlc3QsIHVybCB9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgY3VycmVudCgpIHtcbiAgICAgICAgaWYgKHRoaXMuc3BlZWRUZXN0cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignWW91IGFyZSBub3QgY3VycmVudGx5IHJ1bm5pbmcgc3BlZWQgdGVzdHMgdG8gY2hvb3NlIHRoZSBmYXN0ZXN0IGNsaWVudC4gUnVuIGAuc3RhcnQoKWAgdG8gc3BlZWQgdGVzdCcpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGZhc3Rlc3RFbnRyeSA9IHRoaXMuc3BlZWRUZXN0c1xuICAgICAgICAgICAgLnNsaWNlKClcbiAgICAgICAgICAgIC5zb3J0KChlbnRyeTEsIGVudHJ5MikgPT4gZW50cnkxLnRlc3QuYXZlcmFnZSgpIC0gZW50cnkyLnRlc3QuYXZlcmFnZSgpKVxuICAgICAgICAgICAgLnNoaWZ0KCk7XG4gICAgICAgIGlmICghZmFzdGVzdEVudHJ5KSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcignU29tZWhvdyB0aGVyZSB3ZXJlIG5vIGVudHJpZXMgdG8gb3B0aW1pc2UhIFRoaXMgc2hvdWxkIGJlIGltcG9zc2libGUgYnkgbm93Jyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBodHRwX2NhY2hpbmdfY2hhaW5fMS5kZWZhdWx0KGZhc3Rlc3RFbnRyeS51cmwsIHRoaXMub3B0aW9ucyk7XG4gICAgfVxuICAgIHN0b3AoKSB7XG4gICAgICAgIHRoaXMuc3BlZWRUZXN0cy5mb3JFYWNoKGVudHJ5ID0+IGVudHJ5LnRlc3Quc3RvcCgpKTtcbiAgICAgICAgdGhpcy5zcGVlZFRlc3RzID0gW107XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gRmFzdGVzdE5vZGVDbGllbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mYXN0ZXN0LW5vZGUtY2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/node_modules/drand-client/fastest-node-client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/node_modules/drand-client/http-caching-chain.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/tlock-js/node_modules/drand-client/http-caching-chain.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HttpChain = void 0;\nconst index_1 = __webpack_require__(/*! ./index */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/index.js\");\nconst util_1 = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/util.js\");\nclass HttpChain {\n    baseUrl;\n    options;\n    httpOptions;\n    constructor(baseUrl, options = index_1.defaultChainOptions, httpOptions = {}) {\n        this.baseUrl = baseUrl;\n        this.options = options;\n        this.httpOptions = httpOptions;\n    }\n    async info() {\n        const chainInfo = await (0, util_1.jsonOrError)(`${this.baseUrl}/info`, this.httpOptions);\n        if (!!this.options.chainVerificationParams && !isValidInfo(chainInfo, this.options.chainVerificationParams)) {\n            throw Error(`The chain info retrieved from ${this.baseUrl} did not match the verification params!`);\n        }\n        return chainInfo;\n    }\n}\nexports.HttpChain = HttpChain;\nfunction isValidInfo(chainInfo, validParams) {\n    return chainInfo.hash === validParams.chainHash && chainInfo.public_key === validParams.publicKey;\n}\nclass HttpCachingChain {\n    baseUrl;\n    options;\n    chain;\n    cachedInfo;\n    constructor(baseUrl, options = index_1.defaultChainOptions) {\n        this.baseUrl = baseUrl;\n        this.options = options;\n        this.chain = new HttpChain(baseUrl, options);\n    }\n    async info() {\n        if (!this.cachedInfo) {\n            this.cachedInfo = await this.chain.info();\n        }\n        return this.cachedInfo;\n    }\n}\nexports[\"default\"] = HttpCachingChain;\n//# sourceMappingURL=http-caching-chain.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvbm9kZV9tb2R1bGVzL2RyYW5kLWNsaWVudC9odHRwLWNhY2hpbmctY2hhaW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCO0FBQ2pCLGdCQUFnQixtQkFBTyxDQUFDLGlGQUFTO0FBQ2pDLGVBQWUsbUJBQU8sQ0FBQywrRUFBUTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdGQUFnRjtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELGFBQWE7QUFDeEU7QUFDQSx5REFBeUQsY0FBYztBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpd2ktYXBwLy4vbm9kZV9tb2R1bGVzL3Rsb2NrLWpzL25vZGVfbW9kdWxlcy9kcmFuZC1jbGllbnQvaHR0cC1jYWNoaW5nLWNoYWluLmpzPzYwNTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkh0dHBDaGFpbiA9IHZvaWQgMDtcbmNvbnN0IGluZGV4XzEgPSByZXF1aXJlKFwiLi9pbmRleFwiKTtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuL3V0aWxcIik7XG5jbGFzcyBIdHRwQ2hhaW4ge1xuICAgIGJhc2VVcmw7XG4gICAgb3B0aW9ucztcbiAgICBodHRwT3B0aW9ucztcbiAgICBjb25zdHJ1Y3RvcihiYXNlVXJsLCBvcHRpb25zID0gaW5kZXhfMS5kZWZhdWx0Q2hhaW5PcHRpb25zLCBodHRwT3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHRoaXMuYmFzZVVybCA9IGJhc2VVcmw7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgIHRoaXMuaHR0cE9wdGlvbnMgPSBodHRwT3B0aW9ucztcbiAgICB9XG4gICAgYXN5bmMgaW5mbygpIHtcbiAgICAgICAgY29uc3QgY2hhaW5JbmZvID0gYXdhaXQgKDAsIHV0aWxfMS5qc29uT3JFcnJvcikoYCR7dGhpcy5iYXNlVXJsfS9pbmZvYCwgdGhpcy5odHRwT3B0aW9ucyk7XG4gICAgICAgIGlmICghIXRoaXMub3B0aW9ucy5jaGFpblZlcmlmaWNhdGlvblBhcmFtcyAmJiAhaXNWYWxpZEluZm8oY2hhaW5JbmZvLCB0aGlzLm9wdGlvbnMuY2hhaW5WZXJpZmljYXRpb25QYXJhbXMpKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgVGhlIGNoYWluIGluZm8gcmV0cmlldmVkIGZyb20gJHt0aGlzLmJhc2VVcmx9IGRpZCBub3QgbWF0Y2ggdGhlIHZlcmlmaWNhdGlvbiBwYXJhbXMhYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNoYWluSW5mbztcbiAgICB9XG59XG5leHBvcnRzLkh0dHBDaGFpbiA9IEh0dHBDaGFpbjtcbmZ1bmN0aW9uIGlzVmFsaWRJbmZvKGNoYWluSW5mbywgdmFsaWRQYXJhbXMpIHtcbiAgICByZXR1cm4gY2hhaW5JbmZvLmhhc2ggPT09IHZhbGlkUGFyYW1zLmNoYWluSGFzaCAmJiBjaGFpbkluZm8ucHVibGljX2tleSA9PT0gdmFsaWRQYXJhbXMucHVibGljS2V5O1xufVxuY2xhc3MgSHR0cENhY2hpbmdDaGFpbiB7XG4gICAgYmFzZVVybDtcbiAgICBvcHRpb25zO1xuICAgIGNoYWluO1xuICAgIGNhY2hlZEluZm87XG4gICAgY29uc3RydWN0b3IoYmFzZVVybCwgb3B0aW9ucyA9IGluZGV4XzEuZGVmYXVsdENoYWluT3B0aW9ucykge1xuICAgICAgICB0aGlzLmJhc2VVcmwgPSBiYXNlVXJsO1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgICB0aGlzLmNoYWluID0gbmV3IEh0dHBDaGFpbihiYXNlVXJsLCBvcHRpb25zKTtcbiAgICB9XG4gICAgYXN5bmMgaW5mbygpIHtcbiAgICAgICAgaWYgKCF0aGlzLmNhY2hlZEluZm8pIHtcbiAgICAgICAgICAgIHRoaXMuY2FjaGVkSW5mbyA9IGF3YWl0IHRoaXMuY2hhaW4uaW5mbygpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmNhY2hlZEluZm87XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gSHR0cENhY2hpbmdDaGFpbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWh0dHAtY2FjaGluZy1jaGFpbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/node_modules/drand-client/http-caching-chain.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/node_modules/drand-client/http-chain-client.js":
/*!******************************************************************************!*\
  !*** ./node_modules/tlock-js/node_modules/drand-client/http-chain-client.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst index_1 = __webpack_require__(/*! ./index */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/index.js\");\nconst util_1 = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/util.js\");\nclass HttpChainClient {\n    someChain;\n    options;\n    httpOptions;\n    constructor(someChain, options = index_1.defaultChainOptions, httpOptions = util_1.defaultHttpOptions) {\n        this.someChain = someChain;\n        this.options = options;\n        this.httpOptions = httpOptions;\n    }\n    async get(roundNumber) {\n        const url = withCachingParams(`${this.someChain.baseUrl}/public/${roundNumber}`, this.options);\n        return await (0, util_1.jsonOrError)(url, this.httpOptions);\n    }\n    async latest() {\n        const url = withCachingParams(`${this.someChain.baseUrl}/public/latest`, this.options);\n        return await (0, util_1.jsonOrError)(url, this.httpOptions);\n    }\n    chain() {\n        return this.someChain;\n    }\n}\nfunction withCachingParams(url, config) {\n    if (config.noCache) {\n        return `${url}?${Date.now()}`;\n    }\n    return url;\n}\nexports[\"default\"] = HttpChainClient;\n//# sourceMappingURL=http-chain-client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvbm9kZV9tb2R1bGVzL2RyYW5kLWNsaWVudC9odHRwLWNoYWluLWNsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsbUJBQU8sQ0FBQyxpRkFBUztBQUNqQyxlQUFlLG1CQUFPLENBQUMsK0VBQVE7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsdUJBQXVCLFVBQVUsWUFBWTtBQUN0RjtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsdUJBQXVCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsSUFBSSxHQUFHLFdBQVc7QUFDcEM7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpd2ktYXBwLy4vbm9kZV9tb2R1bGVzL3Rsb2NrLWpzL25vZGVfbW9kdWxlcy9kcmFuZC1jbGllbnQvaHR0cC1jaGFpbi1jbGllbnQuanM/NmEwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGluZGV4XzEgPSByZXF1aXJlKFwiLi9pbmRleFwiKTtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuL3V0aWxcIik7XG5jbGFzcyBIdHRwQ2hhaW5DbGllbnQge1xuICAgIHNvbWVDaGFpbjtcbiAgICBvcHRpb25zO1xuICAgIGh0dHBPcHRpb25zO1xuICAgIGNvbnN0cnVjdG9yKHNvbWVDaGFpbiwgb3B0aW9ucyA9IGluZGV4XzEuZGVmYXVsdENoYWluT3B0aW9ucywgaHR0cE9wdGlvbnMgPSB1dGlsXzEuZGVmYXVsdEh0dHBPcHRpb25zKSB7XG4gICAgICAgIHRoaXMuc29tZUNoYWluID0gc29tZUNoYWluO1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgICB0aGlzLmh0dHBPcHRpb25zID0gaHR0cE9wdGlvbnM7XG4gICAgfVxuICAgIGFzeW5jIGdldChyb3VuZE51bWJlcikge1xuICAgICAgICBjb25zdCB1cmwgPSB3aXRoQ2FjaGluZ1BhcmFtcyhgJHt0aGlzLnNvbWVDaGFpbi5iYXNlVXJsfS9wdWJsaWMvJHtyb3VuZE51bWJlcn1gLCB0aGlzLm9wdGlvbnMpO1xuICAgICAgICByZXR1cm4gYXdhaXQgKDAsIHV0aWxfMS5qc29uT3JFcnJvcikodXJsLCB0aGlzLmh0dHBPcHRpb25zKTtcbiAgICB9XG4gICAgYXN5bmMgbGF0ZXN0KCkge1xuICAgICAgICBjb25zdCB1cmwgPSB3aXRoQ2FjaGluZ1BhcmFtcyhgJHt0aGlzLnNvbWVDaGFpbi5iYXNlVXJsfS9wdWJsaWMvbGF0ZXN0YCwgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIGF3YWl0ICgwLCB1dGlsXzEuanNvbk9yRXJyb3IpKHVybCwgdGhpcy5odHRwT3B0aW9ucyk7XG4gICAgfVxuICAgIGNoYWluKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zb21lQ2hhaW47XG4gICAgfVxufVxuZnVuY3Rpb24gd2l0aENhY2hpbmdQYXJhbXModXJsLCBjb25maWcpIHtcbiAgICBpZiAoY29uZmlnLm5vQ2FjaGUpIHtcbiAgICAgICAgcmV0dXJuIGAke3VybH0/JHtEYXRlLm5vdygpfWA7XG4gICAgfVxuICAgIHJldHVybiB1cmw7XG59XG5leHBvcnRzLmRlZmF1bHQgPSBIdHRwQ2hhaW5DbGllbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1odHRwLWNoYWluLWNsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/node_modules/drand-client/http-chain-client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/node_modules/drand-client/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/tlock-js/node_modules/drand-client/index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.roundTime = exports.roundAt = exports.FastestNodeClient = exports.MultiBeaconNode = exports.HttpCachingChain = exports.HttpChainClient = exports.HttpChain = exports.isG1Rfc9380 = exports.isG1G2SwappedBeacon = exports.isUnchainedBeacon = exports.isChainedBeacon = exports.watch = exports.fetchBeaconByTime = exports.fetchBeacon = exports.defaultChainOptions = void 0;\nconst http_caching_chain_1 = __importDefault(__webpack_require__(/*! ./http-caching-chain */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/http-caching-chain.js\"));\nexports.HttpCachingChain = http_caching_chain_1.default;\nconst http_caching_chain_2 = __webpack_require__(/*! ./http-caching-chain */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/http-caching-chain.js\");\nObject.defineProperty(exports, \"HttpChain\", ({ enumerable: true, get: function () { return http_caching_chain_2.HttpChain; } }));\nconst http_chain_client_1 = __importDefault(__webpack_require__(/*! ./http-chain-client */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/http-chain-client.js\"));\nexports.HttpChainClient = http_chain_client_1.default;\nconst fastest_node_client_1 = __importDefault(__webpack_require__(/*! ./fastest-node-client */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/fastest-node-client.js\"));\nexports.FastestNodeClient = fastest_node_client_1.default;\nconst multi_beacon_node_1 = __importDefault(__webpack_require__(/*! ./multi-beacon-node */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/multi-beacon-node.js\"));\nexports.MultiBeaconNode = multi_beacon_node_1.default;\nconst util_1 = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/util.js\");\nObject.defineProperty(exports, \"roundAt\", ({ enumerable: true, get: function () { return util_1.roundAt; } }));\nObject.defineProperty(exports, \"roundTime\", ({ enumerable: true, get: function () { return util_1.roundTime; } }));\nconst beacon_verification_1 = __webpack_require__(/*! ./beacon-verification */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/beacon-verification.js\");\nexports.defaultChainOptions = {\n    disableBeaconVerification: false,\n    noCache: false,\n};\n// fetch a beacon for a given `roundNumber` or get the latest beacon by omitting the `roundNumber`\nasync function fetchBeacon(client, roundNumber) {\n    if (!roundNumber) {\n        roundNumber = (0, util_1.roundAt)(Date.now(), await client.chain().info());\n    }\n    if (roundNumber < 1) {\n        throw Error('Cannot request lower than round number 1');\n    }\n    const beacon = await client.get(roundNumber);\n    return validatedBeacon(client, beacon, roundNumber);\n}\nexports.fetchBeacon = fetchBeacon;\n// fetch the most recent beacon to have been emitted at a given `time` in epoch ms\nasync function fetchBeaconByTime(client, time) {\n    const info = await client.chain().info();\n    const roundNumber = (0, util_1.roundAt)(time, info);\n    return fetchBeacon(client, roundNumber);\n}\nexports.fetchBeaconByTime = fetchBeaconByTime;\n// an async generator emitting beacons from the latest round onwards\nasync function* watch(client, abortController, options = defaultWatchOptions) {\n    const info = await client.chain().info();\n    let currentRound = (0, util_1.roundAt)(Date.now(), info);\n    while (!abortController.signal.aborted) {\n        const now = Date.now();\n        await (0, util_1.sleep)((0, util_1.roundTime)(info, currentRound) - now);\n        const beacon = await (0, util_1.retryOnError)(async () => client.get(currentRound), options.retriesOnFailure);\n        yield validatedBeacon(client, beacon, currentRound);\n        currentRound = currentRound + 1;\n    }\n}\nexports.watch = watch;\nconst defaultWatchOptions = {\n    retriesOnFailure: 3\n};\n// internal function for validating a beacon if validation has not been disabled in the client options\nasync function validatedBeacon(client, beacon, expectedRound) {\n    if (client.options.disableBeaconVerification) {\n        return beacon;\n    }\n    const info = await client.chain().info();\n    if (!await (0, beacon_verification_1.verifyBeacon)(info, beacon, expectedRound)) {\n        throw Error('The beacon retrieved was not valid!');\n    }\n    return beacon;\n}\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nfunction isChainedBeacon(value, info) {\n    return info.schemeID === 'pedersen-bls-chained' &&\n        !!value.previous_signature &&\n        !!value.randomness &&\n        !!value.signature &&\n        value.round > 0;\n}\nexports.isChainedBeacon = isChainedBeacon;\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nfunction isUnchainedBeacon(value, info) {\n    return info.schemeID === 'pedersen-bls-unchained' &&\n        !!value.randomness &&\n        !!value.signature &&\n        value.previous_signature === undefined &&\n        value.round > 0;\n}\nexports.isUnchainedBeacon = isUnchainedBeacon;\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nfunction isG1G2SwappedBeacon(value, info) {\n    return info.schemeID === 'bls-unchained-on-g1' &&\n        !!value.randomness &&\n        !!value.signature &&\n        value.previous_signature === undefined &&\n        value.round > 0;\n}\nexports.isG1G2SwappedBeacon = isG1G2SwappedBeacon;\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nfunction isG1Rfc9380(value, info) {\n    return info.schemeID === 'bls-unchained-g1-rfc9380' &&\n        !!value.randomness &&\n        !!value.signature &&\n        value.previous_signature === undefined &&\n        value.round > 0;\n}\nexports.isG1Rfc9380 = isG1Rfc9380;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/node_modules/drand-client/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/node_modules/drand-client/multi-beacon-node.js":
/*!******************************************************************************!*\
  !*** ./node_modules/tlock-js/node_modules/drand-client/multi-beacon-node.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst index_1 = __webpack_require__(/*! ./index */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/index.js\");\nconst http_caching_chain_1 = __importDefault(__webpack_require__(/*! ./http-caching-chain */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/http-caching-chain.js\"));\nconst util_1 = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/util.js\");\nclass MultiBeaconNode {\n    baseUrl;\n    options;\n    constructor(baseUrl, options = index_1.defaultChainOptions) {\n        this.baseUrl = baseUrl;\n        this.options = options;\n    }\n    async chains() {\n        const chains = await (0, util_1.jsonOrError)(`${this.baseUrl}/chains`);\n        if (!Array.isArray(chains)) {\n            throw Error(`Expected an array from the chains endpoint but got: ${chains}`);\n        }\n        return chains.map((chainHash) => new http_caching_chain_1.default(`${this.baseUrl}/${chainHash}`), this.options);\n    }\n    async health() {\n        const response = await fetch(`${this.baseUrl}/health`);\n        if (!response.ok) {\n            return {\n                status: response.status,\n                current: -1,\n                expected: -1\n            };\n        }\n        const json = await response.json();\n        return {\n            status: response.status,\n            current: json.current ?? -1,\n            expected: json.expected ?? -1,\n        };\n    }\n}\nexports[\"default\"] = MultiBeaconNode;\n//# sourceMappingURL=multi-beacon-node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvbm9kZV9tb2R1bGVzL2RyYW5kLWNsaWVudC9tdWx0aS1iZWFjb24tbm9kZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixtQkFBTyxDQUFDLGlGQUFTO0FBQ2pDLDZDQUE2QyxtQkFBTyxDQUFDLDJHQUFzQjtBQUMzRSxlQUFlLG1CQUFPLENBQUMsK0VBQVE7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxhQUFhO0FBQ3JFO0FBQ0EsK0VBQStFLE9BQU87QUFDdEY7QUFDQSw2RUFBNkUsYUFBYSxHQUFHLFVBQVU7QUFDdkc7QUFDQTtBQUNBLHdDQUF3QyxhQUFhO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXdpLWFwcC8uL25vZGVfbW9kdWxlcy90bG9jay1qcy9ub2RlX21vZHVsZXMvZHJhbmQtY2xpZW50L211bHRpLWJlYWNvbi1ub2RlLmpzP2UzNjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBpbmRleF8xID0gcmVxdWlyZShcIi4vaW5kZXhcIik7XG5jb25zdCBodHRwX2NhY2hpbmdfY2hhaW5fMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9odHRwLWNhY2hpbmctY2hhaW5cIikpO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcIi4vdXRpbFwiKTtcbmNsYXNzIE11bHRpQmVhY29uTm9kZSB7XG4gICAgYmFzZVVybDtcbiAgICBvcHRpb25zO1xuICAgIGNvbnN0cnVjdG9yKGJhc2VVcmwsIG9wdGlvbnMgPSBpbmRleF8xLmRlZmF1bHRDaGFpbk9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5iYXNlVXJsID0gYmFzZVVybDtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICB9XG4gICAgYXN5bmMgY2hhaW5zKCkge1xuICAgICAgICBjb25zdCBjaGFpbnMgPSBhd2FpdCAoMCwgdXRpbF8xLmpzb25PckVycm9yKShgJHt0aGlzLmJhc2VVcmx9L2NoYWluc2ApO1xuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkoY2hhaW5zKSkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYEV4cGVjdGVkIGFuIGFycmF5IGZyb20gdGhlIGNoYWlucyBlbmRwb2ludCBidXQgZ290OiAke2NoYWluc31gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY2hhaW5zLm1hcCgoY2hhaW5IYXNoKSA9PiBuZXcgaHR0cF9jYWNoaW5nX2NoYWluXzEuZGVmYXVsdChgJHt0aGlzLmJhc2VVcmx9LyR7Y2hhaW5IYXNofWApLCB0aGlzLm9wdGlvbnMpO1xuICAgIH1cbiAgICBhc3luYyBoZWFsdGgoKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS9oZWFsdGhgKTtcbiAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgICAgICAgICAgICBjdXJyZW50OiAtMSxcbiAgICAgICAgICAgICAgICBleHBlY3RlZDogLTFcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QganNvbiA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgICAgICAgY3VycmVudDoganNvbi5jdXJyZW50ID8/IC0xLFxuICAgICAgICAgICAgZXhwZWN0ZWQ6IGpzb24uZXhwZWN0ZWQgPz8gLTEsXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gTXVsdGlCZWFjb25Ob2RlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXVsdGktYmVhY29uLW5vZGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/node_modules/drand-client/multi-beacon-node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/node_modules/drand-client/speedtest.js":
/*!**********************************************************************!*\
  !*** ./node_modules/tlock-js/node_modules/drand-client/speedtest.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createSpeedTest = void 0;\n// a utility that tracks the last `samples` speed test execution times and returns the mean running time of them.\nfunction createSpeedTest(test, frequencyMs, samples = 5) {\n    let queue = new DroppingQueue(samples);\n    let intervalId = null;\n    const executeSpeedTest = async () => {\n        const startTime = Date.now();\n        try {\n            await test();\n            queue.add(Date.now() - startTime);\n        }\n        catch (err) {\n            queue.add(Number.MAX_SAFE_INTEGER);\n        }\n    };\n    return {\n        start: () => {\n            if (intervalId != null) {\n                console.warn('Attempted to start a speed test, but it had already been started!');\n                return;\n            }\n            intervalId = setInterval(executeSpeedTest, frequencyMs);\n        },\n        stop: () => {\n            if (intervalId !== null) {\n                clearInterval(intervalId);\n                intervalId = null;\n                queue = new DroppingQueue(samples);\n            }\n        },\n        average: () => {\n            const values = queue.get();\n            if (values.length === 0) {\n                return Number.MAX_SAFE_INTEGER;\n            }\n            const total = values.reduce((acc, next) => acc + next, 0);\n            return total / values.length;\n        }\n    };\n}\nexports.createSpeedTest = createSpeedTest;\nclass DroppingQueue {\n    capacity;\n    values = [];\n    constructor(capacity) {\n        this.capacity = capacity;\n    }\n    add(value) {\n        this.values.push(value);\n        if (this.values.length > this.capacity) {\n            this.values.pop();\n        }\n    }\n    get() {\n        return this.values;\n    }\n}\n//# sourceMappingURL=speedtest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvbm9kZV9tb2R1bGVzL2RyYW5kLWNsaWVudC9zcGVlZHRlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpd2ktYXBwLy4vbm9kZV9tb2R1bGVzL3Rsb2NrLWpzL25vZGVfbW9kdWxlcy9kcmFuZC1jbGllbnQvc3BlZWR0ZXN0LmpzPzM0M2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVNwZWVkVGVzdCA9IHZvaWQgMDtcbi8vIGEgdXRpbGl0eSB0aGF0IHRyYWNrcyB0aGUgbGFzdCBgc2FtcGxlc2Agc3BlZWQgdGVzdCBleGVjdXRpb24gdGltZXMgYW5kIHJldHVybnMgdGhlIG1lYW4gcnVubmluZyB0aW1lIG9mIHRoZW0uXG5mdW5jdGlvbiBjcmVhdGVTcGVlZFRlc3QodGVzdCwgZnJlcXVlbmN5TXMsIHNhbXBsZXMgPSA1KSB7XG4gICAgbGV0IHF1ZXVlID0gbmV3IERyb3BwaW5nUXVldWUoc2FtcGxlcyk7XG4gICAgbGV0IGludGVydmFsSWQgPSBudWxsO1xuICAgIGNvbnN0IGV4ZWN1dGVTcGVlZFRlc3QgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCB0ZXN0KCk7XG4gICAgICAgICAgICBxdWV1ZS5hZGQoRGF0ZS5ub3coKSAtIHN0YXJ0VGltZSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgcXVldWUuYWRkKE51bWJlci5NQVhfU0FGRV9JTlRFR0VSKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3RhcnQ6ICgpID0+IHtcbiAgICAgICAgICAgIGlmIChpbnRlcnZhbElkICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ0F0dGVtcHRlZCB0byBzdGFydCBhIHNwZWVkIHRlc3QsIGJ1dCBpdCBoYWQgYWxyZWFkeSBiZWVuIHN0YXJ0ZWQhJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaW50ZXJ2YWxJZCA9IHNldEludGVydmFsKGV4ZWN1dGVTcGVlZFRlc3QsIGZyZXF1ZW5jeU1zKTtcbiAgICAgICAgfSxcbiAgICAgICAgc3RvcDogKCkgPT4ge1xuICAgICAgICAgICAgaWYgKGludGVydmFsSWQgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsSWQpO1xuICAgICAgICAgICAgICAgIGludGVydmFsSWQgPSBudWxsO1xuICAgICAgICAgICAgICAgIHF1ZXVlID0gbmV3IERyb3BwaW5nUXVldWUoc2FtcGxlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGF2ZXJhZ2U6ICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IHF1ZXVlLmdldCgpO1xuICAgICAgICAgICAgaWYgKHZhbHVlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB0b3RhbCA9IHZhbHVlcy5yZWR1Y2UoKGFjYywgbmV4dCkgPT4gYWNjICsgbmV4dCwgMCk7XG4gICAgICAgICAgICByZXR1cm4gdG90YWwgLyB2YWx1ZXMubGVuZ3RoO1xuICAgICAgICB9XG4gICAgfTtcbn1cbmV4cG9ydHMuY3JlYXRlU3BlZWRUZXN0ID0gY3JlYXRlU3BlZWRUZXN0O1xuY2xhc3MgRHJvcHBpbmdRdWV1ZSB7XG4gICAgY2FwYWNpdHk7XG4gICAgdmFsdWVzID0gW107XG4gICAgY29uc3RydWN0b3IoY2FwYWNpdHkpIHtcbiAgICAgICAgdGhpcy5jYXBhY2l0eSA9IGNhcGFjaXR5O1xuICAgIH1cbiAgICBhZGQodmFsdWUpIHtcbiAgICAgICAgdGhpcy52YWx1ZXMucHVzaCh2YWx1ZSk7XG4gICAgICAgIGlmICh0aGlzLnZhbHVlcy5sZW5ndGggPiB0aGlzLmNhcGFjaXR5KSB7XG4gICAgICAgICAgICB0aGlzLnZhbHVlcy5wb3AoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlcztcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zcGVlZHRlc3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/node_modules/drand-client/speedtest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/node_modules/drand-client/util.js":
/*!*****************************************************************!*\
  !*** ./node_modules/tlock-js/node_modules/drand-client/util.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.retryOnError = exports.jsonOrError = exports.defaultHttpOptions = exports.roundTime = exports.roundAt = exports.sleep = void 0;\n// this is generated by the `precompile` npm script\n// using the package.json version itself messes with the generated javascript, so it must be known\n// at compile time\nconst version_1 = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/tlock-js/node_modules/drand-client/version.js\");\nfunction sleep(timeMs) {\n    return new Promise(resolve => {\n        if (timeMs <= 0) {\n            resolve();\n        }\n        setTimeout(resolve, timeMs);\n    });\n}\nexports.sleep = sleep;\nfunction roundAt(time, chain) {\n    if (!Number.isFinite(time)) {\n        throw new Error('Cannot use Infinity or NaN as a beacon time');\n    }\n    if (time < chain.genesis_time * 1000) {\n        throw Error('Cannot request a round before the genesis time');\n    }\n    return Math.floor((time - (chain.genesis_time * 1000)) / (chain.period * 1000)) + 1;\n}\nexports.roundAt = roundAt;\nfunction roundTime(chain, round) {\n    if (!Number.isFinite(round)) {\n        throw new Error('Cannot use Infinity or NaN as a round number');\n    }\n    round = round < 0 ? 0 : round;\n    return (chain.genesis_time + (round - 1) * chain.period) * 1000;\n}\nexports.roundTime = roundTime;\n// taking a separate `userAgent` param for backwards compatibility\nexports.defaultHttpOptions = {\n    userAgent: `drand-client-${version_1.LIB_VERSION}`,\n};\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nasync function jsonOrError(url, options = exports.defaultHttpOptions) {\n    const headers = { ...options.headers };\n    if (options.userAgent) {\n        headers['User-Agent'] = options.userAgent;\n    }\n    const response = await fetch(url, { headers });\n    if (!response.ok) {\n        throw Error(`Error response fetching ${url} - got ${response.status}`);\n    }\n    return await response.json();\n}\nexports.jsonOrError = jsonOrError;\nasync function retryOnError(fn, times) {\n    try {\n        return await fn();\n    }\n    catch (err) {\n        if (times === 0) {\n            throw err;\n        }\n        return retryOnError(fn, times - 1);\n    }\n}\nexports.retryOnError = retryOnError;\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvbm9kZV9tb2R1bGVzL2RyYW5kLWNsaWVudC91dGlsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQixHQUFHLG1CQUFtQixHQUFHLDBCQUEwQixHQUFHLGlCQUFpQixHQUFHLGVBQWUsR0FBRyxhQUFhO0FBQzdIO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLHFGQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSwwQkFBMEI7QUFDMUIsK0JBQStCLHNCQUFzQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLFNBQVM7QUFDakQ7QUFDQSwrQ0FBK0MsS0FBSyxRQUFRLGdCQUFnQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpd2ktYXBwLy4vbm9kZV9tb2R1bGVzL3Rsb2NrLWpzL25vZGVfbW9kdWxlcy9kcmFuZC1jbGllbnQvdXRpbC5qcz9iMTQyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5yZXRyeU9uRXJyb3IgPSBleHBvcnRzLmpzb25PckVycm9yID0gZXhwb3J0cy5kZWZhdWx0SHR0cE9wdGlvbnMgPSBleHBvcnRzLnJvdW5kVGltZSA9IGV4cG9ydHMucm91bmRBdCA9IGV4cG9ydHMuc2xlZXAgPSB2b2lkIDA7XG4vLyB0aGlzIGlzIGdlbmVyYXRlZCBieSB0aGUgYHByZWNvbXBpbGVgIG5wbSBzY3JpcHRcbi8vIHVzaW5nIHRoZSBwYWNrYWdlLmpzb24gdmVyc2lvbiBpdHNlbGYgbWVzc2VzIHdpdGggdGhlIGdlbmVyYXRlZCBqYXZhc2NyaXB0LCBzbyBpdCBtdXN0IGJlIGtub3duXG4vLyBhdCBjb21waWxlIHRpbWVcbmNvbnN0IHZlcnNpb25fMSA9IHJlcXVpcmUoXCIuL3ZlcnNpb25cIik7XG5mdW5jdGlvbiBzbGVlcCh0aW1lTXMpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgIGlmICh0aW1lTXMgPD0gMCkge1xuICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICB9XG4gICAgICAgIHNldFRpbWVvdXQocmVzb2x2ZSwgdGltZU1zKTtcbiAgICB9KTtcbn1cbmV4cG9ydHMuc2xlZXAgPSBzbGVlcDtcbmZ1bmN0aW9uIHJvdW5kQXQodGltZSwgY2hhaW4pIHtcbiAgICBpZiAoIU51bWJlci5pc0Zpbml0ZSh0aW1lKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCB1c2UgSW5maW5pdHkgb3IgTmFOIGFzIGEgYmVhY29uIHRpbWUnKTtcbiAgICB9XG4gICAgaWYgKHRpbWUgPCBjaGFpbi5nZW5lc2lzX3RpbWUgKiAxMDAwKSB7XG4gICAgICAgIHRocm93IEVycm9yKCdDYW5ub3QgcmVxdWVzdCBhIHJvdW5kIGJlZm9yZSB0aGUgZ2VuZXNpcyB0aW1lJyk7XG4gICAgfVxuICAgIHJldHVybiBNYXRoLmZsb29yKCh0aW1lIC0gKGNoYWluLmdlbmVzaXNfdGltZSAqIDEwMDApKSAvIChjaGFpbi5wZXJpb2QgKiAxMDAwKSkgKyAxO1xufVxuZXhwb3J0cy5yb3VuZEF0ID0gcm91bmRBdDtcbmZ1bmN0aW9uIHJvdW5kVGltZShjaGFpbiwgcm91bmQpIHtcbiAgICBpZiAoIU51bWJlci5pc0Zpbml0ZShyb3VuZCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgdXNlIEluZmluaXR5IG9yIE5hTiBhcyBhIHJvdW5kIG51bWJlcicpO1xuICAgIH1cbiAgICByb3VuZCA9IHJvdW5kIDwgMCA/IDAgOiByb3VuZDtcbiAgICByZXR1cm4gKGNoYWluLmdlbmVzaXNfdGltZSArIChyb3VuZCAtIDEpICogY2hhaW4ucGVyaW9kKSAqIDEwMDA7XG59XG5leHBvcnRzLnJvdW5kVGltZSA9IHJvdW5kVGltZTtcbi8vIHRha2luZyBhIHNlcGFyYXRlIGB1c2VyQWdlbnRgIHBhcmFtIGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxuZXhwb3J0cy5kZWZhdWx0SHR0cE9wdGlvbnMgPSB7XG4gICAgdXNlckFnZW50OiBgZHJhbmQtY2xpZW50LSR7dmVyc2lvbl8xLkxJQl9WRVJTSU9OfWAsXG59O1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lICBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5hc3luYyBmdW5jdGlvbiBqc29uT3JFcnJvcih1cmwsIG9wdGlvbnMgPSBleHBvcnRzLmRlZmF1bHRIdHRwT3B0aW9ucykge1xuICAgIGNvbnN0IGhlYWRlcnMgPSB7IC4uLm9wdGlvbnMuaGVhZGVycyB9O1xuICAgIGlmIChvcHRpb25zLnVzZXJBZ2VudCkge1xuICAgICAgICBoZWFkZXJzWydVc2VyLUFnZW50J10gPSBvcHRpb25zLnVzZXJBZ2VudDtcbiAgICB9XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHsgaGVhZGVycyB9KTtcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHRocm93IEVycm9yKGBFcnJvciByZXNwb25zZSBmZXRjaGluZyAke3VybH0gLSBnb3QgJHtyZXNwb25zZS5zdGF0dXN9YCk7XG4gICAgfVxuICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7XG59XG5leHBvcnRzLmpzb25PckVycm9yID0ganNvbk9yRXJyb3I7XG5hc3luYyBmdW5jdGlvbiByZXRyeU9uRXJyb3IoZm4sIHRpbWVzKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IGZuKCk7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgaWYgKHRpbWVzID09PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJldHJ5T25FcnJvcihmbiwgdGltZXMgLSAxKTtcbiAgICB9XG59XG5leHBvcnRzLnJldHJ5T25FcnJvciA9IHJldHJ5T25FcnJvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/node_modules/drand-client/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/node_modules/drand-client/version.js":
/*!********************************************************************!*\
  !*** ./node_modules/tlock-js/node_modules/drand-client/version.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LIB_VERSION = void 0;\nexports.LIB_VERSION = \"1.2.5\";\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvbm9kZV9tb2R1bGVzL2RyYW5kLWNsaWVudC92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQixtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXdpLWFwcC8uL25vZGVfbW9kdWxlcy90bG9jay1qcy9ub2RlX21vZHVsZXMvZHJhbmQtY2xpZW50L3ZlcnNpb24uanM/YTI3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTElCX1ZFUlNJT04gPSB2b2lkIDA7XG5leHBvcnRzLkxJQl9WRVJTSU9OID0gXCIxLjIuNVwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/node_modules/drand-client/version.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tlock-js/version.js":
/*!******************************************!*\
  !*** ./node_modules/tlock-js/version.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LIB_VERSION = void 0;\nexports.LIB_VERSION = \"0.9.0\";\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGl3aS1hcHAvLi9ub2RlX21vZHVsZXMvdGxvY2stanMvdmVyc2lvbi5qcz9hMGQzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5MSUJfVkVSU0lPTiA9IHZvaWQgMDtcbmV4cG9ydHMuTElCX1ZFUlNJT04gPSBcIjAuOS4wXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tlock-js/version.js\n");

/***/ })

};
;